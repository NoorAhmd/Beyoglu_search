{"ast":null,"code":"import _classCallCheck from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, defineInjectable, inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n\nimport * as ɵngcc0 from '@angular/core';\nvar\n/** @type {?} */\nhasV8BreakIterator = typeof Intl !== 'undefined' &&\n/** @type {?} */\nIntl.v8BreakIterator;\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\n\nvar Platform =\n/**\n * \\@breaking-change v7.0.0 remove optional decorator\n * @param {?=} _platformId\n */\nfunction Platform(_platformId) {\n  _classCallCheck(this, Platform);\n\n  this._platformId = _platformId;\n  /**\n   * Whether the Angular application is being rendered in the browser.\n   * We want to use the Angular platform check because if the Document is shimmed\n   * without the navigator, the following checks will fail. This is preferred because\n   * sometimes the Document may be shimmed without the user's knowledge or intention\n   */\n\n  this.isBrowser = this._platformId ? isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n  /**\n   * Whether the current browser is Microsoft Edge.\n   */\n\n  this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n  /**\n   * Whether the current rendering engine is Microsoft Trident.\n   */\n\n  this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n  /**\n   * Whether the current rendering engine is Blink.\n   */\n\n  this.BLINK = this.isBrowser && !!(\n  /** @type {?} */\n  window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT;\n  /**\n   * Whether the current rendering engine is WebKit.\n   */\n\n  this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n  /**\n   * Whether the current platform is Apple iOS.\n   */\n\n  this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !\n  /** @type {?} */\n  window.MSStream;\n  /**\n   * Whether the current browser is Firefox.\n   */\n\n  this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n  /**\n   * Whether the current platform is Android.\n   */\n\n  this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n  /**\n   * Whether the current browser is Safari.\n   */\n\n  this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n};\n\nPlatform.ɵfac = function Platform_Factory(t) {\n  return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID, 8));\n};\n\nPlatform.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: Platform,\n  factory: Platform.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nPlatform.ctorParameters = function () {\n  return [{\n    type: Object,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n/** @nocollapse */\n\n\nPlatform.ngInjectableDef = defineInjectable({\n  factory: function Platform_Factory() {\n    return new Platform(inject(PLATFORM_ID, 8));\n  },\n  token: Platform,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Platform, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: Object,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n */\n\n\nvar\n/** @type {?} */\nsupportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\n\nfunction supportsPassiveEventListeners() {\n  if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n    try {\n      window.addEventListener('test',\n      /** @type {?} */\n      null, Object.defineProperty({}, 'passive', {\n        get: function get() {\n          return supportsPassiveEvents = true;\n        }\n      }));\n    } finally {\n      supportsPassiveEvents = supportsPassiveEvents || false;\n    }\n  }\n\n  return supportsPassiveEvents;\n}\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\n\n\nfunction supportsScrollBehavior() {\n  return !!(document && document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style);\n}\n/**\n * Cached result Set of input types support by the current browser.\n */\n\n\nvar\n/** @type {?} */\nsupportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n */\n\nvar\n/** @type {?} */\ncandidateInputTypes = ['color', 'button', 'checkbox', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week'];\n/**\n * @return {?} The input types supported by this browser.\n */\n\nfunction getSupportedInputTypes() {\n  // Result is cached.\n  if (supportedInputTypes) {\n    return supportedInputTypes;\n  } // We can't check if an input type is not supported until we're on the browser, so say that\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\n  // just a helper function and can't inject it.\n\n\n  if (typeof document !== 'object' || !document) {\n    supportedInputTypes = new Set(candidateInputTypes);\n    return supportedInputTypes;\n  }\n\n  var\n  /** @type {?} */\n  featureTestInput = document.createElement('input');\n  supportedInputTypes = new Set(candidateInputTypes.filter(function (value) {\n    featureTestInput.setAttribute('type', value);\n    return featureTestInput.type === value;\n  }));\n  return supportedInputTypes;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar PlatformModule = function PlatformModule() {\n  _classCallCheck(this, PlatformModule);\n};\n\nPlatformModule.ɵfac = function PlatformModule_Factory(t) {\n  return new (t || PlatformModule)();\n};\n\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: PlatformModule\n});\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n    type: NgModule\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport { Platform, supportsPassiveEventListeners, supportsScrollBehavior, getSupportedInputTypes, PlatformModule }; //# sourceMappingURL=platform.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/@angular/cdk/__ivy_ngcc__/esm2015/platform.js"],"names":["Inject","Injectable","Optional","PLATFORM_ID","NgModule","defineInjectable","inject","isPlatformBrowser","ɵngcc0","hasV8BreakIterator","Intl","v8BreakIterator","Platform","_platformId","isBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","MSStream","FIREFOX","ANDROID","SAFARI","ɵfac","Platform_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ctorParameters","type","Object","decorators","args","ngInjectableDef","ngDevMode","ɵsetClassMetadata","supportsPassiveEvents","supportsPassiveEventListeners","addEventListener","defineProperty","get","supportsScrollBehavior","documentElement","style","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","Set","featureTestInput","createElement","filter","value","setAttribute","PlatformModule","PlatformModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, defineInjectable, inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nimport * as ɵngcc0 from '@angular/core';\nconst /** @type {?} */ hasV8BreakIterator = (typeof Intl !== 'undefined' && (/** @type {?} */ (Intl)).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change v7.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         * We want to use the Angular platform check because if the Document is shimmed\n         * without the navigator, the following checks will fail. This is preferred because\n         * sometimes the Document may be shimmed without the user's knowledge or intention\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        this.BLINK = this.isBrowser && (!!((/** @type {?} */ (window)).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !(/** @type {?} */ (window)).MSStream;\n        /**\n         * Whether the current browser is Firefox.\n         */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        /**\n         * Whether the current browser is Safari.\n         */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID, 8)); };\nPlatform.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Platform, factory: Platform.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] },] },\n];\n/** @nocollapse */ Platform.ngInjectableDef = defineInjectable({ factory: function Platform_Factory() { return new Platform(inject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n */\nlet /** @type {?} */ supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', /** @type {?} */ ((null)), Object.defineProperty({}, 'passive', {\n                get: () => supportsPassiveEvents = true\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(document && document.documentElement && document.documentElement.style &&\n        'scrollBehavior' in document.documentElement.style);\n}\n/**\n * Cached result Set of input types support by the current browser.\n */\nlet /** @type {?} */ supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n */\nconst /** @type {?} */ candidateInputTypes = [\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let /** @type {?} */ featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.ɵfac = function PlatformModule_Factory(t) { return new (t || PlatformModule)(); };\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { Platform, supportsPassiveEventListeners, supportsScrollBehavior, getSupportedInputTypes, PlatformModule };\n\n//# sourceMappingURL=platform.js.map"]},"metadata":{},"sourceType":"module"}