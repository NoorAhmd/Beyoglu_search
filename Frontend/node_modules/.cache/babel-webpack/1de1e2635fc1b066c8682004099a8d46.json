{"ast":null,"code":"import _get from \"/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, Optional, SkipSelf, ViewContainerRef, ViewEncapsulation, ElementRef, Host, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkAccordion, CdkAccordionItem, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { animate, animateChild, group, state, style, transition, trigger, query } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, merge, Subscription } from 'rxjs';\nimport { filter, startWith, take } from 'rxjs/operators';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Directive for a Material Design Accordion.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) {}\n\nvar _c0 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nvar _c1 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\n\nvar _c2 = function _c2(a0, a1) {\n  return {\n    collapsedHeight: a0,\n    expandedHeight: a1\n  };\n};\n\nvar _c3 = function _c3(a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n  }\n}\n\nvar _c4 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nvar _c5 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\n\nvar MatAccordion = /*#__PURE__*/function (_CdkAccordion) {\n  _inherits(MatAccordion, _CdkAccordion);\n\n  var _super = _createSuper(MatAccordion);\n\n  function MatAccordion() {\n    var _this;\n\n    _classCallCheck(this, MatAccordion);\n\n    _this = _super.apply(this, arguments);\n    _this._hideToggle = false;\n    /**\n     * The display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     */\n\n    _this.displayMode = 'default';\n    return _this;\n  }\n  /**\n   * Whether the expansion indicator should be hidden.\n   * @return {?}\n   */\n\n\n  _createClass(MatAccordion, [{\n    key: \"hideToggle\",\n    get: function get() {\n      return this._hideToggle;\n    }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    ,\n    set: function set(show) {\n      this._hideToggle = coerceBooleanProperty(show);\n    }\n  }]);\n\n  return MatAccordion;\n}(CdkAccordion);\n\nMatAccordion.ɵfac = function MatAccordion_Factory(t) {\n  return ɵMatAccordion_BaseFactory(t || MatAccordion);\n};\n\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatAccordion,\n  selectors: [[\"mat-accordion\"]],\n  hostAttrs: [1, \"mat-accordion\"],\n  inputs: {\n    displayMode: \"displayMode\",\n    hideToggle: \"hideToggle\"\n  },\n  exportAs: [\"matAccordion\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatAccordion.propDecorators = {\n  \"hideToggle\": [{\n    type: Input\n  }],\n  \"displayMode\": [{\n    type: Input\n  }]\n};\nvar ɵMatAccordion_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-accordion',\n      exportAs: 'matAccordion',\n      host: {\n        class: 'mat-accordion'\n      }\n    }]\n  }], null, {\n    displayMode: [{\n      type: Input\n    }],\n    hideToggle: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Time and timing curve for expansion panel animations.\n */\n\n\nvar\n/** @type {?} */\nEXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n */\n\nvar\n/** @type {?} */\nmatExpansionAnimations = {\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: trigger('indicatorRotate', [state('collapsed', style({\n    transform: 'rotate(0deg)'\n  })), state('expanded', style({\n    transform: 'rotate(180deg)'\n  })), transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))]),\n\n  /** Animation that expands and collapses the panel header height. */\n  expansionHeaderHeight: trigger('expansionHeight', [state('collapsed', style({\n    height: '{{collapsedHeight}}'\n  }), {\n    params: {\n      collapsedHeight: '48px'\n    }\n  }), state('expanded', style({\n    height: '{{expandedHeight}}'\n  }), {\n    params: {\n      expandedHeight: '64px'\n    }\n  }), transition('expanded <=> collapsed', group([query('@indicatorRotate', animateChild(), {\n    optional: true\n  }), animate(EXPANSION_PANEL_ANIMATION_TIMING)]))]),\n\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: trigger('bodyExpansion', [state('collapsed', style({\n    height: '0px',\n    visibility: 'hidden'\n  })), state('expanded', style({\n    height: '*',\n    visibility: 'visible'\n  })), transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\n\nvar MatExpansionPanelContent =\n/**\n * @param {?} _template\n */\nfunction MatExpansionPanelContent(_template) {\n  _classCallCheck(this, MatExpansionPanelContent);\n\n  this._template = _template;\n};\n\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) {\n  return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelContent,\n  selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]]\n});\n/** @nocollapse */\n\nMatExpansionPanelContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matExpansionPanelContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Counter for generating unique element ids.\n */\n\n\nvar\n/** @type {?} */\nuniqueId = 0;\nvar ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\n\nvar MatExpansionPanel = /*#__PURE__*/function (_CdkAccordionItem) {\n  _inherits(MatExpansionPanel, _CdkAccordionItem);\n\n  var _super2 = _createSuper(MatExpansionPanel);\n\n  /**\n   * @param {?} accordion\n   * @param {?} _changeDetectorRef\n   * @param {?} _uniqueSelectionDispatcher\n   * @param {?} _viewContainerRef\n   */\n  function MatExpansionPanel(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef) {\n    var _this2;\n\n    _classCallCheck(this, MatExpansionPanel);\n\n    _this2 = _super2.call(this, accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    _this2._viewContainerRef = _viewContainerRef;\n    _this2._hideToggle = false;\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     */\n\n    _this2._inputChanges = new Subject();\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     */\n\n    _this2._headerId = \"mat-expansion-panel-header-\".concat(uniqueId++);\n    _this2.accordion = accordion;\n    return _this2;\n  }\n  /**\n   * Whether the toggle indicator should be hidden.\n   * @return {?}\n   */\n\n\n  _createClass(MatExpansionPanel, [{\n    key: \"hideToggle\",\n    get: function get() {\n      return this._hideToggle;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getHideToggle\",\n    value: function _getHideToggle() {\n      if (this.accordion) {\n        return this.accordion.hideToggle;\n      }\n\n      return this.hideToggle;\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_hasSpacing\",\n    value: function _hasSpacing() {\n      if (this.accordion) {\n        return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n      }\n\n      return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getExpandedState\",\n    value: function _getExpandedState() {\n      return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this3 = this;\n\n      if (this._lazyContent) {\n        // Render the content as soon as the panel becomes open.\n        this.opened.pipe(startWith(\n        /** @type {?} */\n        null), filter(function () {\n          return _this3.expanded && !_this3._portal;\n        }), take(1)).subscribe(function () {\n          _this3._portal = new TemplatePortal(_this3._lazyContent._template, _this3._viewContainerRef);\n        });\n      }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(MatExpansionPanel.prototype), \"ngOnDestroy\", this).call(this);\n\n      this._inputChanges.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_bodyAnimation\",\n    value: function _bodyAnimation(event) {\n      var\n      /** @type {?} */\n      classList = event.element.classList;\n      var\n      /** @type {?} */\n      cssClass = 'mat-expanded';\n      var phaseName = event.phaseName,\n          toState = event.toState; // Toggle the body's `overflow: hidden` class when closing starts or when expansion ends in\n      // order to prevent the cases where switching too early would cause the animation to jump.\n      // Note that we do it directly on the DOM element to avoid the slight delay that comes\n      // with doing it via change detection.\n\n      if (phaseName === 'done' && toState === 'expanded') {\n        classList.add(cssClass);\n      } else if (phaseName === 'start' && toState === 'collapsed') {\n        classList.remove(cssClass);\n      }\n    }\n  }]);\n\n  return MatExpansionPanel;\n}(CdkAccordionItem);\n\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) {\n  return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MatAccordion, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n};\n\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanel,\n  selectors: [[\"mat-expansion-panel\"]],\n  contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-expansion-panel\"],\n  hostVars: 4,\n  hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    expanded: \"expanded\",\n    hideToggle: \"hideToggle\"\n  },\n  outputs: {\n    opened: \"opened\",\n    closed: \"closed\",\n    expandedChange: \"expandedChange\"\n  },\n  exportAs: [\"matExpansionPanel\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([// Provide MatAccordion as undefined to prevent nested expansion panels from registering\n  // to the same accordion.\n  {\n    provide: MatAccordion,\n    useValue: ɵ0\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 7,\n  vars: 4,\n  consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]],\n  template: function MatExpansionPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) {\n        return ctx._bodyAnimation($event);\n      })(\"@bodyExpansion.start\", function MatExpansionPanel_Template_div_animation_bodyExpansion_start_1_listener($event) {\n        return ctx._bodyAnimation($event);\n      });\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4, 1);\n      ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(6, 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    }\n  },\n  directives: [ɵngcc2.CdkPortalOutlet],\n  styles: [\".mat-expansion-panel{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);box-sizing:content-box;display:block;margin:0;transition:margin 225ms cubic-bezier(.4,0,.2,1)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}@media screen and (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel-content{overflow:hidden}.mat-expansion-panel-content.mat-expanded{overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.bodyExpansion]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatExpansionPanel.ctorParameters = function () {\n  return [{\n    type: MatAccordion,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: UniqueSelectionDispatcher\n  }, {\n    type: ViewContainerRef\n  }];\n};\n\nMatExpansionPanel.propDecorators = {\n  \"hideToggle\": [{\n    type: Input\n  }],\n  \"_lazyContent\": [{\n    type: ContentChild,\n    args: [MatExpansionPanelContent]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n    type: Component,\n    args: [{\n      styles: [\".mat-expansion-panel{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);box-sizing:content-box;display:block;margin:0;transition:margin 225ms cubic-bezier(.4,0,.2,1)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}@media screen and (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel-content{overflow:hidden}.mat-expansion-panel-content.mat-expanded{overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"],\n      selector: 'mat-expansion-panel',\n      exportAs: 'matExpansionPanel',\n      template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content><div class=\\\"mat-expansion-panel-content\\\" role=\\\"region\\\" [@bodyExpansion]=\\\"_getExpandedState()\\\" (@bodyExpansion.done)=\\\"_bodyAnimation($event)\\\" (@bodyExpansion.start)=\\\"_bodyAnimation($event)\\\" [attr.aria-labelledby]=\\\"_headerId\\\" [id]=\\\"id\\\" #body><div class=\\\"mat-expansion-panel-body\\\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template></div><ng-content select=\\\"mat-action-row\\\"></ng-content></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled', 'expanded'],\n      outputs: ['opened', 'closed', 'expandedChange'],\n      animations: [matExpansionAnimations.bodyExpansion],\n      providers: [// Provide MatAccordion as undefined to prevent nested expansion panels from registering\n      // to the same accordion.\n      {\n        provide: MatAccordion,\n        useValue: ɵ0\n      }],\n      host: {\n        'class': 'mat-expansion-panel',\n        '[class.mat-expanded]': 'expanded',\n        '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: MatAccordion,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.UniqueSelectionDispatcher\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }];\n  }, {\n    hideToggle: [{\n      type: Input\n    }],\n    _lazyContent: [{\n      type: ContentChild,\n      args: [MatExpansionPanelContent]\n    }]\n  });\n})();\n\nvar MatExpansionPanelActionRow = function MatExpansionPanelActionRow() {\n  _classCallCheck(this, MatExpansionPanelActionRow);\n};\n\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) {\n  return new (t || MatExpansionPanelActionRow)();\n};\n\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelActionRow,\n  selectors: [[\"mat-action-row\"]],\n  hostAttrs: [1, \"mat-action-row\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-action-row',\n      host: {\n        class: 'mat-action-row'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\n\n\nvar MatExpansionPanelHeader = /*#__PURE__*/function () {\n  /**\n   * @param {?} panel\n   * @param {?} _element\n   * @param {?} _focusMonitor\n   * @param {?} _changeDetectorRef\n   */\n  function MatExpansionPanelHeader(panel, _element, _focusMonitor, _changeDetectorRef) {\n    var _this4 = this;\n\n    _classCallCheck(this, MatExpansionPanelHeader);\n\n    this.panel = panel;\n    this._element = _element;\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parentChangeSubscription = Subscription.EMPTY; // Since the toggle state depends on an @Input on the panel, we\n    // need to  subscribe and trigger change detection manually.\n\n    this._parentChangeSubscription = merge(panel.opened, panel.closed, panel._inputChanges.pipe(filter(function (changes) {\n      return !!(changes[\"hideToggle\"] || changes[\"disabled\"]);\n    }))).subscribe(function () {\n      return _this4._changeDetectorRef.markForCheck();\n    });\n\n    _focusMonitor.monitor(_element.nativeElement);\n  }\n  /**\n   * Toggles the expanded state of the panel.\n   * @return {?}\n   */\n\n\n  _createClass(MatExpansionPanelHeader, [{\n    key: \"_toggle\",\n    value: function _toggle() {\n      this.panel.toggle();\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isExpanded\",\n    value: function _isExpanded() {\n      return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getExpandedState\",\n    value: function _getExpandedState() {\n      return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getPanelId\",\n    value: function _getPanelId() {\n      return this.panel.id;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_showToggle\",\n    value: function _showToggle() {\n      return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_keydown\",\n    value: function _keydown(event) {\n      switch (event.keyCode) {\n        // Toggle for space and enter keys.\n        case SPACE:\n        case ENTER:\n          event.preventDefault();\n\n          this._toggle();\n\n          break;\n\n        default:\n          return;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._parentChangeSubscription.unsubscribe();\n\n      this._focusMonitor.stopMonitoring(this._element.nativeElement);\n    }\n  }]);\n\n  return MatExpansionPanelHeader;\n}();\n\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) {\n  return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanelHeader,\n  selectors: [[\"mat-expansion-panel-header\"]],\n  hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\"],\n  hostVars: 14,\n  hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() {\n        return ctx._toggle();\n      })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.panel.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(11, _c3, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(8, _c2, ctx.collapsedHeight, ctx.expandedHeight)));\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded());\n    }\n  },\n  inputs: {\n    expandedHeight: \"expandedHeight\",\n    collapsedHeight: \"collapsedHeight\"\n  },\n  ngContentSelectors: _c5,\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]],\n  template: function MatExpansionPanelHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c4);\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵprojection(3, 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    }\n  },\n  directives: [ɵngcc4.NgIf],\n  styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.indicatorRotate, matExpansionAnimations.expansionHeaderHeight]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatExpansionPanelHeader.ctorParameters = function () {\n  return [{\n    type: MatExpansionPanel,\n    decorators: [{\n      type: Host\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: FocusMonitor\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nMatExpansionPanelHeader.propDecorators = {\n  \"expandedHeight\": [{\n    type: Input\n  }],\n  \"collapsedHeight\": [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel-header',\n      styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"],\n      template: \"<span class=\\\"mat-content\\\"><ng-content select=\\\"mat-panel-title\\\"></ng-content><ng-content select=\\\"mat-panel-description\\\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\" class=\\\"mat-expansion-indicator\\\"></span>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [matExpansionAnimations.indicatorRotate, matExpansionAnimations.expansionHeaderHeight],\n      host: {\n        'class': 'mat-expansion-panel-header',\n        'role': 'button',\n        '[attr.id]': 'panel._headerId',\n        '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n        '[attr.aria-controls]': '_getPanelId()',\n        '[attr.aria-expanded]': '_isExpanded()',\n        '[attr.aria-disabled]': 'panel.disabled',\n        '[class.mat-expanded]': '_isExpanded()',\n        '(click)': '_toggle()',\n        '(keydown)': '_keydown($event)',\n        '[@expansionHeight]': \"{\\n        value: _getExpandedState(),\\n        params: {\\n          collapsedHeight: collapsedHeight,\\n          expandedHeight: expandedHeight\\n        }\\n    }\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: MatExpansionPanel,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc3.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    expandedHeight: [{\n      type: Input\n    }],\n    collapsedHeight: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\n\n\nvar MatExpansionPanelDescription = function MatExpansionPanelDescription() {\n  _classCallCheck(this, MatExpansionPanelDescription);\n};\n\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) {\n  return new (t || MatExpansionPanelDescription)();\n};\n\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelDescription,\n  selectors: [[\"mat-panel-description\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-description\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-description',\n      host: {\n        class: 'mat-expansion-panel-header-description'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\n\n\nvar MatExpansionPanelTitle = function MatExpansionPanelTitle() {\n  _classCallCheck(this, MatExpansionPanelTitle);\n};\n\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) {\n  return new (t || MatExpansionPanelTitle)();\n};\n\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelTitle,\n  selectors: [[\"mat-panel-title\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-title\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-title',\n      host: {\n        class: 'mat-expansion-panel-header-title'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar MatExpansionModule = function MatExpansionModule() {\n  _classCallCheck(this, MatExpansionModule);\n};\n\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) {\n  return new (t || MatExpansionModule)();\n};\n\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatExpansionModule\n});\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule, CdkAccordionModule, PortalModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, {\n    declarations: function declarations() {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    },\n    imports: function imports() {\n      return [CommonModule, CdkAccordionModule, PortalModule];\n    },\n    exports: function exports() {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, CdkAccordionModule, PortalModule],\n      exports: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent],\n      declarations: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport { MatExpansionModule, MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle, MatExpansionPanelContent, EXPANSION_PANEL_ANIMATION_TIMING, matExpansionAnimations }; //# sourceMappingURL=expansion.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/@angular/material/__ivy_ngcc__/esm2015/expansion.js"],"names":["Directive","Input","TemplateRef","ChangeDetectionStrategy","ChangeDetectorRef","Component","ContentChild","Optional","SkipSelf","ViewContainerRef","ViewEncapsulation","ElementRef","Host","NgModule","coerceBooleanProperty","CdkAccordion","CdkAccordionItem","CdkAccordionModule","animate","animateChild","group","state","style","transition","trigger","query","UniqueSelectionDispatcher","TemplatePortal","PortalModule","Subject","merge","Subscription","filter","startWith","take","FocusMonitor","ENTER","SPACE","CommonModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c0","_c1","_c2","a0","a1","collapsedHeight","expandedHeight","_c3","value","params","MatExpansionPanelHeader_span_4_Template","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","_getExpandedState","_c4","_c5","MatAccordion","arguments","_hideToggle","displayMode","show","ɵfac","MatAccordion_Factory","t","ɵMatAccordion_BaseFactory","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","inputs","hideToggle","exportAs","features","ɵɵInheritDefinitionFeature","propDecorators","ɵɵgetInheritedFactory","ngDevMode","ɵsetClassMetadata","args","selector","host","class","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","expansionHeaderHeight","height","optional","bodyExpansion","visibility","MatExpansionPanelContent","_template","MatExpansionPanelContent_Factory","ɵɵdirectiveInject","ctorParameters","uniqueId","ɵ0","undefined","MatExpansionPanel","accordion","_changeDetectorRef","_uniqueSelectionDispatcher","_viewContainerRef","_inputChanges","_headerId","expanded","_lazyContent","opened","pipe","_portal","subscribe","changes","next","complete","event","classList","element","cssClass","phaseName","toState","add","remove","MatExpansionPanel_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","MatExpansionPanel_HostBindings","ɵɵclassProp","_hasSpacing","disabled","outputs","closed","expandedChange","ɵɵProvidersFeature","provide","useValue","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","consts","template","MatExpansionPanel_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵelementStart","ɵɵlistener","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","$event","_bodyAnimation","MatExpansionPanel_Template_div_animation_bodyExpansion_start_1_listener","ɵɵtemplate","ɵɵelementEnd","ɵɵadvance","id","ɵɵattribute","directives","CdkPortalOutlet","styles","encapsulation","data","animation","changeDetection","decorators","None","OnPush","animations","providers","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","EMPTY","markForCheck","monitor","nativeElement","toggle","keyCode","preventDefault","_toggle","unsubscribe","stopMonitoring","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","_keydown","_getPanelId","_isExpanded","ɵɵsyntheticHostProperty","ɵɵpureFunction2","MatExpansionPanelHeader_Template","_showToggle","NgIf","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatExpansionModule","MatExpansionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, Optional, SkipSelf, ViewContainerRef, ViewEncapsulation, ElementRef, Host, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkAccordion, CdkAccordionItem, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { animate, animateChild, group, state, style, transition, trigger, query } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, merge, Subscription } from 'rxjs';\nimport { filter, startWith, take } from 'rxjs/operators';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c0 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c1 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c2 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c3 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c4 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c5 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        this._hideToggle = false;\n        /**\n         * The display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], hostAttrs: [1, \"mat-accordion\"], inputs: { displayMode: \"displayMode\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatAccordion.propDecorators = {\n    \"hideToggle\": [{ type: Input },],\n    \"displayMode\": [{ type: Input },],\n};\nconst ɵMatAccordion_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                host: {\n                    class: 'mat-accordion'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n */\nconst /** @type {?} */ EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n */\nconst /** @type {?} */ matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel header height. */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n */\nlet /** @type {?} */ uniqueId = 0;\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._hideToggle = false;\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        this.accordion = accordion;\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    _getHideToggle() {\n        if (this.accordion) {\n            return this.accordion.hideToggle;\n        }\n        return this.hideToggle;\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(/** @type {?} */ ((null))), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._inputChanges.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _bodyAnimation(event) {\n        const /** @type {?} */ classList = event.element.classList;\n        const /** @type {?} */ cssClass = 'mat-expanded';\n        const { phaseName, toState } = event;\n        // Toggle the body's `overflow: hidden` class when closing starts or when expansion ends in\n        // order to prevent the cases where switching too early would cause the animation to jump.\n        // Note that we do it directly on the DOM element to avoid the slight delay that comes\n        // with doing it via change detection.\n        if (phaseName === 'done' && toState === 'expanded') {\n            classList.add(cssClass);\n        }\n        else if (phaseName === 'start' && toState === 'collapsed') {\n            classList.remove(cssClass);\n        }\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MatAccordion, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 4, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MatAccordion, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimation($event); })(\"@bodyExpansion.start\", function MatExpansionPanel_Template_div_animation_bodyExpansion_start_1_listener($event) { return ctx._bodyAnimation($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);box-sizing:content-box;display:block;margin:0;transition:margin 225ms cubic-bezier(.4,0,.2,1)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}@media screen and (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel-content{overflow:hidden}.mat-expansion-panel-content.mat-expanded{overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: MatAccordion, decorators: [{ type: Optional }, { type: SkipSelf },] },\n    { type: ChangeDetectorRef, },\n    { type: UniqueSelectionDispatcher, },\n    { type: ViewContainerRef, },\n];\nMatExpansionPanel.propDecorators = {\n    \"hideToggle\": [{ type: Input },],\n    \"_lazyContent\": [{ type: ContentChild, args: [MatExpansionPanelContent,] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{ styles: [\".mat-expansion-panel{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);box-sizing:content-box;display:block;margin:0;transition:margin 225ms cubic-bezier(.4,0,.2,1)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}@media screen and (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel-content{overflow:hidden}.mat-expansion-panel-content.mat-expanded{overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"],\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content><div class=\\\"mat-expansion-panel-content\\\" role=\\\"region\\\" [@bodyExpansion]=\\\"_getExpandedState()\\\" (@bodyExpansion.done)=\\\"_bodyAnimation($event)\\\" (@bodyExpansion.start)=\\\"_bodyAnimation($event)\\\" [attr.aria-labelledby]=\\\"_headerId\\\" [id]=\\\"id\\\" #body><div class=\\\"mat-expansion-panel-body\\\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template></div><ng-content select=\\\"mat-action-row\\\"></ng-content></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MatAccordion, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                } }]\n    }], function () { return [{ type: MatAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }]; }, { hideToggle: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }] }); })();\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to  subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, panel._inputChanges.pipe(filter(changes => !!(changes[\"hideToggle\"] || changes[\"disabled\"]))))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n        _focusMonitor.monitor(_element.nativeElement);\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        this.panel.toggle();\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                event.preventDefault();\n                this._toggle();\n                break;\n            default:\n                return;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element.nativeElement);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\"], hostVars: 14, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.panel.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(11, _c3, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(8, _c2, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded());\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c5, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host },] },\n    { type: ElementRef, },\n    { type: FocusMonitor, },\n    { type: ChangeDetectorRef, },\n];\nMatExpansionPanelHeader.propDecorators = {\n    \"expandedHeight\": [{ type: Input },],\n    \"collapsedHeight\": [{ type: Input },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-expansion-panel-header',\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"],\n                template: \"<span class=\\\"mat-content\\\"><ng-content select=\\\"mat-panel-title\\\"></ng-content><ng-content select=\\\"mat-panel-description\\\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\" class=\\\"mat-expansion-indicator\\\"></span>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                } }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); };\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MatExpansionModule, MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle, MatExpansionPanelContent, EXPANSION_PANEL_ANIMATION_TIMING, matExpansionAnimations };\n\n//# sourceMappingURL=expansion.js.map"]},"metadata":{},"sourceType":"module"}