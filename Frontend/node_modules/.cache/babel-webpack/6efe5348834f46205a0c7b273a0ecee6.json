{"ast":null,"code":"/**\n * @module ol/pointer/PointerEventHandler\n */\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\n\nvar CLONE_PROPS = [// MouseEvent\n['bubbles', false], ['cancelable', false], ['view', null], ['detail', null], ['screenX', 0], ['screenY', 0], ['clientX', 0], ['clientY', 0], ['ctrlKey', false], ['altKey', false], ['shiftKey', false], ['metaKey', false], ['button', 0], ['relatedTarget', null], // DOM Level 3\n['buttons', 0], // PointerEvent\n['pointerId', 0], ['width', 0], ['height', 0], ['pressure', 0], ['tiltX', 0], ['tiltY', 0], ['pointerType', ''], ['hwTimestamp', 0], ['isPrimary', false], // event instance\n['type', ''], ['target', null], ['currentTarget', null], ['which', 0]];\n\nvar PointerEventHandler = function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n\n    this.element_ = element;\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n\n    this.pointerMap = {};\n    /**\n     * @type {Object.<string, function(Event)>}\n     * @private\n     */\n\n    this.eventMap_ = {};\n    /**\n     * @type {Array.<module:ol/pointer/EventSource>}\n     * @private\n     */\n\n    this.eventSourceList_ = [];\n    this.registerSources();\n  }\n\n  if (EventTarget) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create(EventTarget && EventTarget.prototype);\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n\n  PointerEventHandler.prototype.registerSources = function registerSources() {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    } // register events on the viewport element\n\n\n    this.register_();\n  };\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {module:ol/pointer/EventSource} source The source event.\n   */\n\n\n  PointerEventHandler.prototype.registerSource = function registerSource(name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function (e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n\n\n  PointerEventHandler.prototype.register_ = function register_() {\n    var this$1 = this;\n    var l = this.eventSourceList_.length;\n\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.addEvents_(eventSource.getEvents());\n    }\n  };\n  /**\n   * Remove all registered events.\n   * @private\n   */\n\n\n  PointerEventHandler.prototype.unregister_ = function unregister_() {\n    var this$1 = this;\n    var l = this.eventSourceList_.length;\n\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.removeEvents_(eventSource.getEvents());\n    }\n  };\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n\n\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_(inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n\n\n  PointerEventHandler.prototype.addEvents_ = function addEvents_(events) {\n    events.forEach(function (eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n\n\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_(events) {\n    events.forEach(function (e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n\n\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent(event, inEvent) {\n    var eventCopy = {};\n\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  }; // EVENTS\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.down = function down(data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.move = function move(data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.up = function up(data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.enter = function enter(data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.leave = function leave(data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.over = function over(data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.out = function out(data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.cancel = function cancel(data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.leaveOut = function leaveOut(data, event) {\n    this.out(data, event);\n\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.enterOver = function enterOver(data, event) {\n    this.over(data, event);\n\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n\n\n  PointerEventHandler.prototype.contains_ = function contains_(container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n\n    return container.contains(contained);\n  }; // EVENT CREATION AND TRACKING\n\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n   */\n\n\n  PointerEventHandler.prototype.makeEvent = function makeEvent(inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.fireEvent = function fireEvent(inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n\n\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent(event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} The wrapped event.\n   */\n\n\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent(eventType, event) {\n    var pointerEvent = this.makeEvent(eventType, MouseSource.prepareEvent(event, this), event);\n    return pointerEvent;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal() {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget);\n\nexport default PointerEventHandler; //# sourceMappingURL=PointerEventHandler.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/ol/pointer/PointerEventHandler.js"],"names":["listen","unlisten","EventTarget","POINTER","MSPOINTER","TOUCH","PointerEventType","MouseSource","MsSource","NativeSource","PointerEvent","TouchSource","CLONE_PROPS","PointerEventHandler","element","call","element_","pointerMap","eventMap_","eventSourceList_","registerSources","__proto__","prototype","Object","create","constructor","registerSource","mouseSource","register_","name","source","s","newEvents","getEvents","forEach","e","handler","getHandlerForEvent","bind","push","this$1","l","length","i","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","inEvent","type","events","eventName","cloneEvent","event","eventCopy","ii","p","down","data","fireEvent","POINTERDOWN","move","POINTERMOVE","up","POINTERUP","enter","bubbles","POINTERENTER","leave","POINTERLEAVE","over","POINTEROVER","out","POINTEROUT","cancel","POINTERCANCEL","leaveOut","contains_","target","relatedTarget","enterOver","container","contained","contains","makeEvent","inType","dispatchEvent","fireNativeEvent","wrapMouseEvent","eventType","pointerEvent","prepareEvent","disposeInternal"],"mappings":"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","sourcesContent":["/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = (function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object.<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array.<module:ol/pointer/EventSource>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {module:ol/pointer/EventSource} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, MouseSource.prepareEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map"]},"metadata":{},"sourceType":"module"}