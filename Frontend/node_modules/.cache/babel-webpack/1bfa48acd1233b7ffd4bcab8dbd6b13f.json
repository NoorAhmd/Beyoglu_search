{"ast":null,"code":"/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\n\nexport function defaults(opt_options) {\n  var options = opt_options ? opt_options : {};\n  var controls = new Collection();\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ? options.attribution : true;\n\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n} //# sourceMappingURL=util.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/control/util.js"],"names":["Collection","Attribution","Rotate","Zoom","defaults","opt_options","options","controls","zoomControl","zoom","undefined","push","zoomOptions","rotateControl","rotate","rotateOptions","attributionControl","attribution","attributionOptions"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,WAAlB,EAA+B;AAEpC,MAAIC,OAAO,GAAGD,WAAW,GAAGA,WAAH,GAAiB,EAA1C;AAEA,MAAIE,QAAQ,GAAG,IAAIP,UAAJ,EAAf;AAEA,MAAIQ,WAAW,GAAGF,OAAO,CAACG,IAAR,KAAiBC,SAAjB,GAA6BJ,OAAO,CAACG,IAArC,GAA4C,IAA9D;;AACA,MAAID,WAAJ,EAAiB;AACfD,IAAAA,QAAQ,CAACI,IAAT,CAAc,IAAIR,IAAJ,CAASG,OAAO,CAACM,WAAjB,CAAd;AACD;;AAED,MAAIC,aAAa,GAAGP,OAAO,CAACQ,MAAR,KAAmBJ,SAAnB,GAA+BJ,OAAO,CAACQ,MAAvC,GAAgD,IAApE;;AACA,MAAID,aAAJ,EAAmB;AACjBN,IAAAA,QAAQ,CAACI,IAAT,CAAc,IAAIT,MAAJ,CAAWI,OAAO,CAACS,aAAnB,CAAd;AACD;;AAED,MAAIC,kBAAkB,GAAGV,OAAO,CAACW,WAAR,KAAwBP,SAAxB,GACvBJ,OAAO,CAACW,WADe,GACD,IADxB;;AAEA,MAAID,kBAAJ,EAAwB;AACtBT,IAAAA,QAAQ,CAACI,IAAT,CAAc,IAAIV,WAAJ,CAAgBK,OAAO,CAACY,kBAAxB,CAAd;AACD;;AAED,SAAOX,QAAP;AACD,C,CAED","sourcesContent":["/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}