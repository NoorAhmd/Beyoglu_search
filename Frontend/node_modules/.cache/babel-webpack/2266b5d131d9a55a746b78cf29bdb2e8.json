{"ast":null,"code":"/**\n * @module ol/style/Fill\n */\nimport { getUid } from '../util.js';\nimport { asString } from '../color.js';\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\n\nvar Fill = function Fill(opt_options) {\n  var options = opt_options || {};\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n\n  this.color_ = options.color !== undefined ? options.color : null;\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n\n  this.checksum_ = undefined;\n};\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\n\n\nFill.prototype.clone = function clone() {\n  var color = this.getColor();\n  return new Fill({\n    color: color && color.slice ? color.slice() : color || undefined\n  });\n};\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\n\n\nFill.prototype.getColor = function getColor() {\n  return this.color_;\n};\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\n\n\nFill.prototype.setColor = function setColor(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n/**\n * @return {string} The checksum.\n */\n\n\nFill.prototype.getChecksum = function getChecksum() {\n  if (this.checksum_ === undefined) {\n    if (this.color_ instanceof CanvasPattern || this.color_ instanceof CanvasGradient) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill; //# sourceMappingURL=Fill.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/style/Fill.js"],"names":["getUid","asString","Fill","opt_options","options","color_","color","undefined","checksum_","prototype","clone","getColor","slice","setColor","getChecksum","CanvasPattern","CanvasGradient","toString"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,MAAR,QAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AACA,IAAIC,IAAI,GAAG,SAASA,IAAT,CAAcC,WAAd,EAA2B;AAEpC,MAAIC,OAAO,GAAGD,WAAW,IAAI,EAA7B;AAEA;AACF;AACA;AACA;;AACE,OAAKE,MAAL,GAAcD,OAAO,CAACE,KAAR,KAAkBC,SAAlB,GAA8BH,OAAO,CAACE,KAAtC,GAA8C,IAA5D;AAEA;AACF;AACA;AACA;;AACE,OAAKE,SAAL,GAAiBD,SAAjB;AACD,CAfD;AAiBA;AACA;AACA;AACA;AACA;;;AACAL,IAAI,CAACO,SAAL,CAAeC,KAAf,GAAuB,SAASA,KAAT,GAAkB;AACvC,MAAIJ,KAAK,GAAG,KAAKK,QAAL,EAAZ;AACA,SAAO,IAAIT,IAAJ,CAAS;AACdI,IAAAA,KAAK,EAAGA,KAAK,IAAIA,KAAK,CAACM,KAAhB,GAAyBN,KAAK,CAACM,KAAN,EAAzB,GAAyCN,KAAK,IAAIC;AAD3C,GAAT,CAAP;AAGD,CALD;AAOA;AACA;AACA;AACA;AACA;;;AACAL,IAAI,CAACO,SAAL,CAAeE,QAAf,GAA0B,SAASA,QAAT,GAAqB;AAC7C,SAAO,KAAKN,MAAZ;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACAH,IAAI,CAACO,SAAL,CAAeI,QAAf,GAA0B,SAASA,QAAT,CAAmBP,KAAnB,EAA0B;AAClD,OAAKD,MAAL,GAAcC,KAAd;AACA,OAAKE,SAAL,GAAiBD,SAAjB;AACD,CAHD;AAKA;AACA;AACA;;;AACAL,IAAI,CAACO,SAAL,CAAeK,WAAf,GAA6B,SAASA,WAAT,GAAwB;AACnD,MAAI,KAAKN,SAAL,KAAmBD,SAAvB,EAAkC;AAChC,QACE,KAAKF,MAAL,YAAuBU,aAAvB,IACE,KAAKV,MAAL,YAAuBW,cAF3B,EAGE;AACA,WAAKR,SAAL,GAAiBR,MAAM,CAAC,KAAKK,MAAN,CAAN,CAAoBY,QAApB,EAAjB;AACD,KALD,MAKO;AACL,WAAKT,SAAL,GAAiB,OAAO,KAAKH,MAAL,GAAcJ,QAAQ,CAAC,KAAKI,MAAN,CAAtB,GAAsC,GAA7C,CAAjB;AACD;AACF;;AAED,SAAO,KAAKG,SAAZ;AACD,CAbD;;AAeA,eAAeN,IAAf,C,CAEA","sourcesContent":["/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map"]},"metadata":{},"sourceType":"module"}