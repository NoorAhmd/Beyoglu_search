{"ast":null,"code":"/**\n * @module ol/source/OSM\n */\nimport XYZ from '../source/XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\n\nexport var ATTRIBUTION = '&copy; ' + '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' + 'contributors.';\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\n\nvar OSM = function (XYZ) {\n  function OSM(opt_options) {\n    var options = opt_options || {};\n    var attributions;\n\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n    var url = options.url !== undefined ? options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n  }\n\n  if (XYZ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create(XYZ && XYZ.prototype);\n  OSM.prototype.constructor = OSM;\n  return OSM;\n}(XYZ);\n\nexport default OSM; //# sourceMappingURL=OSM.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/source/OSM.js"],"names":["XYZ","ATTRIBUTION","OSM","opt_options","options","attributions","undefined","crossOrigin","url","call","cacheSize","opaque","maxZoom","reprojectionErrorThreshold","tileLoadFunction","wrapX","__proto__","prototype","Object","create","constructor"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,GAAP,MAAgB,kBAAhB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,WAAW,GAAG,YACnB,sEADmB,GAEnB,eAFC;AAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AACA,IAAIC,GAAG,GAAI,UAAUF,GAAV,EAAe;AACxB,WAASE,GAAT,CAAaC,WAAb,EAA0B;AAExB,QAAIC,OAAO,GAAGD,WAAW,IAAI,EAA7B;AAEA,QAAIE,YAAJ;;AACA,QAAID,OAAO,CAACC,YAAR,KAAyBC,SAA7B,EAAwC;AACtCD,MAAAA,YAAY,GAAGD,OAAO,CAACC,YAAvB;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,GAAG,CAACJ,WAAD,CAAf;AACD;;AAED,QAAIM,WAAW,GAAGH,OAAO,CAACG,WAAR,KAAwBD,SAAxB,GAChBF,OAAO,CAACG,WADQ,GACM,WADxB;AAGA,QAAIC,GAAG,GAAGJ,OAAO,CAACI,GAAR,KAAgBF,SAAhB,GACRF,OAAO,CAACI,GADA,GACM,sDADhB;AAGAR,IAAAA,GAAG,CAACS,IAAJ,CAAS,IAAT,EAAe;AACbJ,MAAAA,YAAY,EAAEA,YADD;AAEbK,MAAAA,SAAS,EAAEN,OAAO,CAACM,SAFN;AAGbH,MAAAA,WAAW,EAAEA,WAHA;AAIbI,MAAAA,MAAM,EAAEP,OAAO,CAACO,MAAR,KAAmBL,SAAnB,GAA+BF,OAAO,CAACO,MAAvC,GAAgD,IAJ3C;AAKbC,MAAAA,OAAO,EAAER,OAAO,CAACQ,OAAR,KAAoBN,SAApB,GAAgCF,OAAO,CAACQ,OAAxC,GAAkD,EAL9C;AAMbC,MAAAA,0BAA0B,EAAET,OAAO,CAACS,0BANvB;AAObC,MAAAA,gBAAgB,EAAEV,OAAO,CAACU,gBAPb;AAQbN,MAAAA,GAAG,EAAEA,GARQ;AASbO,MAAAA,KAAK,EAAEX,OAAO,CAACW;AATF,KAAf;AAYD;;AAED,MAAKf,GAAL,EAAWE,GAAG,CAACc,SAAJ,GAAgBhB,GAAhB;AACXE,EAAAA,GAAG,CAACe,SAAJ,GAAgBC,MAAM,CAACC,MAAP,CAAenB,GAAG,IAAIA,GAAG,CAACiB,SAA1B,CAAhB;AACAf,EAAAA,GAAG,CAACe,SAAJ,CAAcG,WAAd,GAA4BlB,GAA5B;AAEA,SAAOA,GAAP;AACD,CArCU,CAqCTF,GArCS,CAAX;;AAuCA,eAAeE,GAAf,C,CAEA","sourcesContent":["/**\n * @module ol/source/OSM\n */\n\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = (function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map"]},"metadata":{},"sourceType":"module"}