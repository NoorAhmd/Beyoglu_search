{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _createClass from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, Inject, InjectionToken, NgZone, Optional, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MAT_LABEL_GLOBAL_OPTIONS, mixinColor } from '@angular/material/core';\nimport { EMPTY, fromEvent, merge } from 'rxjs';\nimport { startWith, take } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nvar _c0 = [\"underline\"];\nvar _c1 = [\"connectionContainer\"];\nvar _c2 = [\"inputContainer\"];\nvar _c3 = [\"label\"];\n\nfunction MatFormField_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r1._outlineGapStart, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r1._outlineGapWidth, \"px\");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r1._outlineGapStart, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r1._outlineGapWidth, \"px\");\n  }\n}\n\nfunction MatFormField_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n  }\n}\n\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\n\nfunction MatFormField_label_9_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \"\\xA0*\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatFormField_label_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 3, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n  }\n}\n\nfunction MatFormField_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatFormField_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n  }\n}\n\nfunction MatFormField_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n  }\n}\n\nfunction MatFormField_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r14._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.hintLabel);\n  }\n}\n\nfunction MatFormField_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n  }\n}\n\nvar _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nvar _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nvar\n/** @type {?} */\nnextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\n\nvar MatError = function MatError() {\n  _classCallCheck(this, MatError);\n\n  this.id = \"mat-error-\".concat(nextUniqueId++);\n};\n\nMatError.ɵfac = function MatError_Factory(t) {\n  return new (t || MatError)();\n};\n\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatError,\n  selectors: [[\"mat-error\"]],\n  hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"],\n  hostVars: 1,\n  hostBindings: function MatError_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    }\n  },\n  inputs: {\n    id: \"id\"\n  }\n});\n/** @nocollapse */\n\nMatError.propDecorators = {\n  \"id\": [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-error',\n      host: {\n        'class': 'mat-error',\n        'role': 'alert',\n        '[attr.id]': 'id'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Animations used by the MatFormField.\n */\n\n\nvar\n/** @type {?} */\nmatFormFieldAnimations = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: trigger('transitionMessages', [// TODO(mmalerba): Use angular animations for label animation as well.\n  state('enter', style({\n    opacity: 1,\n    transform: 'translateY(0%)'\n  })), transition('void => enter', [style({\n    opacity: 0,\n    transform: 'translateY(-100%)'\n  }), animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\n\nvar MatFormFieldControl = function MatFormFieldControl() {\n  _classCallCheck(this, MatFormFieldControl);\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @return {?}\n */\n\n\nfunction getMatFormFieldPlaceholderConflictError() {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\n\n\nfunction getMatFormFieldDuplicatedHintError(align) {\n  return Error(\"A hint was already declared for 'align=\\\"\".concat(align, \"\\\"'.\"));\n}\n/**\n * \\@docs-private\n * @return {?}\n */\n\n\nfunction getMatFormFieldMissingControlError() {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar\n/** @type {?} */\nnextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\n\nvar MatHint = function MatHint() {\n  _classCallCheck(this, MatHint);\n\n  /**\n   * Whether to align the hint label at the start or end of the line.\n   */\n  this.align = 'start';\n  /**\n   * Unique ID for the hint. Used for the aria-describedby on the form field control.\n   */\n\n  this.id = \"mat-hint-\".concat(nextUniqueId$1++);\n};\n\nMatHint.ɵfac = function MatHint_Factory(t) {\n  return new (t || MatHint)();\n};\n\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatHint,\n  selectors: [[\"mat-hint\"]],\n  hostAttrs: [1, \"mat-hint\"],\n  hostVars: 4,\n  hostBindings: function MatHint_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n      ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    }\n  },\n  inputs: {\n    align: \"align\",\n    id: \"id\"\n  }\n});\n/** @nocollapse */\n\nMatHint.propDecorators = {\n  \"align\": [{\n    type: Input\n  }],\n  \"id\": [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-hint',\n      host: {\n        'class': 'mat-hint',\n        '[class.mat-right]': 'align == \"end\"',\n        '[attr.id]': 'id',\n        // Remove align attribute to prevent it from interfering with layout.\n        '[attr.align]': 'null'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    align: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * The floating label for a `mat-form-field`.\n */\n\n\nvar MatLabel = function MatLabel() {\n  _classCallCheck(this, MatLabel);\n};\n\nMatLabel.ɵfac = function MatLabel_Factory(t) {\n  return new (t || MatLabel)();\n};\n\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatLabel,\n  selectors: [[\"mat-label\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-label'\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\n\n\nvar MatPlaceholder = function MatPlaceholder() {\n  _classCallCheck(this, MatPlaceholder);\n};\n\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) {\n  return new (t || MatPlaceholder)();\n};\n\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatPlaceholder,\n  selectors: [[\"mat-placeholder\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-placeholder'\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Prefix to be placed the the front of the form field.\n */\n\n\nvar MatPrefix = function MatPrefix() {\n  _classCallCheck(this, MatPrefix);\n};\n\nMatPrefix.ɵfac = function MatPrefix_Factory(t) {\n  return new (t || MatPrefix)();\n};\n\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatPrefix,\n  selectors: [[\"\", \"matPrefix\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n    type: Directive,\n    args: [{\n      selector: '[matPrefix]'\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Suffix to be placed at the end of the form field.\n */\n\n\nvar MatSuffix = function MatSuffix() {\n  _classCallCheck(this, MatSuffix);\n};\n\nMatSuffix.ɵfac = function MatSuffix_Factory(t) {\n  return new (t || MatSuffix)();\n};\n\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatSuffix,\n  selectors: [[\"\", \"matSuffix\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n    type: Directive,\n    args: [{\n      selector: '[matSuffix]'\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar\n/** @type {?} */\nnextUniqueId$2 = 0;\nvar\n/** @type {?} */\nfloatingLabelScale = 0.75;\nvar\n/** @type {?} */\noutlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\n\nvar MatFormFieldBase =\n/**\n * @param {?} _elementRef\n */\nfunction MatFormFieldBase(_elementRef) {\n  _classCallCheck(this, MatFormFieldBase);\n\n  this._elementRef = _elementRef;\n};\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n */\n\n\nvar\n/** @type {?} */\n_MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\n\n\nvar\n/** @type {?} */\nMAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\n\nvar MatFormField = /*#__PURE__*/function (_MatFormFieldMixinBas) {\n  _inherits(MatFormField, _MatFormFieldMixinBas);\n\n  var _super = _createSuper(MatFormField);\n\n  /**\n   * @param {?} _elementRef\n   * @param {?} _changeDetectorRef\n   * @param {?} labelOptions\n   * @param {?} _dir\n   * @param {?} _defaultOptions\n   * @param {?=} _platform\n   * @param {?=} _ngZone\n   * @param {?=} _animationMode\n   */\n  function MatFormField(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaultOptions, _platform, _ngZone, _animationMode) {\n    var _this;\n\n    _classCallCheck(this, MatFormField);\n\n    _this = _super.call(this, _elementRef);\n    _this._elementRef = _elementRef;\n    _this._changeDetectorRef = _changeDetectorRef;\n    _this._dir = _dir;\n    _this._defaultOptions = _defaultOptions;\n    _this._platform = _platform;\n    _this._ngZone = _ngZone;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     */\n\n    _this._showAlwaysAnimate = false;\n    /**\n     * State of the mat-hint and mat-error animations.\n     */\n\n    _this._subscriptAnimationState = '';\n    _this._hintLabel = ''; // Unique id for the hint label.\n\n    _this._hintLabelId = \"mat-hint-\".concat(nextUniqueId$2++); // Unique id for the internal form field label.\n\n    _this._labelId = \"mat-form-field-label-\".concat(nextUniqueId$2++);\n    _this._outlineGapWidth = 0;\n    _this._outlineGapStart = 0;\n    _this._initialGapCalculated = false;\n    _this._labelOptions = labelOptions ? labelOptions : {};\n    _this.floatLabel = _this._labelOptions.float || 'auto';\n    _this._animationsEnabled = _animationMode !== 'NoopAnimations';\n    return _this;\n  }\n  /**\n   * The form-field appearance style.\n   * @return {?}\n   */\n\n\n  _createClass(MatFormField, [{\n    key: \"appearance\",\n    get: function get() {\n      return this._appearance || this._defaultOptions && this._defaultOptions.appearance || 'legacy';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      // If we're switching to `outline` from another appearance, we have to recalculate the gap.\n      if (value !== this._appearance && value === 'outline') {\n        this._initialGapCalculated = false;\n      }\n\n      this._appearance = value;\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n\n  }, {\n    key: \"hideRequiredMarker\",\n    get: function get() {\n      return this._hideRequiredMarker;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_shouldAlwaysFloat\",\n    get: function get() {\n      return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_canLabelFloat\",\n    get: function get() {\n      return this.floatLabel !== 'never';\n    }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n\n  }, {\n    key: \"hintLabel\",\n    get: function get() {\n      return this._hintLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._hintLabel = value;\n\n      this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n\n  }, {\n    key: \"floatLabel\",\n    get: function get() {\n      return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      if (value !== this._floatLabel) {\n        this._floatLabel = value || this._labelOptions.float || 'auto';\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n\n  }, {\n    key: \"getConnectedOverlayOrigin\",\n    value: function getConnectedOverlayOrigin() {\n      return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      this._validateControlChild();\n\n      if (this._control.controlType) {\n        this._elementRef.nativeElement.classList.add(\"mat-form-field-type-\".concat(this._control.controlType));\n      } // Subscribe to changes in the child control state in order to update the form field UI.\n\n\n      this._control.stateChanges.pipe(startWith(\n      /** @type {?} */\n      null)).subscribe(function () {\n        _this2._validatePlaceholders();\n\n        _this2._syncDescribedByIds();\n\n        _this2._changeDetectorRef.markForCheck();\n      }); // Run change detection if the value, prefix, or suffix changes.\n\n\n      var\n      /** @type {?} */\n      valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n      merge(valueChanges, this._prefixChildren.changes, this._suffixChildren.changes).subscribe(function () {\n        return _this2._changeDetectorRef.markForCheck();\n      }); // Re-validate when the number of hints changes.\n\n      this._hintChildren.changes.pipe(startWith(null)).subscribe(function () {\n        _this2._processHints();\n\n        _this2._changeDetectorRef.markForCheck();\n      }); // Update the aria-described by when the number of errors changes.\n\n\n      this._errorChildren.changes.pipe(startWith(null)).subscribe(function () {\n        _this2._syncDescribedByIds();\n\n        _this2._changeDetectorRef.markForCheck();\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      var _this3 = this;\n\n      this._validateControlChild();\n\n      if (!this._initialGapCalculated) {\n        // @breaking-change 7.0.0 Remove this check and else block once _ngZone is required.\n        if (this._ngZone) {\n          // It's important that we run this outside the `_ngZone`, because the `Promise.resolve`\n          // can kick us into an infinite change detection loop, if the `_initialGapCalculated`\n          // wasn't flipped on for some reason.\n          this._ngZone.runOutsideAngular(function () {\n            Promise.resolve().then(function () {\n              return _this3.updateOutlineGap();\n            });\n          });\n        } else {\n          Promise.resolve().then(function () {\n            return _this3.updateOutlineGap();\n          });\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      // Avoid animations on load.\n      this._subscriptAnimationState = 'enter';\n\n      this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n\n  }, {\n    key: \"_shouldForward\",\n    value: function _shouldForward(prop) {\n      var\n      /** @type {?} */\n      ngControl = this._control ? this._control.ngControl : null;\n      return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_hasPlaceholder\",\n    value: function _hasPlaceholder() {\n      return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_hasLabel\",\n    value: function _hasLabel() {\n      return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_shouldLabelFloat\",\n    value: function _shouldLabelFloat() {\n      return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_hideControlPlaceholder\",\n    value: function _hideControlPlaceholder() {\n      // In the legacy appearance the placeholder is promoted to a label if no label is given.\n      return this.appearance === 'legacy' && !this._hasLabel() || this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_hasFloatingLabel\",\n    value: function _hasFloatingLabel() {\n      // In the legacy appearance the placeholder is promoted to a label if no label is given.\n      return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getDisplayedMessages\",\n    value: function _getDisplayedMessages() {\n      return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_animateAndLockLabel\",\n    value: function _animateAndLockLabel() {\n      var _this4 = this;\n\n      if (this._hasFloatingLabel() && this._canLabelFloat) {\n        // If animations are disabled, we shouldn't go in here,\n        // because the `transitionend` will never fire.\n        if (this._animationsEnabled) {\n          this._showAlwaysAnimate = true;\n          fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(function () {\n            _this4._showAlwaysAnimate = false;\n          });\n        }\n\n        this.floatLabel = 'always';\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @return {?}\n     */\n\n  }, {\n    key: \"_validatePlaceholders\",\n    value: function _validatePlaceholders() {\n      if (this._control.placeholder && this._placeholderChild) {\n        throw getMatFormFieldPlaceholderConflictError();\n      }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_processHints\",\n    value: function _processHints() {\n      this._validateHints();\n\n      this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_validateHints\",\n    value: function _validateHints() {\n      var _this5 = this;\n\n      if (this._hintChildren) {\n        var\n        /** @type {?} */\n        startHint;\n        var\n        /** @type {?} */\n        endHint;\n\n        this._hintChildren.forEach(function (hint) {\n          if (hint.align === 'start') {\n            if (startHint || _this5.hintLabel) {\n              throw getMatFormFieldDuplicatedHintError('start');\n            }\n\n            startHint = hint;\n          } else if (hint.align === 'end') {\n            if (endHint) {\n              throw getMatFormFieldDuplicatedHintError('end');\n            }\n\n            endHint = hint;\n          }\n        });\n      }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_syncDescribedByIds\",\n    value: function _syncDescribedByIds() {\n      if (this._control) {\n        var\n        /** @type {?} */\n        ids = [];\n\n        if (this._getDisplayedMessages() === 'hint') {\n          var\n          /** @type {?} */\n          startHint = this._hintChildren ? this._hintChildren.find(function (hint) {\n            return hint.align === 'start';\n          }) : null;\n          var\n          /** @type {?} */\n          endHint = this._hintChildren ? this._hintChildren.find(function (hint) {\n            return hint.align === 'end';\n          }) : null;\n\n          if (startHint) {\n            ids.push(startHint.id);\n          } else if (this._hintLabel) {\n            ids.push(this._hintLabelId);\n          }\n\n          if (endHint) {\n            ids.push(endHint.id);\n          }\n        } else if (this._errorChildren) {\n          ids = this._errorChildren.map(function (error) {\n            return error.id;\n          });\n        }\n\n        this._control.setDescribedByIds(ids);\n      }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_validateControlChild\",\n    value: function _validateControlChild() {\n      if (!this._control) {\n        throw getMatFormFieldMissingControlError();\n      }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateOutlineGap\",\n    value: function updateOutlineGap() {\n      if (this.appearance === 'outline' && this._label && this._label.nativeElement.children.length) {\n        if (this._platform && !this._platform.isBrowser) {\n          // getBoundingClientRect isn't available on the server.\n          this._initialGapCalculated = true;\n          return;\n        }\n\n        if (!document.documentElement.contains(this._elementRef.nativeElement)) {\n          return;\n        }\n\n        var\n        /** @type {?} */\n        containerStart = this._getStartEnd(this._connectionContainerRef.nativeElement.getBoundingClientRect());\n\n        var\n        /** @type {?} */\n        labelStart = this._getStartEnd(this._label.nativeElement.children[0].getBoundingClientRect());\n\n        var\n        /** @type {?} */\n        labelWidth = 0;\n\n        var _iterator = _createForOfIteratorHelper(this._label.nativeElement.children),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var child = _step.value;\n            labelWidth += child.offsetWidth;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        this._outlineGapStart = labelStart - containerStart - outlineGapPadding;\n        this._outlineGapWidth = labelWidth * floatingLabelScale + outlineGapPadding * 2;\n      } else {\n        this._outlineGapStart = 0;\n        this._outlineGapWidth = 0;\n      }\n\n      this._initialGapCalculated = true;\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @param {?} rect\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getStartEnd\",\n    value: function _getStartEnd(rect) {\n      return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    }\n  }]);\n\n  return MatFormField;\n}(_MatFormFieldMixinBase);\n\nMatFormField.ɵfac = function MatFormField_Factory(t) {\n  return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatFormField,\n  selectors: [[\"mat-form-field\"]],\n  contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, 0);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, 0);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, 0);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._control = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    }\n  },\n  viewQuery: function MatFormField_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n      ɵngcc0.ɵɵviewQuery(_c1, 1);\n      ɵngcc0.ɵɵviewQuery(_c2, 1);\n      ɵngcc0.ɵɵviewQuery(_c3, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-form-field\"],\n  hostVars: 42,\n  hostBindings: function MatFormField_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    floatLabel: \"floatLabel\",\n    appearance: \"appearance\",\n    hideRequiredMarker: \"hideRequiredMarker\",\n    hintLabel: \"hintLabel\"\n  },\n  exportAs: [\"matFormField\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c5,\n  decls: 15,\n  vars: 8,\n  consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"id\", \"ngSwitch\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]],\n  template: function MatFormField_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c4);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n      ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) {\n        return ctx._control.onContainerClick && ctx._control.onContainerClick($event);\n      });\n      ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 8, \"ng-container\", 3);\n      ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n      ɵngcc0.ɵɵprojection(7);\n      ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n      ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 15, \"label\", 8);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n      ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n      ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n      ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    }\n  },\n  directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase],\n  styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media screen and (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matFormFieldAnimations.transitionMessages]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatFormField.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_LABEL_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n    }]\n  }, {\n    type: Platform\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatFormField.propDecorators = {\n  \"appearance\": [{\n    type: Input\n  }],\n  \"hideRequiredMarker\": [{\n    type: Input\n  }],\n  \"hintLabel\": [{\n    type: Input\n  }],\n  \"floatLabel\": [{\n    type: Input\n  }],\n  \"underlineRef\": [{\n    type: ViewChild,\n    args: ['underline']\n  }],\n  \"_connectionContainerRef\": [{\n    type: ViewChild,\n    args: ['connectionContainer']\n  }],\n  \"_inputContainerRef\": [{\n    type: ViewChild,\n    args: ['inputContainer']\n  }],\n  \"_label\": [{\n    type: ViewChild,\n    args: ['label']\n  }],\n  \"_control\": [{\n    type: ContentChild,\n    args: [MatFormFieldControl]\n  }],\n  \"_placeholderChild\": [{\n    type: ContentChild,\n    args: [MatPlaceholder]\n  }],\n  \"_labelChild\": [{\n    type: ContentChild,\n    args: [MatLabel]\n  }],\n  \"_errorChildren\": [{\n    type: ContentChildren,\n    args: [MatError]\n  }],\n  \"_hintChildren\": [{\n    type: ContentChildren,\n    args: [MatHint]\n  }],\n  \"_prefixChildren\": [{\n    type: ContentChildren,\n    args: [MatPrefix]\n  }],\n  \"_suffixChildren\": [{\n    type: ContentChildren,\n    args: [MatSuffix]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n    type: Component,\n    args: [{\n      selector: 'mat-form-field',\n      exportAs: 'matFormField',\n      template: \"<div class=\\\"mat-form-field-wrapper\\\"><div class=\\\"mat-form-field-flex\\\" #connectionContainer (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\"><ng-container *ngIf=\\\"appearance == 'outline'\\\"><div class=\\\"mat-form-field-outline\\\"><div class=\\\"mat-form-field-outline-start\\\" [style.width.px]=\\\"_outlineGapStart\\\"></div><div class=\\\"mat-form-field-outline-gap\\\" [style.width.px]=\\\"_outlineGapWidth\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div><div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\"><div class=\\\"mat-form-field-outline-start\\\" [style.width.px]=\\\"_outlineGapStart\\\"></div><div class=\\\"mat-form-field-outline-gap\\\" [style.width.px]=\\\"_outlineGapWidth\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div></ng-container><div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"><ng-content select=\\\"[matPrefix]\\\"></ng-content></div><div class=\\\"mat-form-field-infix\\\" #inputContainer><ng-content></ng-content><span class=\\\"mat-form-field-label-wrapper\\\"><label class=\\\"mat-form-field-label\\\" [id]=\\\"_labelId\\\" [attr.for]=\\\"_control.id\\\" [attr.aria-owns]=\\\"_control.id\\\" [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" #label *ngIf=\\\"_hasFloatingLabel()\\\" [ngSwitch]=\\\"_hasLabel()\\\"><ng-container *ngSwitchCase=\\\"false\\\"><ng-content select=\\\"mat-placeholder\\\"></ng-content>{{_control.placeholder}}</ng-container><ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content><span class=\\\"mat-placeholder-required mat-form-field-required-marker\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&nbsp;*</span></label></span></div><div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"><ng-content select=\\\"[matSuffix]\\\"></ng-content></div></div><div class=\\\"mat-form-field-underline\\\" #underline *ngIf=\\\"appearance != 'outline'\\\"><span class=\\\"mat-form-field-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span></div><div class=\\\"mat-form-field-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"><div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><ng-content select=\\\"mat-error\\\"></ng-content></div><div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div><ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content><div class=\\\"mat-form-field-hint-spacer\\\"></div><ng-content select=\\\"mat-hint[align='end']\\\"></ng-content></div></div></div>\",\n      // MatInput is a directive and can't have styles, so we need to include its styles here.\n      // The MatInput styles are fairly minimal so it shouldn't be a big deal for people who\n      // aren't using MatInput.\n      styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media screen and (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}\"],\n      animations: [matFormFieldAnimations.transitionMessages],\n      host: {\n        'class': 'mat-form-field',\n        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n        '[class.mat-form-field-invalid]': '_control.errorState',\n        '[class.mat-form-field-can-float]': '_canLabelFloat',\n        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n        '[class.mat-form-field-disabled]': '_control.disabled',\n        '[class.mat-form-field-autofilled]': '_control.autofilled',\n        '[class.mat-focused]': '_control.focused',\n        '[class.mat-accent]': 'color == \"accent\"',\n        '[class.mat-warn]': 'color == \"warn\"',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '[class._mat-animation-noopable]': '!_animationsEnabled'\n      },\n      inputs: ['color'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_LABEL_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n      }]\n    }, {\n      type: ɵngcc2.Platform\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    floatLabel: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    hideRequiredMarker: [{\n      type: Input\n    }],\n    hintLabel: [{\n      type: Input\n    }],\n    underlineRef: [{\n      type: ViewChild,\n      args: ['underline']\n    }],\n    _connectionContainerRef: [{\n      type: ViewChild,\n      args: ['connectionContainer']\n    }],\n    _inputContainerRef: [{\n      type: ViewChild,\n      args: ['inputContainer']\n    }],\n    _label: [{\n      type: ViewChild,\n      args: ['label']\n    }],\n    _control: [{\n      type: ContentChild,\n      args: [MatFormFieldControl]\n    }],\n    _placeholderChild: [{\n      type: ContentChild,\n      args: [MatPlaceholder]\n    }],\n    _labelChild: [{\n      type: ContentChild,\n      args: [MatLabel]\n    }],\n    _errorChildren: [{\n      type: ContentChildren,\n      args: [MatError]\n    }],\n    _hintChildren: [{\n      type: ContentChildren,\n      args: [MatHint]\n    }],\n    _prefixChildren: [{\n      type: ContentChildren,\n      args: [MatPrefix]\n    }],\n    _suffixChildren: [{\n      type: ContentChildren,\n      args: [MatSuffix]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar MatFormFieldModule = function MatFormFieldModule() {\n  _classCallCheck(this, MatFormFieldModule);\n};\n\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) {\n  return new (t || MatFormFieldModule)();\n};\n\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatFormFieldModule\n});\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, {\n    declarations: function declarations() {\n      return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix],\n      imports: [CommonModule],\n      exports: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport { MatFormFieldModule, MatError, MatFormFieldBase, _MatFormFieldMixinBase, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatLabel, matFormFieldAnimations }; //# sourceMappingURL=form-field.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/@angular/material/__ivy_ngcc__/esm2015/form-field.js"],"names":["Directive","Input","ChangeDetectionStrategy","ChangeDetectorRef","Component","ContentChild","ContentChildren","ElementRef","Inject","InjectionToken","NgZone","Optional","ViewChild","ViewEncapsulation","NgModule","animate","state","style","transition","trigger","Directionality","coerceBooleanProperty","MAT_LABEL_GLOBAL_OPTIONS","mixinColor","EMPTY","fromEvent","merge","startWith","take","Platform","ANIMATION_MODULE_TYPE","CommonModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","_c2","_c3","MatFormField_ng_container_3_Template","rf","ctx","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵelementContainerEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵstyleProp","_outlineGapStart","_outlineGapWidth","MatFormField_div_4_Template","ɵɵprojection","MatFormField_label_9_ng_container_2_Template","ɵɵtext","ctx_r10","ɵɵtextInterpolate","_control","placeholder","MatFormField_label_9_ng_content_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","ɵɵtemplate","ctx_r4","ɵɵclassProp","empty","_shouldAlwaysFloat","color","ɵɵproperty","_labelId","_hasLabel","ɵɵattribute","id","hideRequiredMarker","required","disabled","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r14","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","_c4","_c5","nextUniqueId","MatError","ɵfac","MatError_Factory","t","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","hostVars","hostBindings","MatError_HostBindings","inputs","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","host","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","getMatFormFieldPlaceholderConflictError","Error","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_elementRef","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MatFormField","_changeDetectorRef","labelOptions","_dir","_defaultOptions","_platform","_ngZone","_animationMode","_showAlwaysAnimate","_hintLabel","_initialGapCalculated","_labelOptions","floatLabel","float","_animationsEnabled","_appearance","appearance","value","_hideRequiredMarker","_processHints","_floatLabel","markForCheck","_connectionContainerRef","_validateControlChild","controlType","nativeElement","classList","add","stateChanges","pipe","subscribe","_validatePlaceholders","_syncDescribedByIds","valueChanges","ngControl","_prefixChildren","changes","_suffixChildren","_hintChildren","_errorChildren","runOutsideAngular","Promise","resolve","then","updateOutlineGap","detectChanges","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","length","errorState","_hasFloatingLabel","_label","_validateHints","startHint","endHint","forEach","hint","ids","_getDisplayedMessages","find","push","map","error","setDescribedByIds","children","isBrowser","document","documentElement","contains","containerStart","_getStartEnd","getBoundingClientRect","labelStart","labelWidth","child","offsetWidth","rect","right","left","MatFormField_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","contentQueries","MatFormField_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatFormField_Query","ɵɵviewQuery","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","exportAs","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","MatFormField_Template","ɵɵprojectionDef","ɵɵlistener","MatFormField_Template_div_click_1_listener","$event","onContainerClick","directives","NgIf","NgSwitch","NgSwitchCase","styles","encapsulation","data","animation","changeDetection","ctorParameters","undefined","decorators","animations","None","OnPush","MatFormFieldModule","MatFormFieldModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, Inject, InjectionToken, NgZone, Optional, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MAT_LABEL_GLOBAL_OPTIONS, mixinColor } from '@angular/material/core';\nimport { EMPTY, fromEvent, merge } from 'rxjs';\nimport { startWith, take } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r1._outlineGapStart, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r1._outlineGapWidth, \"px\");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r1._outlineGapStart, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r1._outlineGapWidth, \"px\");\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \"\\u00A0*\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 3, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r14._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet /** @type {?} */ nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\n/** @nocollapse */\nMatError.propDecorators = {\n    \"id\": [{ type: Input },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n */\nconst /** @type {?} */ matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nlet /** @type {?} */ nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\n/** @nocollapse */\nMatHint.propDecorators = {\n    \"align\": [{ type: Input },],\n    \"id\": [{ type: Input },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Prefix to be placed the the front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nlet /** @type {?} */ nextUniqueId$2 = 0;\nconst /** @type {?} */ floatingLabelScale = 0.75;\nconst /** @type {?} */ outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n */\nconst /** @type {?} */ _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst /** @type {?} */ MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaultOptions\n     * @param {?=} _platform\n     * @param {?=} _ngZone\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaultOptions, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._outlineGapWidth = 0;\n        this._outlineGapStart = 0;\n        this._initialGapCalculated = false;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._labelOptions.float || 'auto';\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() {\n        return this._appearance || this._defaultOptions && this._defaultOptions.appearance || 'legacy';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        // If we're switching to `outline` from another appearance, we have to recalculate the gap.\n        if (value !== this._appearance && value === 'outline') {\n            this._initialGapCalculated = false;\n        }\n        this._appearance = value;\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._labelOptions.float || 'auto';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mat-form-field-type-${this._control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith(/** @type {?} */ ((null)))).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value, prefix, or suffix changes.\n        const /** @type {?} */ valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges, this._prefixChildren.changes, this._suffixChildren.changes)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (!this._initialGapCalculated) {\n            // @breaking-change 7.0.0 Remove this check and else block once _ngZone is required.\n            if (this._ngZone) {\n                // It's important that we run this outside the `_ngZone`, because the `Promise.resolve`\n                // can kick us into an infinite change detection loop, if the `_initialGapCalculated`\n                // wasn't flipped on for some reason.\n                this._ngZone.runOutsideAngular(() => {\n                    Promise.resolve().then(() => this.updateOutlineGap());\n                });\n            }\n            else {\n                Promise.resolve().then(() => this.updateOutlineGap());\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        const /** @type {?} */ ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            let /** @type {?} */ startHint;\n            let /** @type {?} */ endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let /** @type {?} */ ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                let /** @type {?} */ startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                let /** @type {?} */ endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map(error => error.id);\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        if (this.appearance === 'outline' && this._label && this._label.nativeElement.children.length) {\n            if (this._platform && !this._platform.isBrowser) {\n                // getBoundingClientRect isn't available on the server.\n                this._initialGapCalculated = true;\n                return;\n            }\n            if (!document.documentElement.contains(this._elementRef.nativeElement)) {\n                return;\n            }\n            const /** @type {?} */ containerStart = this._getStartEnd(this._connectionContainerRef.nativeElement.getBoundingClientRect());\n            const /** @type {?} */ labelStart = this._getStartEnd(this._label.nativeElement.children[0].getBoundingClientRect());\n            let /** @type {?} */ labelWidth = 0;\n            for (const /** @type {?} */ child of this._label.nativeElement.children) {\n                labelWidth += child.offsetWidth;\n            }\n            this._outlineGapStart = labelStart - containerStart - outlineGapPadding;\n            this._outlineGapWidth = labelWidth * floatingLabelScale + outlineGapPadding * 2;\n        }\n        else {\n            this._outlineGapStart = 0;\n            this._outlineGapWidth = 0;\n        }\n        this._initialGapCalculated = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, 0);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, 0);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, 0);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, 0);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._control = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(_c1, 1);\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n        ɵngcc0.ɵɵviewQuery(_c3, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 42, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"id\", \"ngSwitch\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 8, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 15, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media screen and (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: ChangeDetectorRef, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] },] },\n    { type: Directionality, decorators: [{ type: Optional },] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] },] },\n    { type: Platform, },\n    { type: NgZone, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] },] },\n];\nMatFormField.propDecorators = {\n    \"appearance\": [{ type: Input },],\n    \"hideRequiredMarker\": [{ type: Input },],\n    \"hintLabel\": [{ type: Input },],\n    \"floatLabel\": [{ type: Input },],\n    \"underlineRef\": [{ type: ViewChild, args: ['underline',] },],\n    \"_connectionContainerRef\": [{ type: ViewChild, args: ['connectionContainer',] },],\n    \"_inputContainerRef\": [{ type: ViewChild, args: ['inputContainer',] },],\n    \"_label\": [{ type: ViewChild, args: ['label',] },],\n    \"_control\": [{ type: ContentChild, args: [MatFormFieldControl,] },],\n    \"_placeholderChild\": [{ type: ContentChild, args: [MatPlaceholder,] },],\n    \"_labelChild\": [{ type: ContentChild, args: [MatLabel,] },],\n    \"_errorChildren\": [{ type: ContentChildren, args: [MatError,] },],\n    \"_hintChildren\": [{ type: ContentChildren, args: [MatHint,] },],\n    \"_prefixChildren\": [{ type: ContentChildren, args: [MatPrefix,] },],\n    \"_suffixChildren\": [{ type: ContentChildren, args: [MatSuffix,] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{ selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\"><div class=\\\"mat-form-field-flex\\\" #connectionContainer (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\"><ng-container *ngIf=\\\"appearance == 'outline'\\\"><div class=\\\"mat-form-field-outline\\\"><div class=\\\"mat-form-field-outline-start\\\" [style.width.px]=\\\"_outlineGapStart\\\"></div><div class=\\\"mat-form-field-outline-gap\\\" [style.width.px]=\\\"_outlineGapWidth\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div><div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\"><div class=\\\"mat-form-field-outline-start\\\" [style.width.px]=\\\"_outlineGapStart\\\"></div><div class=\\\"mat-form-field-outline-gap\\\" [style.width.px]=\\\"_outlineGapWidth\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div></ng-container><div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"><ng-content select=\\\"[matPrefix]\\\"></ng-content></div><div class=\\\"mat-form-field-infix\\\" #inputContainer><ng-content></ng-content><span class=\\\"mat-form-field-label-wrapper\\\"><label class=\\\"mat-form-field-label\\\" [id]=\\\"_labelId\\\" [attr.for]=\\\"_control.id\\\" [attr.aria-owns]=\\\"_control.id\\\" [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" #label *ngIf=\\\"_hasFloatingLabel()\\\" [ngSwitch]=\\\"_hasLabel()\\\"><ng-container *ngSwitchCase=\\\"false\\\"><ng-content select=\\\"mat-placeholder\\\"></ng-content>{{_control.placeholder}}</ng-container><ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content><span class=\\\"mat-placeholder-required mat-form-field-required-marker\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&nbsp;*</span></label></span></div><div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"><ng-content select=\\\"[matSuffix]\\\"></ng-content></div></div><div class=\\\"mat-form-field-underline\\\" #underline *ngIf=\\\"appearance != 'outline'\\\"><span class=\\\"mat-form-field-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span></div><div class=\\\"mat-form-field-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"><div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><ng-content select=\\\"mat-error\\\"></ng-content></div><div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div><ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content><div class=\\\"mat-form-field-hint-spacer\\\"></div><ng-content select=\\\"mat-hint[align='end']\\\"></ng-content></div></div></div>\",\n                // MatInput is a directive and can't have styles, so we need to include its styles here.\n                // The MatInput styles are fairly minimal so it shouldn't be a big deal for people who\n                // aren't using MatInput.\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media screen and (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}\"],\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer']\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _control: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _labelChild: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); };\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [CommonModule],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MatFormFieldModule, MatError, MatFormFieldBase, _MatFormFieldMixinBase, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatLabel, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map"]},"metadata":{},"sourceType":"module"}