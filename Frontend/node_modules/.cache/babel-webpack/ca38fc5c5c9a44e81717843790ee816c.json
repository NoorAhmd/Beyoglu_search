{"ast":null,"code":"/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport { scale as scaleCoordinate } from '../../coordinate.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { UNDEFINED } from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport { create as createTransform, apply as applyTransform } from '../../transform.js';\n\nvar IntermediateCanvasRenderer = function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n    CanvasLayerRenderer.call(this, layer);\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n\n    this.coordinateToCanvasPixelTransform = createTransform();\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n\n    this.hitCanvasContext_ = null;\n  }\n\n  if (CanvasLayerRenderer) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create(CanvasLayerRenderer && CanvasLayerRenderer.prototype);\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n  /**\n   * @inheritDoc\n   */\n\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame(frameState, layerState, context) {\n    this.preCompose(context, frameState);\n    var image = this.getImage();\n\n    if (image) {\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined && !containsExtent(extent, frameState.extent) && intersects(extent, frameState.extent);\n\n      if (clipped) {\n        this.clip(context, frameState,\n        /** @type {module:ol/extent~Extent} */\n        extent);\n      }\n\n      var imageTransform = this.getImageTransform(); // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity; // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      context.drawImage(image, 0, 0, +image.width, +image.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n\n\n  IntermediateCanvasRenderer.prototype.getImage = function getImage() {};\n  /**\n   * @abstract\n   * @return {!module:ol/transform~Transform} Image transform.\n   */\n\n\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform() {};\n  /**\n   * @inheritDoc\n   */\n\n\n  IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    var layer = this.getLayer();\n    var source = layer.getSource();\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function (feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n    } else {\n      var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n      scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n      var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer);\n\nexport default IntermediateCanvasRenderer; //# sourceMappingURL=IntermediateCanvas.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/renderer/canvas/IntermediateCanvas.js"],"names":["scale","scaleCoordinate","createCanvasContext2D","containsExtent","intersects","UNDEFINED","CanvasLayerRenderer","create","createTransform","apply","applyTransform","IntermediateCanvasRenderer","layer","call","coordinateToCanvasPixelTransform","hitCanvasContext_","__proto__","prototype","Object","constructor","composeFrame","frameState","layerState","context","preCompose","image","getImage","extent","clipped","undefined","clip","imageTransform","getImageTransform","alpha","globalAlpha","opacity","dx","dy","dw","width","dh","height","drawImage","Math","round","restore","postCompose","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","thisArg","getLayer","source","getSource","resolution","viewState","rotation","skippedFeatureUids","feature","forEachLayerAtCoordinate","arguments","pixel","slice","renderedResolution","clearRect","imageData","getImageData","data"],"mappings":"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","sourcesContent":["/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\nvar IntermediateCanvasRenderer = (function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      context.drawImage(image, 0, 0, +image.width, +image.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {};\n\n  /**\n   * @abstract\n   * @return {!module:ol/transform~Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {};\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var layer = this.getLayer();\n    var source = layer.getSource();\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n    } else {\n      var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n      scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n      var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map"]},"metadata":{},"sourceType":"module"}