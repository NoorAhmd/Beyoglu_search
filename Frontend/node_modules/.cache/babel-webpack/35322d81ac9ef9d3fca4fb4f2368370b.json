{"ast":null,"code":"/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n */\n\nvar MapBrowserEvent = function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n    MapEvent.call(this, type, map, opt_frameState);\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n\n    this.originalEvent = browserEvent;\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {module:ol/pixel~Pixel}\n     * @api\n     */\n\n    this.pixel = map.getEventPixel(browserEvent);\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  if (MapEvent) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create(MapEvent && MapEvent.prototype);\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n\n  MapBrowserEvent.prototype.preventDefault = function preventDefault() {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n\n\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation() {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent);\n\nexport default MapBrowserEvent; //# sourceMappingURL=MapBrowserEvent.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/MapBrowserEvent.js"],"names":["MapEvent","MapBrowserEvent","type","map","browserEvent","opt_dragging","opt_frameState","call","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","undefined","__proto__","prototype","Object","create","constructor","preventDefault","stopPropagation"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,eAArB;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAI,UAAUD,QAAV,EAAoB;AACzC,WAASC,eAAT,CAAyBC,IAAzB,EAA+BC,GAA/B,EAAoCC,YAApC,EAAkDC,YAAlD,EAAgEC,cAAhE,EAAgF;AAE9EN,IAAAA,QAAQ,CAACO,IAAT,CAAc,IAAd,EAAoBL,IAApB,EAA0BC,GAA1B,EAA+BG,cAA/B;AAEA;AACJ;AACA;AACA;AACA;AACA;;AACI,SAAKE,aAAL,GAAqBJ,YAArB;AAEA;AACJ;AACA;AACA;AACA;;AACI,SAAKK,KAAL,GAAaN,GAAG,CAACO,aAAJ,CAAkBN,YAAlB,CAAb;AAEA;AACJ;AACA;AACA;AACA;;AACI,SAAKO,UAAL,GAAkBR,GAAG,CAACS,sBAAJ,CAA2B,KAAKH,KAAhC,CAAlB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;;AACI,SAAKI,QAAL,GAAgBR,YAAY,KAAKS,SAAjB,GAA6BT,YAA7B,GAA4C,KAA5D;AAED;;AAED,MAAKL,QAAL,EAAgBC,eAAe,CAACc,SAAhB,GAA4Bf,QAA5B;AAChBC,EAAAA,eAAe,CAACe,SAAhB,GAA4BC,MAAM,CAACC,MAAP,CAAelB,QAAQ,IAAIA,QAAQ,CAACgB,SAApC,CAA5B;AACAf,EAAAA,eAAe,CAACe,SAAhB,CAA0BG,WAA1B,GAAwClB,eAAxC;AAEA;AACF;AACA;AACA;AACA;AACA;;AACEA,EAAAA,eAAe,CAACe,SAAhB,CAA0BI,cAA1B,GAA2C,SAASA,cAAT,GAA2B;AACpEpB,IAAAA,QAAQ,CAACgB,SAAT,CAAmBI,cAAnB,CAAkCb,IAAlC,CAAuC,IAAvC;AACA,SAAKC,aAAL,CAAmBY,cAAnB;AACD,GAHD;AAKA;AACF;AACA;AACA;AACA;AACA;;;AACEnB,EAAAA,eAAe,CAACe,SAAhB,CAA0BK,eAA1B,GAA4C,SAASA,eAAT,GAA4B;AACtErB,IAAAA,QAAQ,CAACgB,SAAT,CAAmBK,eAAnB,CAAmCd,IAAnC,CAAwC,IAAxC;AACA,SAAKC,aAAL,CAAmBa,eAAnB;AACD,GAHD;;AAKA,SAAOpB,eAAP;AACD,CAjEsB,CAiErBD,QAjEqB,CAAvB;;AAoEA,eAAeC,eAAf,C,CAEA","sourcesContent":["/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = (function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {module:ol/pixel~Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map"]},"metadata":{},"sourceType":"module"}