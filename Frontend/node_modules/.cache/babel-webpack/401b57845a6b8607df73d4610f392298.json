{"ast":null,"code":"/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\n\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains (x, y).\n   */\n  function (coordinate) {\n    return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n  });\n  return !outside;\n}\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n\n    x1 = x2;\n    y1 = y2;\n  }\n\n  return wn !== 0;\n}\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n\n    offset = ends[ends.length - 1];\n  }\n\n  return false;\n} //# sourceMappingURL=contains.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/geom/flat/contains.js"],"names":["forEachCorner","linearRingContainsExtent","flatCoordinates","offset","end","stride","extent","outside","coordinate","linearRingContainsXY","x","y","wn","x1","y1","x2","y2","linearRingsContainsXY","ends","length","i","ii","linearRingssContainsXY","endss"],"mappings":"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","sourcesContent":["/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map"]},"metadata":{},"sourceType":"module"}