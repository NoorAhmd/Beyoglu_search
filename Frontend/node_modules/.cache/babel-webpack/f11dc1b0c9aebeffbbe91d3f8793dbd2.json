{"ast":null,"code":"/**\n * @module ol/style/Image\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n  /**\n  * @private\n  * @type {number}\n  */\n  this.opacity_ = options.opacity;\n  /**\n  * @private\n  * @type {boolean}\n  */\n\n  this.rotateWithView_ = options.rotateWithView;\n  /**\n  * @private\n  * @type {number}\n  */\n\n  this.rotation_ = options.rotation;\n  /**\n  * @private\n  * @type {number}\n  */\n\n  this.scale_ = options.scale;\n  /**\n  * @private\n  * @type {boolean}\n  */\n\n  this.snapToPixel_ = options.snapToPixel;\n};\n/**\n* Get the symbolizer opacity.\n* @return {number} Opacity.\n* @api\n*/\n\n\nImageStyle.prototype.getOpacity = function getOpacity() {\n  return this.opacity_;\n};\n/**\n* Determine whether the symbolizer rotates with the map.\n* @return {boolean} Rotate with map.\n* @api\n*/\n\n\nImageStyle.prototype.getRotateWithView = function getRotateWithView() {\n  return this.rotateWithView_;\n};\n/**\n* Get the symoblizer rotation.\n* @return {number} Rotation.\n* @api\n*/\n\n\nImageStyle.prototype.getRotation = function getRotation() {\n  return this.rotation_;\n};\n/**\n* Get the symbolizer scale.\n* @return {number} Scale.\n* @api\n*/\n\n\nImageStyle.prototype.getScale = function getScale() {\n  return this.scale_;\n};\n/**\n* Determine whether the symbolizer should be snapped to a pixel.\n* @return {boolean} The symbolizer should snap to a pixel.\n* @api\n*/\n\n\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel() {\n  return this.snapToPixel_;\n};\n/**\n* Get the anchor point in pixels. The anchor determines the center point for the\n* symbolizer.\n* @abstract\n* @return {Array.<number>} Anchor.\n*/\n\n\nImageStyle.prototype.getAnchor = function getAnchor() {};\n/**\n* Get the image element for the symbolizer.\n* @abstract\n* @param {number} pixelRatio Pixel ratio.\n* @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n*/\n\n\nImageStyle.prototype.getImage = function getImage(pixelRatio) {};\n/**\n* @abstract\n* @param {number} pixelRatio Pixel ratio.\n* @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n*/\n\n\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage(pixelRatio) {};\n/**\n* @abstract\n* @return {module:ol/ImageState} Image state.\n*/\n\n\nImageStyle.prototype.getImageState = function getImageState() {};\n/**\n* @abstract\n* @return {module:ol/size~Size} Image size.\n*/\n\n\nImageStyle.prototype.getImageSize = function getImageSize() {};\n/**\n* @abstract\n* @return {module:ol/size~Size} Size of the hit-detection image.\n*/\n\n\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize() {};\n/**\n* Get the origin of the symbolizer.\n* @abstract\n* @return {Array.<number>} Origin.\n*/\n\n\nImageStyle.prototype.getOrigin = function getOrigin() {};\n/**\n* Get the size of the symbolizer (in pixels).\n* @abstract\n* @return {module:ol/size~Size} Size.\n*/\n\n\nImageStyle.prototype.getSize = function getSize() {};\n/**\n* Set the opacity.\n*\n* @param {number} opacity Opacity.\n* @api\n*/\n\n\nImageStyle.prototype.setOpacity = function setOpacity(opacity) {\n  this.opacity_ = opacity;\n};\n/**\n* Set whether to rotate the style with the view.\n*\n* @param {boolean} rotateWithView Rotate with map.\n* @api\n*/\n\n\nImageStyle.prototype.setRotateWithView = function setRotateWithView(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n/**\n* Set the rotation.\n*\n* @param {number} rotation Rotation.\n* @api\n*/\n\n\nImageStyle.prototype.setRotation = function setRotation(rotation) {\n  this.rotation_ = rotation;\n};\n/**\n* Set the scale.\n*\n* @param {number} scale Scale.\n* @api\n*/\n\n\nImageStyle.prototype.setScale = function setScale(scale) {\n  this.scale_ = scale;\n};\n/**\n* Set whether to snap the image to the closest pixel.\n*\n* @param {boolean} snapToPixel Snap to pixel?\n* @api\n*/\n\n\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n/**\n* @abstract\n* @param {function(this: T, module:ol/events/Event)} listener Listener function.\n* @param {T} thisArg Value to use as `this` when executing `listener`.\n* @return {module:ol/events~EventsKey|undefined} Listener key.\n* @template T\n*/\n\n\nImageStyle.prototype.listenImageChange = function listenImageChange(listener, thisArg) {};\n/**\n* Load not yet loaded URI.\n* @abstract\n*/\n\n\nImageStyle.prototype.load = function load() {};\n/**\n* @abstract\n* @param {function(this: T, module:ol/events/Event)} listener Listener function.\n* @param {T} thisArg Value to use as `this` when executing `listener`.\n* @template T\n*/\n\n\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange(listener, thisArg) {};\n\nexport default ImageStyle; //# sourceMappingURL=Image.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/style/Image.js"],"names":["ImageStyle","options","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","rotation","scale_","scale","snapToPixel_","snapToPixel","prototype","getOpacity","getRotateWithView","getRotation","getScale","getSnapToPixel","getAnchor","getImage","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","getSize","setOpacity","setRotateWithView","setRotation","setScale","setSnapToPixel","listenImageChange","listener","thisArg","load","unlistenImageChange"],"mappings":"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","sourcesContent":["/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.opacity_ = options.opacity;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n/**\n* Get the symbolizer opacity.\n* @return {number} Opacity.\n* @api\n*/\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n* Determine whether the symbolizer rotates with the map.\n* @return {boolean} Rotate with map.\n* @api\n*/\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the symoblizer rotation.\n* @return {number} Rotation.\n* @api\n*/\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the symbolizer scale.\n* @return {number} Scale.\n* @api\n*/\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Determine whether the symbolizer should be snapped to a pixel.\n* @return {boolean} The symbolizer should snap to a pixel.\n* @api\n*/\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return this.snapToPixel_;\n};\n\n/**\n* Get the anchor point in pixels. The anchor determines the center point for the\n* symbolizer.\n* @abstract\n* @return {Array.<number>} Anchor.\n*/\nImageStyle.prototype.getAnchor = function getAnchor () {};\n\n/**\n* Get the image element for the symbolizer.\n* @abstract\n* @param {number} pixelRatio Pixel ratio.\n* @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n*/\nImageStyle.prototype.getImage = function getImage (pixelRatio) {};\n\n/**\n* @abstract\n* @param {number} pixelRatio Pixel ratio.\n* @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n*/\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {};\n\n/**\n* @abstract\n* @return {module:ol/ImageState} Image state.\n*/\nImageStyle.prototype.getImageState = function getImageState () {};\n\n/**\n* @abstract\n* @return {module:ol/size~Size} Image size.\n*/\nImageStyle.prototype.getImageSize = function getImageSize () {};\n\n/**\n* @abstract\n* @return {module:ol/size~Size} Size of the hit-detection image.\n*/\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {};\n\n/**\n* Get the origin of the symbolizer.\n* @abstract\n* @return {Array.<number>} Origin.\n*/\nImageStyle.prototype.getOrigin = function getOrigin () {};\n\n/**\n* Get the size of the symbolizer (in pixels).\n* @abstract\n* @return {module:ol/size~Size} Size.\n*/\nImageStyle.prototype.getSize = function getSize () {};\n\n/**\n* Set the opacity.\n*\n* @param {number} opacity Opacity.\n* @api\n*/\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n* Set whether to rotate the style with the view.\n*\n* @param {boolean} rotateWithView Rotate with map.\n* @api\n*/\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number} rotation Rotation.\n* @api\n*/\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number} scale Scale.\n* @api\n*/\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set whether to snap the image to the closest pixel.\n*\n* @param {boolean} snapToPixel Snap to pixel?\n* @api\n*/\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n/**\n* @abstract\n* @param {function(this: T, module:ol/events/Event)} listener Listener function.\n* @param {T} thisArg Value to use as `this` when executing `listener`.\n* @return {module:ol/events~EventsKey|undefined} Listener key.\n* @template T\n*/\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n/**\n* Load not yet loaded URI.\n* @abstract\n*/\nImageStyle.prototype.load = function load () {};\n\n/**\n* @abstract\n* @param {function(this: T, module:ol/events/Event)} listener Listener function.\n* @param {T} thisArg Value to use as `this` when executing `listener`.\n* @template T\n*/\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map"]},"metadata":{},"sourceType":"module"}