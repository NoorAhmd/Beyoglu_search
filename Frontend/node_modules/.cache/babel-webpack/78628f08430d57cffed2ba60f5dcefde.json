{"ast":null,"code":"/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport { rotate, rotateWithoutConstraints } from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\n\nvar DragRotate = function (PointerInteraction) {\n  function DragRotate(opt_options) {\n    var options = opt_options ? opt_options : {};\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.lastAngle_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  if (PointerInteraction) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create(PointerInteraction && PointerInteraction.prototype);\n  DragRotate.prototype.constructor = DragRotate;\n  return DragRotate;\n}(PointerInteraction);\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\n\n\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n\n  if (this.lastAngle_ !== undefined) {\n    var delta = theta - this.lastAngle_;\n    var rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n\n  this.lastAngle_ = theta;\n}\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\n\n\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\n\n\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotate; //# sourceMappingURL=DragRotate.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/ol/interaction/DragRotate.js"],"names":["disable","ViewHint","altShiftKeysOnly","mouseOnly","mouseActionButton","FALSE","rotate","rotateWithoutConstraints","PointerInteraction","DragRotate","opt_options","options","call","handleDownEvent","handleDragEvent","handleUpEvent","stopDown","condition_","condition","lastAngle_","undefined","duration_","duration","__proto__","prototype","Object","create","constructor","mapBrowserEvent","map","view","getView","getConstraints","rotation","size","getSize","offset","pixel","theta","Math","atan2","delta","getRotation","setHint","INTERACTING"],"mappings":"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","sourcesContent":["/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = (function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  return DragRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    var delta = theta - this.lastAngle_;\n    var rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map"]},"metadata":{},"sourceType":"module"}