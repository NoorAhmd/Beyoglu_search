{"ast":null,"code":"/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\n\nvar Property = {\n  LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\n\nexport var CollectionEvent = function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n\n    this.element = opt_element;\n  }\n\n  if (Event) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create(Event && Event.prototype);\n  CollectionEvent.prototype.constructor = CollectionEvent;\n  return CollectionEvent;\n}(Event);\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @template T\n * @api\n */\n\nvar Collection = function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n    var this$1 = this;\n    BaseObject.call(this);\n    var options = opt_options || {};\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.unique_ = !!options.unique;\n    /**\n     * @private\n     * @type {!Array.<T>}\n     */\n\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this$1.assertUnique_(this$1.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  if (BaseObject) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create(BaseObject && BaseObject.prototype);\n  Collection.prototype.constructor = Collection;\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n\n  Collection.prototype.clear = function clear() {\n    var this$1 = this;\n\n    while (this.getLength() > 0) {\n      this$1.pop();\n    }\n  };\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array.<T>} arr Array.\n   * @return {module:ol/Collection.<T>} This collection.\n   * @api\n   */\n\n\n  Collection.prototype.extend = function extend(arr) {\n    var this$1 = this;\n\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this$1.push(arr[i]);\n    }\n\n    return this;\n  };\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array.<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n\n\n  Collection.prototype.forEach = function forEach(f) {\n    var array = this.array_;\n\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array.<T>} Array.\n   * @api\n   */\n\n\n  Collection.prototype.getArray = function getArray() {\n    return this.array_;\n  };\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n\n\n  Collection.prototype.item = function item(index) {\n    return this.array_[index];\n  };\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n\n\n  Collection.prototype.getLength = function getLength() {\n    return (\n      /** @type {number} */\n      this.get(Property.LENGTH)\n    );\n  };\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n\n\n  Collection.prototype.insertAt = function insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n\n\n  Collection.prototype.pop = function pop() {\n    return this.removeAt(this.getLength() - 1);\n  };\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n\n\n  Collection.prototype.push = function push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n\n\n  Collection.prototype.remove = function remove(elem) {\n    var this$1 = this;\n    var arr = this.array_;\n\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this$1.removeAt(i);\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n\n\n  Collection.prototype.removeAt = function removeAt(index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n\n\n  Collection.prototype.setAt = function setAt(index, elem) {\n    var this$1 = this;\n    var n = this.getLength();\n\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this$1.insertAt(j, undefined);\n      }\n\n      this.insertAt(index, elem);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  Collection.prototype.updateLength_ = function updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n\n\n  Collection.prototype.assertUnique_ = function assertUnique_(elem, opt_except) {\n    var this$1 = this;\n\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this$1.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject);\n\nexport default Collection; //# sourceMappingURL=Collection.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/Collection.js"],"names":["AssertionError","CollectionEventType","BaseObject","Event","Property","LENGTH","CollectionEvent","type","opt_element","call","element","__proto__","prototype","Object","create","constructor","Collection","opt_array","opt_options","this$1","options","unique_","unique","array_","i","ii","length","assertUnique_","updateLength_","clear","getLength","pop","extend","arr","push","forEach","f","array","getArray","item","index","get","insertAt","elem","splice","dispatchEvent","ADD","removeAt","n","remove","undefined","prev","REMOVE","setAt","j","set","opt_except"],"mappings":"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","sourcesContent":["/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = (function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @template T\n * @api\n */\nvar Collection = (function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array.<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this$1.assertUnique_(this$1.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    var this$1 = this;\n\n    while (this.getLength() > 0) {\n      this$1.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array.<T>} arr Array.\n   * @return {module:ol/Collection.<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    var this$1 = this;\n\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this$1.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array.<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array.<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return /** @type {number} */ (this.get(Property.LENGTH));\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var this$1 = this;\n\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this$1.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var this$1 = this;\n\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this$1.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    var this$1 = this;\n\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this$1.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map"]},"metadata":{},"sourceType":"module"}