{"ast":null,"code":"/**\n * @module ol/render/canvas/ReplayGroup\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport { ORDER } from '../replay.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\n\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\nvar CanvasReplayGroup = function (ReplayGroup) {\n  function CanvasReplayGroup(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n    ReplayGroup.call(this);\n    /**\n     * Declutter tree.\n     * @private\n     */\n\n    this.declutterTree_ = declutterTree;\n    /**\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     * @private\n     */\n\n    this.declutterGroup_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.tolerance_ = tolerance;\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n\n    this.maxExtent_ = maxExtent;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.overlaps_ = overlaps;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.resolution_ = resolution;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.renderBuffer_ = opt_renderBuffer;\n    /**\n     * @private\n     * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n     */\n\n    this.replaysByZIndex_ = {};\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if (ReplayGroup) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create(ReplayGroup && ReplayGroup.prototype);\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n  /**\n   * @param {boolean} group Group with previous replay.\n   * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n   */\n\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter(group) {\n    var declutter = null;\n\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */\n\n        declutter[4]++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n\n    return declutter;\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   */\n\n\n  CanvasReplayGroup.prototype.clip = function clip(context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n  /**\n   * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n\n\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays(replays) {\n    var this$1 = this;\n\n    for (var zIndex in this$1.replaysByZIndex_) {\n      var candidates = this$1.replaysByZIndex_[zIndex];\n\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  CanvasReplayGroup.prototype.finish = function finish() {\n    var this$1 = this;\n\n    for (var zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n\n\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n    var this$1 = this;\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n\n\n    var hitExtent;\n\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = void 0;\n\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) || declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n    /** @type {Array.<number>} */\n\n\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n    var i, j, replays, replay, result;\n\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n\n        if (replay !== undefined) {\n          if (declutterReplays && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @return {Array.<number>} Clip coordinates.\n   */\n\n\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords(transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasReplayGroup.prototype.getReplay = function getReplay(zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n\n    var replay = replays[replayType];\n\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n\n    return replay;\n  };\n  /**\n   * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n   */\n\n\n  CanvasReplayGroup.prototype.getReplays = function getReplays() {\n    return this.replaysByZIndex_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1() {\n    return isEmpty(this.replaysByZIndex_);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n\n\n  CanvasReplayGroup.prototype.replay = function replay(context, transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n    var this$1 = this;\n    /** @type {Array.<number>} */\n\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction); // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n\n    context.save();\n    this.clip(context, transform);\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n\n        if (replay !== undefined) {\n          if (opt_declutterReplays && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup);\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\n\n\nvar circleArrayCache = {\n  0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\n\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\n\n\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n    y++;\n    error += 1 + 2 * y;\n\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\n\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\nexport default CanvasReplayGroup; //# sourceMappingURL=ReplayGroup.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/render/canvas/ReplayGroup.js"],"names":["numberSafeCompareFunction","createCanvasContext2D","buffer","createEmpty","extendCoordinate","transform2D","isEmpty","ReplayGroup","ReplayType","CanvasReplay","CanvasImageReplay","CanvasLineStringReplay","CanvasPolygonReplay","CanvasTextReplay","ORDER","create","createTransform","compose","composeTransform","BATCH_CONSTRUCTORS","CanvasReplayGroup","tolerance","maxExtent","resolution","pixelRatio","overlaps","declutterTree","opt_renderBuffer","call","declutterTree_","declutterGroup_","tolerance_","maxExtent_","overlaps_","pixelRatio_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","__proto__","prototype","Object","constructor","addDeclutter","group","declutter","push","clip","context","transform","flatClipCoords","getClipCoords","beginPath","moveTo","lineTo","hasReplays","replays","this$1","zIndex","candidates","i","ii","length","finish","zKey","replayKey","forEachFeatureAtCoordinate","coordinate","rotation","hitTolerance","skippedFeaturesHash","callback","declutterReplays","Math","round","contextSize","canvas","width","height","clearRect","hitExtent","undefined","mask","getCircleArray","declutteredFeatures","all","map","entry","value","replayType","featureCallback","feature","imageData","getImageData","data","j","result","IMAGE","TEXT","indexOf","zs","keys","Number","sort","replay","zIndexKey","toString","slice","replayHitDetection","minX","minY","maxX","maxY","getReplay","Constructor","getReplays","isEmpty$1","viewRotation","opt_replayTypes","opt_declutterReplays","save","replayTypes","jj","restore","circleArrayCache","fillCircleArrayRowToMiddle","array","x","y","radius","floor","arraySize","arr","Array","error","replayDeclutter","skippedFeatureUids","z","zz","replayData"],"mappings":"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","sourcesContent":["/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = (function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @param {boolean} group Group with previous replay.\n   * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    var this$1 = this;\n\n    for (var zIndex in this$1.replaysByZIndex_) {\n      var candidates = this$1.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    var this$1 = this;\n\n    for (var zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @return {Array.<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map"]},"metadata":{},"sourceType":"module"}