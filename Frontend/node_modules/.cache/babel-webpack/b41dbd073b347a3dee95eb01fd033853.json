{"ast":null,"code":"/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { TRUE } from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n\nvar CanvasLayerRenderer = function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n    LayerRenderer.call(this, layer);\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    this.renderedResolution;\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n\n    this.transform_ = createTransform();\n  }\n\n  if (LayerRenderer) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create(LayerRenderer && LayerRenderer.prototype);\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/extent~Extent} extent Clip extent.\n   * @protected\n   */\n\n  CanvasLayerRenderer.prototype.clip = function clip(context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(\n    /** @type {module:ol/extent~Extent} */\n    extent);\n    var topRight = getTopRight(\n    /** @type {module:ol/extent~Extent} */\n    extent);\n    var bottomRight = getBottomRight(\n    /** @type {module:ol/extent~Extent} */\n    extent);\n    var bottomLeft = getBottomLeft(\n    /** @type {module:ol/extent~Extent} */\n    extent);\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @private\n   */\n\n\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_(type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ? opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState, context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n\n\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n\n\n  CanvasLayerRenderer.prototype.postCompose = function postCompose(context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n\n\n  CanvasLayerRenderer.prototype.preCompose = function preCompose(context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n\n\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent(context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n\n\n  CanvasLayerRenderer.prototype.getTransform = function getTransform(frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n\n\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame(frameState, layerState, context) {};\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n\n\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame(frameState, layerState) {};\n\n  return CanvasLayerRenderer;\n}(LayerRenderer);\n\nexport default CanvasLayerRenderer; //# sourceMappingURL=Layer.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/ol/renderer/canvas/Layer.js"],"names":["getBottomLeft","getBottomRight","getTopLeft","getTopRight","TRUE","RenderEvent","RenderEventType","rotateAtOffset","CanvasImmediateRenderer","LayerRenderer","create","createTransform","apply","applyTransform","compose","composeTransform","CanvasLayerRenderer","layer","call","renderedResolution","transform_","__proto__","prototype","Object","constructor","clip","context","frameState","extent","pixelRatio","width","size","height","rotation","viewState","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","save","beginPath","moveTo","lineTo","dispatchComposeEvent_","type","opt_transform","getLayer","hasListener","transform","undefined","getTransform","render","composeEvent","dispatchEvent","forEachLayerAtCoordinate","coordinate","hitTolerance","callback","thisArg","hasFeature","forEachFeatureAtCoordinate","postCompose","layerState","POSTCOMPOSE","preCompose","PRECOMPOSE","dispatchRenderEvent","RENDER","offsetX","dx1","dy1","sx","resolution","sy","angle","dx2","center","dy2","composeFrame","prepareFrame"],"mappings":"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","sourcesContent":["/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\nvar CanvasLayerRenderer = (function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/extent~Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n    var topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {};\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map"]},"metadata":{},"sourceType":"module"}