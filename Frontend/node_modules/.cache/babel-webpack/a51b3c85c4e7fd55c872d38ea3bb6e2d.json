{"ast":null,"code":"/**\n * @module ol/style/Stroke\n */\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\n\nvar Stroke = function Stroke(opt_options) {\n  var options = opt_options || {};\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n\n  this.color_ = options.color !== undefined ? options.color : null;\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n\n  this.lineCap_ = options.lineCap;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.lineDashOffset_ = options.lineDashOffset;\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n\n  this.lineJoin_ = options.lineJoin;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.miterLimit_ = options.miterLimit;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.width_ = options.width;\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n\n  this.checksum_ = undefined;\n};\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\n\n\nStroke.prototype.clone = function clone() {\n  var color = this.getColor();\n  return new Stroke({\n    color: color && color.slice ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\n\n\nStroke.prototype.getColor = function getColor() {\n  return this.color_;\n};\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\n\n\nStroke.prototype.getLineCap = function getLineCap() {\n  return this.lineCap_;\n};\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\n\n\nStroke.prototype.getLineDash = function getLineDash() {\n  return this.lineDash_;\n};\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\n\n\nStroke.prototype.getLineDashOffset = function getLineDashOffset() {\n  return this.lineDashOffset_;\n};\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\n\n\nStroke.prototype.getLineJoin = function getLineJoin() {\n  return this.lineJoin_;\n};\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\n\n\nStroke.prototype.getMiterLimit = function getMiterLimit() {\n  return this.miterLimit_;\n};\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\n\n\nStroke.prototype.getWidth = function getWidth() {\n  return this.width_;\n};\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\n\n\nStroke.prototype.setColor = function setColor(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\n\n\nStroke.prototype.setLineCap = function setLineCap(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\n\n\nStroke.prototype.setLineDash = function setLineDash(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\n\n\nStroke.prototype.setLineDashOffset = function setLineDashOffset(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\n\n\nStroke.prototype.setLineJoin = function setLineJoin(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\n\n\nStroke.prototype.setMiterLimit = function setMiterLimit(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\n\n\nStroke.prototype.setWidth = function setWidth(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n/**\n * @return {string} The checksum.\n */\n\n\nStroke.prototype.getChecksum = function getChecksum() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n\n    this.checksum_ += ',' + (this.lineCap_ !== undefined ? this.lineCap_.toString() : '-') + ',' + (this.lineDash_ ? this.lineDash_.toString() : '-') + ',' + (this.lineDashOffset_ !== undefined ? this.lineDashOffset_ : '-') + ',' + (this.lineJoin_ !== undefined ? this.lineJoin_ : '-') + ',' + (this.miterLimit_ !== undefined ? this.miterLimit_.toString() : '-') + ',' + (this.width_ !== undefined ? this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke; //# sourceMappingURL=Stroke.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/ol/style/Stroke.js"],"names":["getUid","Stroke","opt_options","options","color_","color","undefined","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","width","checksum_","prototype","clone","getColor","slice","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","getWidth","setColor","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","getChecksum","toString"],"mappings":"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","sourcesContent":["/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map"]},"metadata":{},"sourceType":"module"}