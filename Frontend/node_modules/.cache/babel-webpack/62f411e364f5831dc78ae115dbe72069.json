{"ast":null,"code":"/**\n * @module ol/proj/epsg4326\n */\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\n\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\n\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\n\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\n\nvar EPSG4326Projection = function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n  }\n\n  if (Projection) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create(Projection && Projection.prototype);\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n  return EPSG4326Projection;\n}(Projection);\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\n\n\nexport var PROJECTIONS = [new EPSG4326Projection('CRS:84'), new EPSG4326Projection('EPSG:4326', 'neu'), new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'), new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'), new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'), new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'), new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'), new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')]; //# sourceMappingURL=epsg4326.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/ol/proj/epsg4326.js"],"names":["Projection","Units","RADIUS","EXTENT","METERS_PER_UNIT","Math","PI","EPSG4326Projection","code","opt_axisOrientation","call","units","DEGREES","extent","axisOrientation","global","metersPerUnit","worldExtent","__proto__","prototype","Object","create","constructor","PROJECTIONS"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,uBAAvB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,MAAM,GAAG,OAAb;AAGP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,MAAM,GAAG,CAAC,CAAC,GAAF,EAAO,CAAC,EAAR,EAAY,GAAZ,EAAiB,EAAjB,CAAb;AAGP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,eAAe,GAAGC,IAAI,CAACC,EAAL,GAAUJ,MAAV,GAAmB,GAAzC;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIK,kBAAkB,GAAI,UAAUP,UAAV,EAAsB;AAC9C,WAASO,kBAAT,CAA4BC,IAA5B,EAAkCC,mBAAlC,EAAuD;AACrDT,IAAAA,UAAU,CAACU,IAAX,CAAgB,IAAhB,EAAsB;AACpBF,MAAAA,IAAI,EAAEA,IADc;AAEpBG,MAAAA,KAAK,EAAEV,KAAK,CAACW,OAFO;AAGpBC,MAAAA,MAAM,EAAEV,MAHY;AAIpBW,MAAAA,eAAe,EAAEL,mBAJG;AAKpBM,MAAAA,MAAM,EAAE,IALY;AAMpBC,MAAAA,aAAa,EAAEZ,eANK;AAOpBa,MAAAA,WAAW,EAAEd;AAPO,KAAtB;AAUD;;AAED,MAAKH,UAAL,EAAkBO,kBAAkB,CAACW,SAAnB,GAA+BlB,UAA/B;AAClBO,EAAAA,kBAAkB,CAACY,SAAnB,GAA+BC,MAAM,CAACC,MAAP,CAAerB,UAAU,IAAIA,UAAU,CAACmB,SAAxC,CAA/B;AACAZ,EAAAA,kBAAkB,CAACY,SAAnB,CAA6BG,WAA7B,GAA2Cf,kBAA3C;AAEA,SAAOA,kBAAP;AACD,CAnByB,CAmBxBP,UAnBwB,CAA1B;AAsBA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAIuB,WAAW,GAAG,CACvB,IAAIhB,kBAAJ,CAAuB,QAAvB,CADuB,EAEvB,IAAIA,kBAAJ,CAAuB,WAAvB,EAAoC,KAApC,CAFuB,EAGvB,IAAIA,kBAAJ,CAAuB,4BAAvB,EAAqD,KAArD,CAHuB,EAIvB,IAAIA,kBAAJ,CAAuB,+BAAvB,EAAwD,KAAxD,CAJuB,EAKvB,IAAIA,kBAAJ,CAAuB,+BAAvB,CALuB,EAMvB,IAAIA,kBAAJ,CAAuB,0BAAvB,CANuB,EAOvB,IAAIA,kBAAJ,CAAuB,8CAAvB,EAAuE,KAAvE,CAPuB,EAQvB,IAAIA,kBAAJ,CAAuB,6BAAvB,EAAsD,KAAtD,CARuB,CAAlB,C,CAWP","sourcesContent":["/**\n * @module ol/proj/epsg4326\n */\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = (function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map"]},"metadata":{},"sourceType":"module"}