{"ast":null,"code":"/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport { create as createTransform } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {module:ol/color~Color}\n */\n\nexport var defaultFillStyle = [0, 0, 0, 1];\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array.<number>}\n */\n\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {module:ol/color~Color}\n */\n\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array.<number>}\n */\n\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\n\nexport var labelCache = new LRUCache();\n/**\n * @type {!Object.<string, number>}\n */\n\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\n\nvar measureContext = null;\n/**\n * @type {!Object.<string, number>}\n */\n\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\n\nexport var checkFont = function () {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = \"wmytzilWMYTZIL@#/&?$%10\\uF013\";\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    var available = true;\n\n    for (var i = 0; i < len; ++i) {\n      var referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        var width = context.measureText(text).width; // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n\n        available = available && width != referenceWidth;\n      }\n    }\n\n    return available;\n  }\n\n  function check() {\n    var done = true;\n\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights); // Make sure that loaded fonts are picked up by Safari\n\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n\n    if (!fontFamilies) {\n      return;\n    }\n\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n}();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\n\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n\n  return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\n\n\nexport var measureTextHeight = function () {\n  var span;\n  var heights = textHeights;\n  return function (font) {\n    var height = heights[font];\n\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n\n    return height;\n  };\n}();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\n\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n\n  return measureContext.measureText(text).width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\n\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\n\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n} //# sourceMappingURL=canvas.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/ol/render/canvas.js"],"names":["getFontFamilies","createCanvasContext2D","clear","LRUCache","create","createTransform","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkedFonts","measureContext","textHeights","checkFont","retries","checked","size","referenceFonts","len","length","text","interval","referenceWidth","isAvailable","font","context","getMeasureContext","available","i","referenceFont","measureText","width","check","done","clearInterval","undefined","fontSpec","fontFamilies","ii","fontFamily","setInterval","measureTextHeight","span","heights","height","document","createElement","textContent","style","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","measureTextWidth","rotateAtOffset","rotation","offsetX","offsetY","translate","rotate","resetTransform","drawImage","transform","opacity","image","originX","originY","w","h","x","y","scale","alpha","globalAlpha","setTransform","apply"],"mappings":"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","sourcesContent":["/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    var available = true;\n    for (var i = 0; i < len; ++i) {\n      var referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        var width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map"]},"metadata":{},"sourceType":"module"}