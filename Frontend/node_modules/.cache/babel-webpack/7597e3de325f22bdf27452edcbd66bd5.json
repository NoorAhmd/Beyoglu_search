{"ast":null,"code":"/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\n\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return (\n      /** @type {string|CanvasPattern|CanvasGradient} */\n      color\n    );\n  } else {\n    return toString(\n    /** @type {module:ol/color~Color} */\n    color);\n  }\n}\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\n\nexport function isColorLike(color) {\n  return typeof color === 'string' || color instanceof CanvasPattern || color instanceof CanvasGradient;\n} //# sourceMappingURL=colorlike.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/colorlike.js"],"names":["toString","asColorLike","color","isColorLike","CanvasPattern","CanvasGradient"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,QAAR,QAAuB,YAAvB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjC,MAAIC,WAAW,CAACD,KAAD,CAAf,EAAwB;AACtB;AAAO;AAAoDA,MAAAA;AAA3D;AACD,GAFD,MAEO;AACL,WAAOF,QAAQ;AAAC;AAAsCE,IAAAA,KAAvC,CAAf;AACD;AACF;AAGD;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBD,KAArB,EAA4B;AACjC,SACE,OAAOA,KAAP,KAAiB,QAAjB,IACAA,KAAK,YAAYE,aADjB,IAEAF,KAAK,YAAYG,cAHnB;AAKD,C,CAED","sourcesContent":["/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n\n//# sourceMappingURL=colorlike.js.map"]},"metadata":{},"sourceType":"module"}