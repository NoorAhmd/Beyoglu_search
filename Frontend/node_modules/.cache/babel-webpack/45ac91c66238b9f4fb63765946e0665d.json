{"ast":null,"code":"/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\n\nvar IconImageCache = function IconImageCache() {\n  /**\n  * @type {!Object.<string, module:ol/style/IconImage>}\n  * @private\n  */\n  this.cache_ = {};\n  /**\n  * @type {number}\n  * @private\n  */\n\n  this.cacheSize_ = 0;\n  /**\n  * @type {number}\n  * @private\n  */\n\n  this.maxCacheSize_ = 32;\n};\n/**\n* FIXME empty description for jsdoc\n*/\n\n\nIconImageCache.prototype.clear = function clear() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n/**\n* FIXME empty description for jsdoc\n*/\n\n\nIconImageCache.prototype.expire = function expire() {\n  var this$1 = this;\n\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n\n    for (var key in this$1.cache_) {\n      var iconImage = this$1.cache_[key];\n\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this$1.cache_[key];\n        --this$1.cacheSize_;\n      }\n    }\n  }\n};\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @return {module:ol/style/IconImage} Icon image.\n*/\n\n\nIconImageCache.prototype.get = function get(src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @param {module:ol/style/IconImage} iconImage Icon image.\n*/\n\n\nIconImageCache.prototype.set = function set(src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\n\n\nIconImageCache.prototype.setSize = function setSize(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\n\n\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\n\nexport var shared = new IconImageCache(); //# sourceMappingURL=IconImageCache.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/style/IconImageCache.js"],"names":["asString","IconImageCache","cache_","cacheSize_","maxCacheSize_","prototype","clear","expire","this$1","i","key","iconImage","hasListener","get","src","crossOrigin","color","getKey","set","setSize","maxCacheSize","colorString","shared"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,QAAR,QAAuB,aAAvB;AAEA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG,SAASA,cAAT,GAA0B;AAE7C;AACF;AACA;AACA;AACE,OAAKC,MAAL,GAAc,EAAd;AAEA;AACF;AACA;AACA;;AACE,OAAKC,UAAL,GAAkB,CAAlB;AAEA;AACF;AACA;AACA;;AACE,OAAKC,aAAL,GAAqB,EAArB;AACD,CAnBD;AAqBA;AACA;AACA;;;AACAH,cAAc,CAACI,SAAf,CAAyBC,KAAzB,GAAiC,SAASA,KAAT,GAAkB;AACjD,OAAKJ,MAAL,GAAc,EAAd;AACA,OAAKC,UAAL,GAAkB,CAAlB;AACD,CAHD;AAKA;AACA;AACA;;;AACAF,cAAc,CAACI,SAAf,CAAyBE,MAAzB,GAAkC,SAASA,MAAT,GAAmB;AACjD,MAAIC,MAAM,GAAG,IAAb;;AAEF,MAAI,KAAKL,UAAL,GAAkB,KAAKC,aAA3B,EAA0C;AACxC,QAAIK,CAAC,GAAG,CAAR;;AACA,SAAK,IAAIC,GAAT,IAAgBF,MAAM,CAACN,MAAvB,EAA+B;AAC7B,UAAIS,SAAS,GAAGH,MAAM,CAACN,MAAP,CAAcQ,GAAd,CAAhB;;AACA,UAAI,CAACD,CAAC,KAAK,CAAP,MAAc,CAAd,IAAmB,CAACE,SAAS,CAACC,WAAV,EAAxB,EAAiD;AAC/C,eAAOJ,MAAM,CAACN,MAAP,CAAcQ,GAAd,CAAP;AACA,UAAEF,MAAM,CAACL,UAAT;AACD;AACF;AACF;AACF,CAbD;AAeA;AACA;AACA;AACA;AACA;AACA;;;AACAF,cAAc,CAACI,SAAf,CAAyBQ,GAAzB,GAA+B,SAASA,GAAT,CAAcC,GAAd,EAAmBC,WAAnB,EAAgCC,KAAhC,EAAuC;AACpE,MAAIN,GAAG,GAAGO,MAAM,CAACH,GAAD,EAAMC,WAAN,EAAmBC,KAAnB,CAAhB;AACA,SAAON,GAAG,IAAI,KAAKR,MAAZ,GAAqB,KAAKA,MAAL,CAAYQ,GAAZ,CAArB,GAAwC,IAA/C;AACD,CAHD;AAKA;AACA;AACA;AACA;AACA;AACA;;;AACAT,cAAc,CAACI,SAAf,CAAyBa,GAAzB,GAA+B,SAASA,GAAT,CAAcJ,GAAd,EAAmBC,WAAnB,EAAgCC,KAAhC,EAAuCL,SAAvC,EAAkD;AAC/E,MAAID,GAAG,GAAGO,MAAM,CAACH,GAAD,EAAMC,WAAN,EAAmBC,KAAnB,CAAhB;AACA,OAAKd,MAAL,CAAYQ,GAAZ,IAAmBC,SAAnB;AACA,IAAE,KAAKR,UAAP;AACD,CAJD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAF,cAAc,CAACI,SAAf,CAAyBc,OAAzB,GAAmC,SAASA,OAAT,CAAkBC,YAAlB,EAAgC;AACjE,OAAKhB,aAAL,GAAqBgB,YAArB;AACA,OAAKb,MAAL;AACD,CAHD;AAMA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASU,MAAT,CAAgBH,GAAhB,EAAqBC,WAArB,EAAkCC,KAAlC,EAAyC;AACvC,MAAIK,WAAW,GAAGL,KAAK,GAAGhB,QAAQ,CAACgB,KAAD,CAAX,GAAqB,MAA5C;AACA,SAAOD,WAAW,GAAG,GAAd,GAAoBD,GAApB,GAA0B,GAA1B,GAAgCO,WAAvC;AACD;;AAGD,eAAepB,cAAf;AAGA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIqB,MAAM,GAAG,IAAIrB,cAAJ,EAAb,C,CAEP","sourcesContent":["/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object.<string, module:ol/style/IconImage>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n    var this$1 = this;\n\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this$1.cache_) {\n      var iconImage = this$1.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this$1.cache_[key];\n        --this$1.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @return {module:ol/style/IconImage} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @param {module:ol/style/IconImage} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map"]},"metadata":{},"sourceType":"module"}