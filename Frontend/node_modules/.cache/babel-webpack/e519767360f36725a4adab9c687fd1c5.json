{"ast":null,"code":"/**\n * @module ol/interaction/Select\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { extend, includes } from '../array.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { singleClick, never, shiftKeyOnly, pointerMove } from '../events/condition.js';\nimport { TRUE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport { clear } from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @enum {string}\n */\n\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\n\nvar SelectEvent = function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n    /**\n     * Selected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n\n    this.selected = selected;\n    /**\n     * Deselected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n\n    this.deselected = deselected;\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n\n  if (Event) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create(Event && Event.prototype);\n  SelectEvent.prototype.constructor = SelectEvent;\n  return SelectEvent;\n}(Event);\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\n\n\nvar Select = function (Interaction) {\n  function Select(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n\n    this.condition_ = options.condition ? options.condition : singleClick;\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.multi_ = options.multi ? options.multi : false;\n    /**\n     * @private\n     * @type {module:ol/interaction/Select~FilterFunction}\n     */\n\n    this.filter_ = options.filter ? options.filter : TRUE;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n    /**\n     * @private\n     * @type {module:ol/layer/Vector}\n     */\n\n    this.featureOverlay_ = featureOverlay;\n    /** @type {function(module:ol/layer/Layer): boolean} */\n\n    var layerFilter;\n\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n\n        layerFilter = function layerFilter(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n\n\n    this.layerFilter_ = layerFilter;\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object.<number, module:ol/layer/Layer>}\n     */\n\n    this.featureLayerAssociation_ = {};\n    var features = this.featureOverlay_.getSource().getFeaturesCollection();\n    listen(features, CollectionEventType.ADD, this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE, this.removeFeature_, this);\n  }\n\n  if (Interaction) Select.__proto__ = Interaction;\n  Select.prototype = Object.create(Interaction && Interaction.prototype);\n  Select.prototype.constructor = Select;\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @private\n   */\n\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_(feature, layer) {\n    var key = getUid(feature);\n    this.featureLayerAssociation_[key] = layer;\n  };\n  /**\n   * Get the selected features.\n   * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n   * @api\n   */\n\n\n  Select.prototype.getFeatures = function getFeatures() {\n    return this.featureOverlay_.getSource().getFeaturesCollection();\n  };\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n\n\n  Select.prototype.getHitTolerance = function getHitTolerance() {\n    return this.hitTolerance_;\n  };\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n   * @return {module:ol/layer/Vector} Layer.\n   * @api\n   */\n\n\n  Select.prototype.getLayer = function getLayer(feature) {\n    var key = getUid(feature);\n    return (\n      /** @type {module:ol/layer/Vector} */\n      this.featureLayerAssociation_[key]\n    );\n  };\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n\n\n  Select.prototype.setHitTolerance = function setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {module:ol/PluggableMap} map Map.\n   * @override\n   * @api\n   */\n\n\n  Select.prototype.setMap = function setMap(map) {\n    var currentMap = this.getMap();\n    var selectedFeatures = this.featureOverlay_.getSource().getFeaturesCollection();\n\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n\n\n  Select.prototype.addFeature_ = function addFeature_(evt) {\n    var map = this.getMap();\n\n    if (map) {\n      map.skipFeature(\n      /** @type {module:ol/Feature} */\n      evt.element);\n    }\n  };\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n\n\n  Select.prototype.removeFeature_ = function removeFeature_(evt) {\n    var map = this.getMap();\n\n    if (map) {\n      map.unskipFeature(\n      /** @type {module:ol/Feature} */\n      evt.element);\n    }\n  };\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @private\n   */\n\n\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_(feature) {\n    var key = getUid(feature);\n    delete this.featureLayerAssociation_[key];\n  };\n\n  return Select;\n}(Interaction);\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\n\n\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.featureOverlay_.getSource().getFeaturesCollection();\n  var deselected = [];\n  var selected = [];\n\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @param {module:ol/layer/Layer} layer Layer.\n     * @return {boolean|undefined} Continue to iterate over the features.\n     */\n    function (feature, layer) {\n      if (this.filter_(feature, layer)) {\n        selected.push(feature);\n        this.addFeatureLayerAssociation_(feature, layer);\n        return !this.multi_;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @param {module:ol/layer/Layer} layer Layer.\n     * @return {boolean|undefined} Continue to iterate over the features.\n     */\n    function (feature, layer) {\n      if (this.filter_(feature, layer)) {\n        if ((add || toggle) && !includes(features.getArray(), feature)) {\n          selected.push(feature);\n          this.addFeatureLayerAssociation_(feature, layer);\n        } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n          deselected.push(feature);\n          this.removeFeatureLayerAssociation_(feature);\n        }\n\n        return !this.multi_;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n\n    features.extend(selected);\n  }\n\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n  }\n\n  return pointerMove(mapBrowserEvent);\n}\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\n\n\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n  return function (feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select; //# sourceMappingURL=Select.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/ol/interaction/Select.js"],"names":["getUid","CollectionEventType","extend","includes","listen","Event","singleClick","never","shiftKeyOnly","pointerMove","TRUE","GeometryType","Interaction","VectorLayer","clear","VectorSource","createEditingStyle","SelectEventType","SELECT","SelectEvent","type","selected","deselected","mapBrowserEvent","call","__proto__","prototype","Object","create","constructor","Select","opt_options","handleEvent","options","condition_","condition","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","hitTolerance","featureOverlay","source","useSpatialIndex","features","wrapX","style","getDefaultStyleFunction","updateWhileAnimating","updateWhileInteracting","featureOverlay_","layerFilter","layers","layer","layerFilter_","featureLayerAssociation_","getSource","getFeaturesCollection","ADD","addFeature_","REMOVE","removeFeature_","addFeatureLayerAssociation_","feature","key","getFeatures","getHitTolerance","getLayer","setHitTolerance","setMap","map","currentMap","getMap","selectedFeatures","forEach","unskipFeature","bind","skipFeature","evt","element","removeFeatureLayerAssociation_","add","remove","toggle","set","forEachFeatureAtPixel","pixel","push","i","getLength","item","index","indexOf","splice","length","getArray","j","dispatchEvent","styles","POLYGON","LINE_STRING","GEOMETRY_COLLECTION","resolution","getGeometry","getType"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,MAAR,QAAqB,YAArB;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,aAA/B;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,WAAR,EAAqBC,KAArB,EAA4BC,YAA5B,EAA0CC,WAA1C,QAA4D,wBAA5D;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAAQC,KAAR,QAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAAQC,kBAAR,QAAiC,mBAAjC;AAGA;AACA;AACA;;AACA,IAAIC,eAAe,GAAG;AACpB;AACF;AACA;AACA;AACA;AACEC,EAAAA,MAAM,EAAE;AANY,CAAtB;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW,GAAI,UAAUd,KAAV,EAAiB;AAClC,WAASc,WAAT,CAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,eAAjD,EAAkE;AAChElB,IAAAA,KAAK,CAACmB,IAAN,CAAW,IAAX,EAAiBJ,IAAjB;AAEA;AACJ;AACA;AACA;AACA;;AACI,SAAKC,QAAL,GAAgBA,QAAhB;AAEA;AACJ;AACA;AACA;AACA;;AACI,SAAKC,UAAL,GAAkBA,UAAlB;AAEA;AACJ;AACA;AACA;AACA;;AACI,SAAKC,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","sourcesContent":["/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = (function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = (function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/Select~FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/layer/Vector}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object.<number, module:ol/layer/Layer>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.featureOverlay_.getSource().getFeaturesCollection();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    var key = getUid(feature);\n    this.featureLayerAssociation_[key] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return this.featureOverlay_.getSource().getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n   * @return {module:ol/layer/Vector} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    var key = getUid(feature);\n    return (\n      /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n    );\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {module:ol/PluggableMap} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures =\n        this.featureOverlay_.getSource().getFeaturesCollection();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    var key = getUid(feature);\n    delete this.featureLayerAssociation_[key];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.featureOverlay_.getSource().getFeaturesCollection();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\n//# sourceMappingURL=Select.js.map"]},"metadata":{},"sourceType":"module"}