{"ast":null,"code":"/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n  /**\n   * @type {number}\n   */\n\n  this.maxX = maxX;\n  /**\n   * @type {number}\n   */\n\n  this.minY = minY;\n  /**\n   * @type {number}\n   */\n\n  this.maxY = maxY;\n};\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\n\n\nTileRange.prototype.contains = function contains(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\n\n\nTileRange.prototype.containsTileRange = function containsTileRange(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX && this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\n\n\nTileRange.prototype.containsXY = function containsXY(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\n\n\nTileRange.prototype.equals = function equals(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY && this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\n\n\nTileRange.prototype.extend = function extend(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n/**\n* @return {number} Height.\n*/\n\n\nTileRange.prototype.getHeight = function getHeight() {\n  return this.maxY - this.minY + 1;\n};\n/**\n* @return {module:ol/size~Size} Size.\n*/\n\n\nTileRange.prototype.getSize = function getSize() {\n  return [this.getWidth(), this.getHeight()];\n};\n/**\n* @return {number} Width.\n*/\n\n\nTileRange.prototype.getWidth = function getWidth() {\n  return this.maxX - this.minX + 1;\n};\n/**\n* @param {module:ol/TileRange} tileRange Tile range.\n* @return {boolean} Intersects.\n*/\n\n\nTileRange.prototype.intersects = function intersects(tileRange) {\n  return this.minX <= tileRange.maxX && this.maxX >= tileRange.minX && this.minY <= tileRange.maxY && this.maxY >= tileRange.minY;\n};\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\n\n\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\nexport default TileRange; //# sourceMappingURL=TileRange.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/ol/TileRange.js"],"names":["TileRange","minX","maxX","minY","maxY","prototype","contains","tileCoord","containsXY","containsTileRange","tileRange","x","y","equals","extend","getHeight","getSize","getWidth","intersects","createOrUpdate","undefined"],"mappings":"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","sourcesContent":["/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n* @return {number} Height.\n*/\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n* @return {module:ol/size~Size} Size.\n*/\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n* @return {number} Width.\n*/\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n* @param {module:ol/TileRange} tileRange Tile range.\n* @return {boolean} Intersects.\n*/\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map"]},"metadata":{},"sourceType":"module"}