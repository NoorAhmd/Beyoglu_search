{"ast":null,"code":"/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport { equals } from '../../array.js';\nimport { getHeight, getIntersection, getWidth, isEmpty } from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport { assign } from '../../obj.js';\nimport { layerRendererConstructors } from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\n\nvar CanvasImageLayerRenderer = function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    var this$1 = this;\n    IntermediateCanvasRenderer.call(this, imageLayer);\n    /**\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n\n    this.image_ = null;\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n\n    this.imageTransform_ = createTransform();\n    /**\n     * @type {!Array.<string>}\n     */\n\n    this.skippedFeatures_ = [];\n    /**\n     * @private\n     * @type {module:ol/renderer/canvas/VectorLayer}\n     */\n\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this$1.vectorRenderer_ = new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n  }\n\n  if (IntermediateCanvasRenderer) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create(IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype);\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n  /**\n   * @inheritDoc\n   */\n\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal() {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasImageLayerRenderer.prototype.getImage = function getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform() {\n    return this.imageTransform_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame(frameState, layerState) {\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var image;\n    var imageLayer =\n    /** @type {module:ol/layer/Image} */\n    this.getLayer();\n    var imageSource = imageLayer.getSource();\n    var hints = frameState.viewHints;\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n\n      var skippedFeatures = this.skippedFeatures_;\n\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState =\n        /** @type {module:ol/PluggableMap~FrameState} */\n        assign({}, frameState, {\n          size: [getWidth(renderedExtent) / viewResolution, getHeight(renderedExtent) / viewResolution],\n          viewState:\n          /** @type {module:ol/View~State} */\n          assign({}, frameState.viewState, {\n            rotation: 0\n          })\n        });\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function (callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) && (vectorRenderer.replayGroupChanged || !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n      }\n\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_, pixelRatio * size[0] / 2, pixelRatio * size[1] / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform, pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5], pixelRatio / viewResolution, -pixelRatio / viewResolution, 0, -viewCenter[0], -viewCenter[1]);\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer);\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n\n\nCanvasImageLayerRenderer['handles'] = function (layer) {\n  return layer.getType() === LayerType.IMAGE || layer.getType() === LayerType.VECTOR &&\n  /** @type {module:ol/layer/Vector} */\n  layer.getRenderMode() === VectorRenderType.IMAGE;\n};\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\n\n\nCanvasImageLayerRenderer['create'] = function (mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(\n  /** @type {module:ol/layer/Image} */\n  layer);\n};\n\nexport default CanvasImageLayerRenderer; //# sourceMappingURL=ImageLayer.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/renderer/canvas/ImageLayer.js"],"names":["ENABLE_RASTER_REPROJECTION","ImageCanvas","LayerType","ViewHint","equals","getHeight","getIntersection","getWidth","isEmpty","VectorRenderType","assign","layerRendererConstructors","IntermediateCanvasRenderer","create","createTransform","compose","composeTransform","CanvasImageLayerRenderer","imageLayer","this$1","call","image_","imageTransform_","skippedFeatures_","vectorRenderer_","getType","VECTOR","i","ii","length","ctor","__proto__","prototype","Object","constructor","disposeInternal","dispose","getImage","getImageTransform","prepareFrame","frameState","layerState","pixelRatio","size","viewState","viewCenter","center","viewResolution","resolution","image","getLayer","imageSource","getSource","hints","viewHints","vectorRenderer","renderedExtent","extent","undefined","ANIMATING","INTERACTING","projection","sourceProjection","getProjection","skippedFeatures","context","imageFrameState","rotation","newSkippedFeatures","keys","skippedFeatureUids","sort","canvas","callback","replayGroupChanged","width","height","loadImage","imageExtent","getExtent","imageResolution","getResolution","imagePixelRatio","getPixelRatio","scale","transform","coordinateToCanvasPixelTransform","renderedResolution","forEachFeatureAtCoordinate","coordinate","hitTolerance","thisArg","layer","IMAGE","getRenderMode","mapRenderer"],"mappings":"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","sourcesContent":["/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    var this$1 = this;\n\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array.<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/renderer/canvas/VectorLayer}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this$1.vectorRenderer_ = new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    var imageSource = imageLayer.getSource();\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map"]},"metadata":{},"sourceType":"module"}