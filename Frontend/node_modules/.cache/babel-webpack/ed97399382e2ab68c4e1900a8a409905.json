{"ast":null,"code":"import _createClass from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Component, ViewChild, ElementRef, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, EventEmitter, Inject, Optional, NgModule, Injectable, Injector, SkipSelf, TemplateRef, defineInjectable, inject, INJECTOR } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves, AnimationDurations, MatCommonModule } from '@angular/material/core';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { DOCUMENT, CommonModule, Location } from '@angular/common';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { OverlayModule, Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { merge, Subject, Subscription, of } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Injection token that can be used to access the data that was passed in to a bottom sheet.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/layout';\nimport * as ɵngcc3 from '@angular/cdk/portal';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/common';\n\nfunction MatBottomSheetContainer_ng_template_0_Template(rf, ctx) {}\n\nvar\n/** @type {?} */\nMAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n * @template D\n */\n\nvar MatBottomSheetConfig = function MatBottomSheetConfig() {\n  _classCallCheck(this, MatBottomSheetConfig);\n\n  /**\n   * Data being injected into the child component.\n   */\n  this.data = null;\n  /**\n   * Whether the bottom sheet has a backdrop.\n   */\n\n  this.hasBackdrop = true;\n  /**\n   * Whether the user can use escape or clicking outside to close the bottom sheet.\n   */\n\n  this.disableClose = false;\n  /**\n   * Aria label to assign to the bottom sheet element.\n   */\n\n  this.ariaLabel = null;\n  /**\n   * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n   */\n\n  this.closeOnNavigation = true;\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Animations used by the Material bottom sheet.\n */\n\n\nvar\n/** @type {?} */\nmatBottomSheetAnimations = {\n  /** Animation that shows and hides a bottom sheet. */\n  bottomSheetState: trigger('state', [state('void, hidden', style({\n    transform: 'translateY(100%)'\n  })), state('visible', style({\n    transform: 'translateY(0%)'\n  })), transition('visible => void, visible => hidden', animate(\"\".concat(AnimationDurations.COMPLEX, \" \").concat(AnimationCurves.ACCELERATION_CURVE))), transition('void => visible', animate(\"\".concat(AnimationDurations.EXITING, \" \").concat(AnimationCurves.DECELERATION_CURVE)))])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * \\@docs-private\n */\n\nvar MatBottomSheetContainer = /*#__PURE__*/function (_BasePortalOutlet) {\n  _inherits(MatBottomSheetContainer, _BasePortalOutlet);\n\n  var _super = _createSuper(MatBottomSheetContainer);\n\n  /**\n   * @param {?} _elementRef\n   * @param {?} _changeDetectorRef\n   * @param {?} _focusTrapFactory\n   * @param {?} breakpointObserver\n   * @param {?} document\n   * @param {?} bottomSheetConfig\n   */\n  function MatBottomSheetContainer(_elementRef, _changeDetectorRef, _focusTrapFactory, breakpointObserver, document, bottomSheetConfig) {\n    var _this;\n\n    _classCallCheck(this, MatBottomSheetContainer);\n\n    _this = _super.call(this);\n    _this._elementRef = _elementRef;\n    _this._changeDetectorRef = _changeDetectorRef;\n    _this._focusTrapFactory = _focusTrapFactory;\n    _this.bottomSheetConfig = bottomSheetConfig;\n    /**\n     * The state of the bottom sheet animations.\n     */\n\n    _this._animationState = 'void';\n    /**\n     * Emits whenever the state of the animation changes.\n     */\n\n    _this._animationStateChanged = new EventEmitter();\n    /**\n     * Element that was focused before the bottom sheet was opened.\n     */\n\n    _this._elementFocusedBeforeOpened = null;\n    _this._document = document;\n    _this._breakpointSubscription = breakpointObserver.observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge]).subscribe(function () {\n      _this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n\n      _this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n\n      _this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n    });\n    return _this;\n  }\n  /**\n   * Attach a component portal as content to this bottom sheet container.\n   * @template T\n   * @param {?} portal\n   * @return {?}\n   */\n\n\n  _createClass(MatBottomSheetContainer, [{\n    key: \"attachComponentPortal\",\n    value: function attachComponentPortal(portal) {\n      this._validatePortalAttached();\n\n      this._setPanelClass();\n\n      this._savePreviouslyFocusedElement();\n\n      return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a template portal as content to this bottom sheet container.\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n\n  }, {\n    key: \"attachTemplatePortal\",\n    value: function attachTemplatePortal(portal) {\n      this._validatePortalAttached();\n\n      this._setPanelClass();\n\n      this._savePreviouslyFocusedElement();\n\n      return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Begin animation of bottom sheet entrance into view.\n     * @return {?}\n     */\n\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      if (!this._destroyed) {\n        this._animationState = 'visible';\n\n        this._changeDetectorRef.detectChanges();\n      }\n    }\n    /**\n     * Begin animation of the bottom sheet exiting from view.\n     * @return {?}\n     */\n\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      if (!this._destroyed) {\n        this._animationState = 'hidden';\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._breakpointSubscription.unsubscribe();\n\n      this._destroyed = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onAnimationDone\",\n    value: function _onAnimationDone(event) {\n      if (event.toState === 'visible') {\n        this._trapFocus();\n      } else if (event.toState === 'hidden') {\n        this._restoreFocus();\n      }\n\n      this._animationStateChanged.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onAnimationStart\",\n    value: function _onAnimationStart(event) {\n      this._animationStateChanged.emit(event);\n    }\n    /**\n     * @param {?} cssClass\n     * @param {?} add\n     * @return {?}\n     */\n\n  }, {\n    key: \"_toggleClass\",\n    value: function _toggleClass(cssClass, add) {\n      var\n      /** @type {?} */\n      classList = this._elementRef.nativeElement.classList;\n      add ? classList.add(cssClass) : classList.remove(cssClass);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_validatePortalAttached\",\n    value: function _validatePortalAttached() {\n      if (this._portalOutlet.hasAttached()) {\n        throw Error('Attempting to attach bottom sheet content after content is already attached');\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setPanelClass\",\n    value: function _setPanelClass() {\n      var\n      /** @type {?} */\n      element = this._elementRef.nativeElement;\n      var\n      /** @type {?} */\n      panelClass = this.bottomSheetConfig.panelClass;\n\n      if (Array.isArray(panelClass)) {\n        // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n        panelClass.forEach(function (cssClass) {\n          return element.classList.add(cssClass);\n        });\n      } else if (panelClass) {\n        element.classList.add(panelClass);\n      }\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_trapFocus\",\n    value: function _trapFocus() {\n      if (!this._focusTrap) {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      }\n\n      this._focusTrap.focusInitialElementWhenReady();\n    }\n    /**\n     * Restores focus to the element that was focused before the bottom sheet opened.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_restoreFocus\",\n    value: function _restoreFocus() {\n      var\n      /** @type {?} */\n      toFocus = this._elementFocusedBeforeOpened; // We need the extra check, because IE can set the `activeElement` to null in some cases.\n\n      if (toFocus && typeof toFocus.focus === 'function') {\n        toFocus.focus();\n      }\n\n      if (this._focusTrap) {\n        this._focusTrap.destroy();\n      }\n    }\n    /**\n     * Saves a reference to the element that was focused before the bottom sheet was opened.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_savePreviouslyFocusedElement\",\n    value: function _savePreviouslyFocusedElement() {\n      var _this2 = this;\n\n      this._elementFocusedBeforeOpened =\n      /** @type {?} */\n      this._document.activeElement; // The `focus` method isn't available during server-side rendering.\n\n      if (this._elementRef.nativeElement.focus) {\n        Promise.resolve().then(function () {\n          return _this2._elementRef.nativeElement.focus();\n        });\n      }\n    }\n  }]);\n\n  return MatBottomSheetContainer;\n}(BasePortalOutlet);\n\nMatBottomSheetContainer.ɵfac = function MatBottomSheetContainer_Factory(t) {\n  return new (t || MatBottomSheetContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BreakpointObserver), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatBottomSheetConfig));\n};\n\nMatBottomSheetContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatBottomSheetContainer,\n  selectors: [[\"mat-bottom-sheet-container\"]],\n  viewQuery: function MatBottomSheetContainer_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    }\n  },\n  hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-modal\", \"true\", 1, \"mat-bottom-sheet-container\"],\n  hostVars: 2,\n  hostBindings: function MatBottomSheetContainer_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵsyntheticHostListener(\"@state.start\", function MatBottomSheetContainer_animation_state_start_HostBindingHandler($event) {\n        return ctx._onAnimationStart($event);\n      })(\"@state.done\", function MatBottomSheetContainer_animation_state_done_HostBindingHandler($event) {\n        return ctx._onAnimationDone($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.bottomSheetConfig == null ? null : ctx.bottomSheetConfig.ariaLabel);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkPortalOutlet\", \"\"]],\n  template: function MatBottomSheetContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, MatBottomSheetContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    }\n  },\n  directives: [ɵngcc3.CdkPortalOutlet],\n  styles: [\".mat-bottom-sheet-container{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12);padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}@media screen and (-ms-high-contrast:active){.mat-bottom-sheet-container{outline:1px solid}}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matBottomSheetAnimations.bottomSheetState]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatBottomSheetContainer.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: FocusTrapFactory\n  }, {\n    type: BreakpointObserver\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: MatBottomSheetConfig\n  }];\n};\n\nMatBottomSheetContainer.propDecorators = {\n  \"_portalOutlet\": [{\n    type: ViewChild,\n    args: [CdkPortalOutlet]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatBottomSheetContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-bottom-sheet-container',\n      template: \"<ng-template cdkPortalOutlet></ng-template>\",\n      styles: [\".mat-bottom-sheet-container{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12);padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}@media screen and (-ms-high-contrast:active){.mat-bottom-sheet-container{outline:1px solid}}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\"],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [matBottomSheetAnimations.bottomSheetState],\n      host: {\n        'class': 'mat-bottom-sheet-container',\n        'tabindex': '-1',\n        'role': 'dialog',\n        'aria-modal': 'true',\n        '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n        '[@state]': '_animationState',\n        '(@state.start)': '_onAnimationStart($event)',\n        '(@state.done)': '_onAnimationDone($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.FocusTrapFactory\n    }, {\n      type: ɵngcc2.BreakpointObserver\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: MatBottomSheetConfig\n    }];\n  }, {\n    _portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar MatBottomSheetModule = function MatBottomSheetModule() {\n  _classCallCheck(this, MatBottomSheetModule);\n};\n\nMatBottomSheetModule.ɵfac = function MatBottomSheetModule_Factory(t) {\n  return new (t || MatBottomSheetModule)();\n};\n\nMatBottomSheetModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatBottomSheetModule\n});\nMatBottomSheetModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule, OverlayModule, MatCommonModule, PortalModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatBottomSheetModule, {\n    declarations: function declarations() {\n      return [MatBottomSheetContainer];\n    },\n    imports: function imports() {\n      return [CommonModule, OverlayModule, MatCommonModule, PortalModule];\n    },\n    exports: function exports() {\n      return [MatBottomSheetContainer, MatCommonModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatBottomSheetModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, MatCommonModule, PortalModule],\n      exports: [MatBottomSheetContainer, MatCommonModule],\n      declarations: [MatBottomSheetContainer],\n      entryComponents: [MatBottomSheetContainer]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n * @template T, R\n */\n\n\nvar MatBottomSheetRef = /*#__PURE__*/function () {\n  /**\n   * @param {?} containerInstance\n   * @param {?} _overlayRef\n   * @param {?=} location\n   */\n  function MatBottomSheetRef(containerInstance, _overlayRef, location) {\n    var _this3 = this;\n\n    _classCallCheck(this, MatBottomSheetRef);\n\n    this._overlayRef = _overlayRef;\n    /**\n     * Subject for notifying the user that the bottom sheet has been dismissed.\n     */\n\n    this._afterDismissed = new Subject();\n    /**\n     * Subject for notifying the user that the bottom sheet has opened and appeared.\n     */\n\n    this._afterOpened = new Subject();\n    /**\n     * Subscription to changes in the user's location.\n     */\n\n    this._locationChanges = Subscription.EMPTY;\n    this.containerInstance = containerInstance; // Emit when opening animation completes\n\n    containerInstance._animationStateChanged.pipe(filter(function (event) {\n      return event.phaseName === 'done' && event.toState === 'visible';\n    }), take(1)).subscribe(function () {\n      _this3._afterOpened.next();\n\n      _this3._afterOpened.complete();\n    }); // Dispose overlay when closing animation is complete\n\n\n    containerInstance._animationStateChanged.pipe(filter(function (event) {\n      return event.phaseName === 'done' && event.toState === 'hidden';\n    }), take(1)).subscribe(function () {\n      _this3._locationChanges.unsubscribe();\n\n      _this3._overlayRef.dispose();\n\n      _this3._afterDismissed.next(_this3._result);\n\n      _this3._afterDismissed.complete();\n    });\n\n    if (!containerInstance.bottomSheetConfig.disableClose) {\n      merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter(function (event) {\n        return event.keyCode === ESCAPE;\n      }))).subscribe(function () {\n        return _this3.dismiss();\n      });\n    }\n\n    if (location) {\n      this._locationChanges = location.subscribe(function () {\n        if (containerInstance.bottomSheetConfig.closeOnNavigation) {\n          _this3.dismiss();\n        }\n      });\n    }\n  }\n  /**\n   * Dismisses the bottom sheet.\n   * @param {?=} result Data to be passed back to the bottom sheet opener.\n   * @return {?}\n   */\n\n\n  _createClass(MatBottomSheetRef, [{\n    key: \"dismiss\",\n    value: function dismiss(result) {\n      var _this4 = this;\n\n      if (!this._afterDismissed.closed) {\n        // Transition the backdrop in parallel to the bottom sheet.\n        this.containerInstance._animationStateChanged.pipe(filter(function (event) {\n          return event.phaseName === 'start';\n        }), take(1)).subscribe(function () {\n          return _this4._overlayRef.detachBackdrop();\n        });\n\n        this._result = result;\n        this.containerInstance.exit();\n      }\n    }\n    /**\n     * Gets an observable that is notified when the bottom sheet is finished closing.\n     * @return {?}\n     */\n\n  }, {\n    key: \"afterDismissed\",\n    value: function afterDismissed() {\n      return this._afterDismissed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the bottom sheet has opened and appeared.\n     * @return {?}\n     */\n\n  }, {\n    key: \"afterOpened\",\n    value: function afterOpened() {\n      return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n\n  }, {\n    key: \"backdropClick\",\n    value: function backdropClick() {\n      return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n\n  }, {\n    key: \"keydownEvents\",\n    value: function keydownEvents() {\n      return this._overlayRef.keydownEvents();\n    }\n  }]);\n\n  return MatBottomSheetRef;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Service to trigger Material Design bottom sheets.\n */\n\n\nvar MatBottomSheet = /*#__PURE__*/function () {\n  /**\n   * @param {?} _overlay\n   * @param {?} _injector\n   * @param {?} _parentBottomSheet\n   * @param {?=} _location\n   */\n  function MatBottomSheet(_overlay, _injector, _parentBottomSheet, _location) {\n    _classCallCheck(this, MatBottomSheet);\n\n    this._overlay = _overlay;\n    this._injector = _injector;\n    this._parentBottomSheet = _parentBottomSheet;\n    this._location = _location;\n    this._bottomSheetRefAtThisLevel = null;\n  }\n  /**\n   * Reference to the currently opened bottom sheet.\n   * @return {?}\n   */\n\n\n  _createClass(MatBottomSheet, [{\n    key: \"_openedBottomSheetRef\",\n    get: function get() {\n      var\n      /** @type {?} */\n      parent = this._parentBottomSheet;\n      return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      if (this._parentBottomSheet) {\n        this._parentBottomSheet._openedBottomSheetRef = value;\n      } else {\n        this._bottomSheetRefAtThisLevel = value;\n      }\n    }\n    /**\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef\n     * @param {?=} config\n     * @return {?}\n     */\n\n  }, {\n    key: \"open\",\n    value: function open(componentOrTemplateRef, config) {\n      var _this5 = this;\n\n      var\n      /** @type {?} */\n      _config = _applyConfigDefaults(config);\n\n      var\n      /** @type {?} */\n      overlayRef = this._createOverlay(_config);\n\n      var\n      /** @type {?} */\n      container = this._attachContainer(overlayRef, _config);\n\n      var\n      /** @type {?} */\n      ref = new MatBottomSheetRef(container, overlayRef, this._location);\n\n      if (componentOrTemplateRef instanceof TemplateRef) {\n        container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef,\n        /** @type {?} */\n        null,\n        /** @type {?} */\n        {\n          $implicit: _config.data,\n          bottomSheetRef: ref\n        }));\n      } else {\n        var\n        /** @type {?} */\n        portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n        var\n        /** @type {?} */\n        contentRef = container.attachComponentPortal(portal);\n        ref.instance = contentRef.instance;\n      } // When the bottom sheet is dismissed, clear the reference to it.\n\n\n      ref.afterDismissed().subscribe(function () {\n        // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n        if (_this5._openedBottomSheetRef == ref) {\n          _this5._openedBottomSheetRef = null;\n        }\n      });\n\n      if (this._openedBottomSheetRef) {\n        // If a bottom sheet is already in view, dismiss it and enter the\n        // new bottom sheet after exit animation is complete.\n        this._openedBottomSheetRef.afterDismissed().subscribe(function () {\n          return ref.containerInstance.enter();\n        });\n\n        this._openedBottomSheetRef.dismiss();\n      } else {\n        // If no bottom sheet is in view, enter the new bottom sheet.\n        ref.containerInstance.enter();\n      }\n\n      this._openedBottomSheetRef = ref;\n      return ref;\n    }\n    /**\n     * Dismisses the currently-visible bottom sheet.\n     * @return {?}\n     */\n\n  }, {\n    key: \"dismiss\",\n    value: function dismiss() {\n      if (this._openedBottomSheetRef) {\n        this._openedBottomSheetRef.dismiss();\n      }\n    }\n    /**\n     * Attaches the bottom sheet container component to the overlay.\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n\n  }, {\n    key: \"_attachContainer\",\n    value: function _attachContainer(overlayRef, config) {\n      var\n      /** @type {?} */\n      userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n      var\n      /** @type {?} */\n      injector = new PortalInjector(userInjector || this._injector, new WeakMap([[MatBottomSheetConfig, config]]));\n      var\n      /** @type {?} */\n      containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n      var\n      /** @type {?} */\n      containerRef = overlayRef.attach(containerPortal);\n      return containerRef.instance;\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param {?} config The user-specified bottom sheet config.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createOverlay\",\n    value: function _createOverlay(config) {\n      var\n      /** @type {?} */\n      overlayConfig = new OverlayConfig({\n        direction: config.direction,\n        hasBackdrop: config.hasBackdrop,\n        maxWidth: '100%',\n        scrollStrategy: this._overlay.scrollStrategies.block(),\n        positionStrategy: this._overlay.position().global().centerHorizontally().bottom('0')\n      });\n\n      if (config.backdropClass) {\n        overlayConfig.backdropClass = config.backdropClass;\n      }\n\n      return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a bottom sheet component.\n     * @template T\n     * @param {?} config Config that was used to create the bottom sheet.\n     * @param {?} bottomSheetRef Reference to the bottom sheet.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createInjector\",\n    value: function _createInjector(config, bottomSheetRef) {\n      var\n      /** @type {?} */\n      userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n      var\n      /** @type {?} */\n      injectionTokens = new WeakMap([[MatBottomSheetRef, bottomSheetRef], [MAT_BOTTOM_SHEET_DATA, config.data]]);\n\n      if (config.direction && (!userInjector || !userInjector.get(Directionality, null))) {\n        injectionTokens.set(Directionality, {\n          value: config.direction,\n          change: of()\n        });\n      }\n\n      return new PortalInjector(userInjector || this._injector, injectionTokens);\n    }\n  }]);\n\n  return MatBottomSheet;\n}();\n\nMatBottomSheet.ɵfac = function MatBottomSheet_Factory(t) {\n  return new (t || MatBottomSheet)(ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(MatBottomSheet, 12), ɵngcc0.ɵɵinject(ɵngcc5.Location, 8));\n};\n\nMatBottomSheet.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: MatBottomSheet,\n  factory: MatBottomSheet.ɵfac,\n  providedIn: MatBottomSheetModule\n});\n/** @nocollapse */\n\nMatBottomSheet.ctorParameters = function () {\n  return [{\n    type: Overlay\n  }, {\n    type: Injector\n  }, {\n    type: MatBottomSheet,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: Location,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/** @nocollapse */\n\n\nMatBottomSheet.ngInjectableDef = defineInjectable({\n  factory: function MatBottomSheet_Factory() {\n    return new MatBottomSheet(inject(Overlay), inject(INJECTOR), inject(MatBottomSheet, 12), inject(Location, 8));\n  },\n  token: MatBottomSheet,\n  providedIn: MatBottomSheetModule\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatBottomSheet, [{\n    type: Injectable,\n    args: [{\n      providedIn: MatBottomSheetModule\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Overlay\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: MatBottomSheet,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: ɵngcc5.Location,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Applies default options to the bottom sheet config.\n * @param {?=} config The configuration to which the defaults will be applied.\n * @return {?} The new configuration object with defaults applied.\n */\n\n\nfunction _applyConfigDefaults(config) {\n  return Object.assign({}, new MatBottomSheetConfig(), config);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport { MatBottomSheetModule, MatBottomSheet, MAT_BOTTOM_SHEET_DATA, MatBottomSheetConfig, MatBottomSheetContainer, matBottomSheetAnimations, MatBottomSheetRef }; //# sourceMappingURL=bottom-sheet.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/@angular/material/__ivy_ngcc__/esm2015/bottom-sheet.js"],"names":["InjectionToken","Component","ViewChild","ElementRef","ChangeDetectionStrategy","ViewEncapsulation","ChangeDetectorRef","EventEmitter","Inject","Optional","NgModule","Injectable","Injector","SkipSelf","TemplateRef","defineInjectable","inject","INJECTOR","animate","state","style","transition","trigger","AnimationCurves","AnimationDurations","MatCommonModule","BasePortalOutlet","CdkPortalOutlet","PortalModule","ComponentPortal","PortalInjector","TemplatePortal","BreakpointObserver","Breakpoints","DOCUMENT","CommonModule","Location","FocusTrapFactory","OverlayModule","Overlay","OverlayConfig","ESCAPE","merge","Subject","Subscription","of","filter","take","Directionality","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","MatBottomSheetContainer_ng_template_0_Template","rf","ctx","MAT_BOTTOM_SHEET_DATA","MatBottomSheetConfig","data","hasBackdrop","disableClose","ariaLabel","closeOnNavigation","matBottomSheetAnimations","bottomSheetState","transform","COMPLEX","ACCELERATION_CURVE","EXITING","DECELERATION_CURVE","MatBottomSheetContainer","_elementRef","_changeDetectorRef","_focusTrapFactory","breakpointObserver","document","bottomSheetConfig","_animationState","_animationStateChanged","_elementFocusedBeforeOpened","_document","_breakpointSubscription","observe","Medium","Large","XLarge","subscribe","_toggleClass","isMatched","portal","_validatePortalAttached","_setPanelClass","_savePreviouslyFocusedElement","_portalOutlet","attachComponentPortal","attachTemplatePortal","_destroyed","detectChanges","markForCheck","unsubscribe","event","toState","_trapFocus","_restoreFocus","emit","cssClass","add","classList","nativeElement","remove","hasAttached","Error","element","panelClass","Array","isArray","forEach","_focusTrap","create","focusInitialElementWhenReady","toFocus","focus","destroy","activeElement","Promise","resolve","then","ɵfac","MatBottomSheetContainer_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatBottomSheetContainer_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatBottomSheetContainer_HostBindings","ɵɵsyntheticHostListener","MatBottomSheetContainer_animation_state_start_HostBindingHandler","$event","_onAnimationStart","MatBottomSheetContainer_animation_state_done_HostBindingHandler","_onAnimationDone","ɵɵattribute","ɵɵsyntheticHostProperty","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatBottomSheetContainer_Template","ɵɵtemplate","directives","styles","encapsulation","animation","changeDetection","ctorParameters","undefined","decorators","args","propDecorators","ngDevMode","ɵsetClassMetadata","selector","OnPush","None","animations","host","MatBottomSheetModule","MatBottomSheetModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","entryComponents","MatBottomSheetRef","containerInstance","_overlayRef","location","_afterDismissed","_afterOpened","_locationChanges","EMPTY","pipe","phaseName","next","complete","dispose","_result","backdropClick","keydownEvents","keyCode","dismiss","result","closed","detachBackdrop","exit","asObservable","MatBottomSheet","_overlay","_injector","_parentBottomSheet","_location","_bottomSheetRefAtThisLevel","parent","_openedBottomSheetRef","value","componentOrTemplateRef","config","_config","_applyConfigDefaults","overlayRef","_createOverlay","container","_attachContainer","ref","$implicit","bottomSheetRef","_createInjector","contentRef","instance","afterDismissed","enter","userInjector","viewContainerRef","injector","WeakMap","containerPortal","containerRef","attach","overlayConfig","direction","maxWidth","scrollStrategy","scrollStrategies","block","positionStrategy","position","global","centerHorizontally","bottom","backdropClass","injectionTokens","get","set","change","MatBottomSheet_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngInjectableDef","Object","assign"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Component, ViewChild, ElementRef, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, EventEmitter, Inject, Optional, NgModule, Injectable, Injector, SkipSelf, TemplateRef, defineInjectable, inject, INJECTOR } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves, AnimationDurations, MatCommonModule } from '@angular/material/core';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { DOCUMENT, CommonModule, Location } from '@angular/common';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { OverlayModule, Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { merge, Subject, Subscription, of } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a bottom sheet.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/layout';\nimport * as ɵngcc3 from '@angular/cdk/portal';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/common';\n\nfunction MatBottomSheetContainer_ng_template_0_Template(rf, ctx) { }\nconst /** @type {?} */ MAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n * @template D\n */\nclass MatBottomSheetConfig {\n    constructor() {\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * Whether the bottom sheet has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Whether the user can use escape or clicking outside to close the bottom sheet.\n         */\n        this.disableClose = false;\n        /**\n         * Aria label to assign to the bottom sheet element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n         */\n        this.closeOnNavigation = true;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Animations used by the Material bottom sheet.\n */\nconst /** @type {?} */ matBottomSheetAnimations = {\n    /** Animation that shows and hides a bottom sheet. */\n    bottomSheetState: trigger('state', [\n        state('void, hidden', style({ transform: 'translateY(100%)' })),\n        state('visible', style({ transform: 'translateY(0%)' })),\n        transition('visible => void, visible => hidden', animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`)),\n        transition('void => visible', animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * \\@docs-private\n */\nclass MatBottomSheetContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusTrapFactory\n     * @param {?} breakpointObserver\n     * @param {?} document\n     * @param {?} bottomSheetConfig\n     */\n    constructor(_elementRef, _changeDetectorRef, _focusTrapFactory, breakpointObserver, document, bottomSheetConfig) {\n        super();\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this.bottomSheetConfig = bottomSheetConfig;\n        /**\n         * The state of the bottom sheet animations.\n         */\n        this._animationState = 'void';\n        /**\n         * Emits whenever the state of the animation changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        /**\n         * Element that was focused before the bottom sheet was opened.\n         */\n        this._elementFocusedBeforeOpened = null;\n        this._document = document;\n        this._breakpointSubscription = breakpointObserver\n            .observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n            .subscribe(() => {\n            this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n            this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n            this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n        });\n    }\n    /**\n     * Attach a component portal as content to this bottom sheet container.\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a template portal as content to this bottom sheet container.\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Begin animation of bottom sheet entrance into view.\n     * @return {?}\n     */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Begin animation of the bottom sheet exiting from view.\n     * @return {?}\n     */\n    exit() {\n        if (!this._destroyed) {\n            this._animationState = 'hidden';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n        this._destroyed = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'visible') {\n            this._trapFocus();\n        }\n        else if (event.toState === 'hidden') {\n            this._restoreFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * @param {?} cssClass\n     * @param {?} add\n     * @return {?}\n     */\n    _toggleClass(cssClass, add) {\n        const /** @type {?} */ classList = this._elementRef.nativeElement.classList;\n        add ? classList.add(cssClass) : classList.remove(cssClass);\n    }\n    /**\n     * @return {?}\n     */\n    _validatePortalAttached() {\n        if (this._portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach bottom sheet content after content is already attached');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _setPanelClass() {\n        const /** @type {?} */ element = this._elementRef.nativeElement;\n        const /** @type {?} */ panelClass = this.bottomSheetConfig.panelClass;\n        if (Array.isArray(panelClass)) {\n            // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n            panelClass.forEach(cssClass => element.classList.add(cssClass));\n        }\n        else if (panelClass) {\n            element.classList.add(panelClass);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @return {?}\n     */\n    _trapFocus() {\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        }\n        this._focusTrap.focusInitialElementWhenReady();\n    }\n    /**\n     * Restores focus to the element that was focused before the bottom sheet opened.\n     * @return {?}\n     */\n    _restoreFocus() {\n        const /** @type {?} */ toFocus = this._elementFocusedBeforeOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (toFocus && typeof toFocus.focus === 'function') {\n            toFocus.focus();\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Saves a reference to the element that was focused before the bottom sheet was opened.\n     * @return {?}\n     */\n    _savePreviouslyFocusedElement() {\n        this._elementFocusedBeforeOpened = /** @type {?} */ (this._document.activeElement);\n        // The `focus` method isn't available during server-side rendering.\n        if (this._elementRef.nativeElement.focus) {\n            Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n        }\n    }\n}\nMatBottomSheetContainer.ɵfac = function MatBottomSheetContainer_Factory(t) { return new (t || MatBottomSheetContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BreakpointObserver), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatBottomSheetConfig)); };\nMatBottomSheetContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatBottomSheetContainer, selectors: [[\"mat-bottom-sheet-container\"]], viewQuery: function MatBottomSheetContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-modal\", \"true\", 1, \"mat-bottom-sheet-container\"], hostVars: 2, hostBindings: function MatBottomSheetContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@state.start\", function MatBottomSheetContainer_animation_state_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@state.done\", function MatBottomSheetContainer_animation_state_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.bottomSheetConfig == null ? null : ctx.bottomSheetConfig.ariaLabel);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatBottomSheetContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatBottomSheetContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc3.CdkPortalOutlet], styles: [\".mat-bottom-sheet-container{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12);padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}@media screen and (-ms-high-contrast:active){.mat-bottom-sheet-container{outline:1px solid}}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\"], encapsulation: 2, data: { animation: [matBottomSheetAnimations.bottomSheetState] }, changeDetection: 0 });\n/** @nocollapse */\nMatBottomSheetContainer.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: ChangeDetectorRef, },\n    { type: FocusTrapFactory, },\n    { type: BreakpointObserver, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] },] },\n    { type: MatBottomSheetConfig, },\n];\nMatBottomSheetContainer.propDecorators = {\n    \"_portalOutlet\": [{ type: ViewChild, args: [CdkPortalOutlet,] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatBottomSheetContainer, [{\n        type: Component,\n        args: [{ selector: 'mat-bottom-sheet-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\",\n                styles: [\".mat-bottom-sheet-container{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12);padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}@media screen and (-ms-high-contrast:active){.mat-bottom-sheet-container{outline:1px solid}}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\"],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matBottomSheetAnimations.bottomSheetState],\n                host: {\n                    'class': 'mat-bottom-sheet-container',\n                    'tabindex': '-1',\n                    'role': 'dialog',\n                    'aria-modal': 'true',\n                    '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n                    '[@state]': '_animationState',\n                    '(@state.start)': '_onAnimationStart($event)',\n                    '(@state.done)': '_onAnimationDone($event)'\n                } }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc2.BreakpointObserver }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatBottomSheetConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass MatBottomSheetModule {\n}\nMatBottomSheetModule.ɵfac = function MatBottomSheetModule_Factory(t) { return new (t || MatBottomSheetModule)(); };\nMatBottomSheetModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatBottomSheetModule });\nMatBottomSheetModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n            PortalModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatBottomSheetModule, { declarations: function () { return [MatBottomSheetContainer]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatCommonModule,\n        PortalModule]; }, exports: function () { return [MatBottomSheetContainer, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatBottomSheetModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                    PortalModule,\n                ],\n                exports: [MatBottomSheetContainer, MatCommonModule],\n                declarations: [MatBottomSheetContainer],\n                entryComponents: [MatBottomSheetContainer]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n * @template T, R\n */\nclass MatBottomSheetRef {\n    /**\n     * @param {?} containerInstance\n     * @param {?} _overlayRef\n     * @param {?=} location\n     */\n    constructor(containerInstance, _overlayRef, location) {\n        this._overlayRef = _overlayRef;\n        /**\n         * Subject for notifying the user that the bottom sheet has been dismissed.\n         */\n        this._afterDismissed = new Subject();\n        /**\n         * Subject for notifying the user that the bottom sheet has opened and appeared.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subscription to changes in the user's location.\n         */\n        this._locationChanges = Subscription.EMPTY;\n        this.containerInstance = containerInstance;\n        // Emit when opening animation completes\n        containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'visible'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'hidden'), take(1))\n            .subscribe(() => {\n            this._locationChanges.unsubscribe();\n            this._overlayRef.dispose();\n            this._afterDismissed.next(this._result);\n            this._afterDismissed.complete();\n        });\n        if (!containerInstance.bottomSheetConfig.disableClose) {\n            merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))).subscribe(() => this.dismiss());\n        }\n        if (location) {\n            this._locationChanges = location.subscribe(() => {\n                if (containerInstance.bottomSheetConfig.closeOnNavigation) {\n                    this.dismiss();\n                }\n            });\n        }\n    }\n    /**\n     * Dismisses the bottom sheet.\n     * @param {?=} result Data to be passed back to the bottom sheet opener.\n     * @return {?}\n     */\n    dismiss(result) {\n        if (!this._afterDismissed.closed) {\n            // Transition the backdrop in parallel to the bottom sheet.\n            this.containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'start'), take(1)).subscribe(() => this._overlayRef.detachBackdrop());\n            this._result = result;\n            this.containerInstance.exit();\n        }\n    }\n    /**\n     * Gets an observable that is notified when the bottom sheet is finished closing.\n     * @return {?}\n     */\n    afterDismissed() {\n        return this._afterDismissed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the bottom sheet has opened and appeared.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Service to trigger Material Design bottom sheets.\n */\nclass MatBottomSheet {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _parentBottomSheet\n     * @param {?=} _location\n     */\n    constructor(_overlay, _injector, _parentBottomSheet, _location) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._parentBottomSheet = _parentBottomSheet;\n        this._location = _location;\n        this._bottomSheetRefAtThisLevel = null;\n    }\n    /**\n     * Reference to the currently opened bottom sheet.\n     * @return {?}\n     */\n    get _openedBottomSheetRef() {\n        const /** @type {?} */ parent = this._parentBottomSheet;\n        return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _openedBottomSheetRef(value) {\n        if (this._parentBottomSheet) {\n            this._parentBottomSheet._openedBottomSheetRef = value;\n        }\n        else {\n            this._bottomSheetRefAtThisLevel = value;\n        }\n    }\n    /**\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef\n     * @param {?=} config\n     * @return {?}\n     */\n    open(componentOrTemplateRef, config) {\n        const /** @type {?} */ _config = _applyConfigDefaults(config);\n        const /** @type {?} */ overlayRef = this._createOverlay(_config);\n        const /** @type {?} */ container = this._attachContainer(overlayRef, _config);\n        const /** @type {?} */ ref = new MatBottomSheetRef(container, overlayRef, this._location);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, /** @type {?} */ ((null)), /** @type {?} */ ({\n                $implicit: _config.data,\n                bottomSheetRef: ref\n            })));\n        }\n        else {\n            const /** @type {?} */ portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n            const /** @type {?} */ contentRef = container.attachComponentPortal(portal);\n            ref.instance = contentRef.instance;\n        }\n        // When the bottom sheet is dismissed, clear the reference to it.\n        ref.afterDismissed().subscribe(() => {\n            // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n            if (this._openedBottomSheetRef == ref) {\n                this._openedBottomSheetRef = null;\n            }\n        });\n        if (this._openedBottomSheetRef) {\n            // If a bottom sheet is already in view, dismiss it and enter the\n            // new bottom sheet after exit animation is complete.\n            this._openedBottomSheetRef.afterDismissed().subscribe(() => ref.containerInstance.enter());\n            this._openedBottomSheetRef.dismiss();\n        }\n        else {\n            // If no bottom sheet is in view, enter the new bottom sheet.\n            ref.containerInstance.enter();\n        }\n        this._openedBottomSheetRef = ref;\n        return ref;\n    }\n    /**\n     * Dismisses the currently-visible bottom sheet.\n     * @return {?}\n     */\n    dismiss() {\n        if (this._openedBottomSheetRef) {\n            this._openedBottomSheetRef.dismiss();\n        }\n    }\n    /**\n     * Attaches the bottom sheet container component to the overlay.\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n    _attachContainer(overlayRef, config) {\n        const /** @type {?} */ userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const /** @type {?} */ injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatBottomSheetConfig, config]\n        ]));\n        const /** @type {?} */ containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n        const /** @type {?} */ containerRef = overlayRef.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param {?} config The user-specified bottom sheet config.\n     * @return {?}\n     */\n    _createOverlay(config) {\n        const /** @type {?} */ overlayConfig = new OverlayConfig({\n            direction: config.direction,\n            hasBackdrop: config.hasBackdrop,\n            maxWidth: '100%',\n            scrollStrategy: this._overlay.scrollStrategies.block(),\n            positionStrategy: this._overlay.position()\n                .global()\n                .centerHorizontally()\n                .bottom('0')\n        });\n        if (config.backdropClass) {\n            overlayConfig.backdropClass = config.backdropClass;\n        }\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a bottom sheet component.\n     * @template T\n     * @param {?} config Config that was used to create the bottom sheet.\n     * @param {?} bottomSheetRef Reference to the bottom sheet.\n     * @return {?}\n     */\n    _createInjector(config, bottomSheetRef) {\n        const /** @type {?} */ userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const /** @type {?} */ injectionTokens = new WeakMap([\n            [MatBottomSheetRef, bottomSheetRef],\n            [MAT_BOTTOM_SHEET_DATA, config.data]\n        ]);\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            injectionTokens.set(Directionality, {\n                value: config.direction,\n                change: of()\n            });\n        }\n        return new PortalInjector(userInjector || this._injector, injectionTokens);\n    }\n}\nMatBottomSheet.ɵfac = function MatBottomSheet_Factory(t) { return new (t || MatBottomSheet)(ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(MatBottomSheet, 12), ɵngcc0.ɵɵinject(ɵngcc5.Location, 8)); };\nMatBottomSheet.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatBottomSheet, factory: MatBottomSheet.ɵfac, providedIn: MatBottomSheetModule });\n/** @nocollapse */\nMatBottomSheet.ctorParameters = () => [\n    { type: Overlay, },\n    { type: Injector, },\n    { type: MatBottomSheet, decorators: [{ type: Optional }, { type: SkipSelf },] },\n    { type: Location, decorators: [{ type: Optional },] },\n];\n/** @nocollapse */ MatBottomSheet.ngInjectableDef = defineInjectable({ factory: function MatBottomSheet_Factory() { return new MatBottomSheet(inject(Overlay), inject(INJECTOR), inject(MatBottomSheet, 12), inject(Location, 8)); }, token: MatBottomSheet, providedIn: MatBottomSheetModule });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatBottomSheet, [{\n        type: Injectable,\n        args: [{ providedIn: MatBottomSheetModule }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.Injector }, { type: MatBottomSheet, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc5.Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Applies default options to the bottom sheet config.\n * @param {?=} config The configuration to which the defaults will be applied.\n * @return {?} The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(config) {\n    return Object.assign({}, new MatBottomSheetConfig(), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MatBottomSheetModule, MatBottomSheet, MAT_BOTTOM_SHEET_DATA, MatBottomSheetConfig, MatBottomSheetContainer, matBottomSheetAnimations, MatBottomSheetRef };\n\n//# sourceMappingURL=bottom-sheet.js.map"]},"metadata":{},"sourceType":"module"}