{"ast":null,"code":"/**\n * @module ol/renderer/Map\n */\nimport { getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE, UNDEFINED } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray } from '../transform.js';\n\nvar MapRenderer = function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n\n    this.map_ = map;\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/renderer/Layer>}\n     */\n\n    this.layerRenderers_ = {};\n    /**\n     * @private\n     * @type {Object.<string, module:ol/events~EventsKey>}\n     */\n\n    this.layerRendererListeners_ = {};\n    /**\n     * @private\n     * @type {Array.<module:ol/renderer/Layer>}\n     */\n\n    this.layerRendererConstructors_ = [];\n  }\n\n  if (Disposable) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create(Disposable && Disposable.prototype);\n  MapRenderer.prototype.constructor = MapRenderer;\n  /**\n   * Register layer renderer constructors.\n   * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n   */\n\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers(constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n  /**\n   * Get the registered layer renderer constructors.\n   * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n   */\n\n\n  MapRenderer.prototype.getLayerRendererConstructors = function getLayerRendererConstructors() {\n    return this.layerRendererConstructors_;\n  };\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @protected\n   */\n\n\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D(frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n    composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n    invertTransform(transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n  /**\n   * Removes all layer renderers.\n   */\n\n\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers() {\n    var this$1 = this;\n\n    for (var key in this$1.layerRenderers_) {\n      this$1.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n\n\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @param {module:ol/layer/Layer} layer Layer.\n     * @return {?} Callback result.\n     */\n\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var key = getUid(feature).toString();\n      var managed = frameState.layerStates[getUid(layer)].managed;\n\n      if (!(key in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n    var translatedCoordinate = coordinate;\n\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n\n        if (layer.getSource()) {\n          result = layerRenderer.forEachFeatureAtCoordinate(layer.getSource().getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n        }\n\n        if (result) {\n          return result;\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n\n\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {};\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n\n\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n    return hasFeature !== undefined;\n  };\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n\n\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer(layer) {\n    var this$1 = this;\n    var layerKey = getUid(layer).toString();\n\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this$1.layerRendererConstructors_[i];\n\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this$1, layer);\n          break;\n        }\n      }\n\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n\n      return renderer;\n    }\n  };\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n\n\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey(layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n  /**\n   * @protected\n   * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n   */\n\n\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers() {\n    return this.layerRenderers_;\n  };\n  /**\n   * @return {module:ol/PluggableMap} Map.\n   */\n\n\n  MapRenderer.prototype.getMap = function getMap() {\n    return this.map_;\n  };\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n\n\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_() {\n    this.map_.render();\n  };\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   * @private\n   */\n\n\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_(layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n    return layerRenderer;\n  };\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n\n\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_(map, frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this$1.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n\n\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache(frameState) {\n    frameState.postRenderFunctions.push(\n    /** @type {module:ol/PluggableMap~PostRenderFunction} */\n    expireIconCache);\n  };\n  /**\n   * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n\n\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers(frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */\n        this$1.removeUnusedLayerRenderers_.bind(this$1));\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable);\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\n\n\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\n\n\nMapRenderer.prototype.renderFrame = UNDEFINED;\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\n\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer; //# sourceMappingURL=Map.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/renderer/Map.js"],"names":["getUid","Disposable","listen","unlistenByKey","EventType","getWidth","TRUE","UNDEFINED","visibleAtResolution","shared","iconImageCache","compose","composeTransform","invert","invertTransform","setFromArray","transformSetFromArray","MapRenderer","map","call","map_","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","__proto__","prototype","Object","create","constructor","registerLayerRenderers","constructors","push","apply","getLayerRendererConstructors","calculateMatrices2D","frameState","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","size","resolution","rotation","center","removeLayerRenderers","this$1","key","removeLayerRendererByKey_","dispose","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","thisArg","layerFilter","thisArg2","result","viewResolution","feature","layer","toString","managed","layerStates","skippedFeatureUids","projection","translatedCoordinate","canWrapX","projectionExtent","getExtent","worldWidth","x","worldsAway","Math","ceil","layerStatesArray","numLayers","length","i","layerState","layerRenderer","getLayerRenderer","getSource","getWrapX","undefined","forEachLayerAtPixel","pixel","hasFeatureAtCoordinate","hasFeature","layerKey","renderer","ii","candidate","CHANGE","handleLayerRendererChange_","Error","getType","getLayerRendererByKey","getLayerRenderers","getMap","render","removeUnusedLayerRenderers_","scheduleExpireIconCache","postRenderFunctions","expireIconCache","scheduleRemoveUnusedLayerRenderers","bind","expire","renderFrame","sortByZIndex","state1","state2","zIndex"],"mappings":"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","sourcesContent":["/**\n * @module ol/renderer/Map\n */\nimport {getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\nvar MapRenderer = (function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/renderer/Layer>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/events~EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array.<module:ol/renderer/Layer>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * Get the registered layer renderer constructors.\n   * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n   */\n  MapRenderer.prototype.getLayerRendererConstructors = function getLayerRendererConstructors () {\n    return this.layerRendererConstructors_;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    var this$1 = this;\n\n    for (var key in this$1.layerRenderers_) {\n      this$1.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @param {module:ol/layer/Layer} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var key = getUid(feature).toString();\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(key in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        if (layer.getSource()) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {};\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var this$1 = this;\n\n    var layerKey = getUid(layer).toString();\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this$1.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this$1, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {module:ol/PluggableMap} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this$1.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this$1.removeUnusedLayerRenderers_.bind(this$1))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map"]},"metadata":{},"sourceType":"module"}