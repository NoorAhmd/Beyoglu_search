{"ast":null,"code":"import _inherits from \"/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createClass from \"/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, ElementRef, NgZone, InjectionToken, ViewContainerRef, Directive, ContentChild, defineInjectable } from '@angular/core';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { take, filter } from 'rxjs/operators';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { animate, state, style, transition, trigger, group, query, animateChild } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { MatButtonModule } from '@angular/material/button';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\nvar _c0 = [\"mat-calendar-body\", \"\"];\n\nfunction MatCalendarBody_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", 50 * ctx_r0.cellAspectRatio / ctx_r0.numCols, \"%\")(\"padding-bottom\", 50 * ctx_r0.cellAspectRatio / ctx_r0.numCols, \"%\");\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\n\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", 50 * ctx_r4.cellAspectRatio / ctx_r4.numCols, \"%\")(\"padding-bottom\", 50 * ctx_r4.cellAspectRatio / ctx_r4.numCols, \"%\");\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\");\n  }\n}\n\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var item_r6 = ctx.$implicit;\n      var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r8._cellClicked(item_r6);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r6 = ctx.$implicit;\n    var colIndex_r7 = ctx.index;\n    var rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", 100 / ctx_r5.numCols, \"%\")(\"padding-top\", 50 * ctx_r5.cellAspectRatio / ctx_r5.numCols, \"%\")(\"padding-bottom\", 50 * ctx_r5.cellAspectRatio / ctx_r5.numCols, \"%\");\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7));\n    ɵngcc0.ɵɵproperty(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5.selectedValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5.selectedValue === item_r6.value)(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r6.displayValue);\n  }\n}\n\nfunction MatCalendarBody_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 19, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var row_r2 = ctx.$implicit;\n    var rowIndex_r3 = ctx.index;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n  }\n}\n\nfunction MatMonthView_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n  }\n}\n\nfunction MatCalendar_ng_template_0_Template(rf, ctx) {}\n\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.activeDate = $event;\n    })(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6._dateSelected($event);\n    })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7._userSelected();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate);\n  }\n}\n\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.activeDate = $event;\n    })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10._monthSelectedInYearView($event);\n    })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11._goToDateInView($event, \"month\");\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate);\n  }\n}\n\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.activeDate = $event;\n    })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14._yearSelectedInMultiYearView($event);\n    })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15._goToDateInView($event, \"year\");\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate);\n  }\n}\n\nfunction MatDatepickerToggle__svg_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 2);\n    ɵngcc0.ɵɵelement(1, \"path\", 3);\n    ɵngcc0.ɵɵelement(2, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c1 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nvar _c2 = [\"[matDatepickerToggleIcon]\"];\n\nfunction createMissingDateImplError(provider) {\n  return Error(\"MatDatepicker: No provider found for \".concat(provider, \". You must import one of the following \") + \"modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a \" + \"custom implementation.\");\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Datepicker data that requires internationalization.\n */\n\n\nvar MatDatepickerIntl = function MatDatepickerIntl() {\n  _classCallCheck(this, MatDatepickerIntl);\n\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  this.changes = new Subject();\n  /**\n   * A label for the calendar popup (used by screen readers).\n   */\n\n  this.calendarLabel = 'Calendar';\n  /**\n   * A label for the button used to open the calendar popup (used by screen readers).\n   */\n\n  this.openCalendarLabel = 'Open calendar';\n  /**\n   * A label for the previous month button (used by screen readers).\n   */\n\n  this.prevMonthLabel = 'Previous month';\n  /**\n   * A label for the next month button (used by screen readers).\n   */\n\n  this.nextMonthLabel = 'Next month';\n  /**\n   * A label for the previous year button (used by screen readers).\n   */\n\n  this.prevYearLabel = 'Previous year';\n  /**\n   * A label for the next year button (used by screen readers).\n   */\n\n  this.nextYearLabel = 'Next year';\n  /**\n   * A label for the previous multi-year button (used by screen readers).\n   */\n\n  this.prevMultiYearLabel = 'Previous 20 years';\n  /**\n   * A label for the next multi-year button (used by screen readers).\n   */\n\n  this.nextMultiYearLabel = 'Next 20 years';\n  /**\n   * A label for the 'switch to month view' button (used by screen readers).\n   */\n\n  this.switchToMonthViewLabel = 'Choose date';\n  /**\n   * A label for the 'switch to year view' button (used by screen readers).\n   */\n\n  this.switchToMultiYearViewLabel = 'Choose month and year';\n};\n\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) {\n  return new (t || MatDatepickerIntl)();\n};\n\nMatDatepickerIntl.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: MatDatepickerIntl,\n  factory: MatDatepickerIntl.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nMatDatepickerIntl.ngInjectableDef = defineInjectable({\n  factory: function MatDatepickerIntl_Factory() {\n    return new MatDatepickerIntl();\n  },\n  token: MatDatepickerIntl,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\n\n\nvar MatCalendarCell =\n/**\n * @param {?} value\n * @param {?} displayValue\n * @param {?} ariaLabel\n * @param {?} enabled\n */\nfunction MatCalendarCell(value, displayValue, ariaLabel, enabled) {\n  _classCallCheck(this, MatCalendarCell);\n\n  this.value = value;\n  this.displayValue = displayValue;\n  this.ariaLabel = ariaLabel;\n  this.enabled = enabled;\n};\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\n\n\nvar MatCalendarBody = /*#__PURE__*/function () {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _ngZone\n   */\n  function MatCalendarBody(_elementRef, _ngZone) {\n    _classCallCheck(this, MatCalendarBody);\n\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    /**\n     * The number of columns in the table.\n     */\n\n    this.numCols = 7;\n    /**\n     * Whether to allow selection of disabled cells.\n     */\n\n    this.allowDisabledSelection = false;\n    /**\n     * The cell number of the active cell in the table.\n     */\n\n    this.activeCell = 0;\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n\n    this.cellAspectRatio = 1;\n    /**\n     * Emits when a new value is selected.\n     */\n\n    this.selectedValueChange = new EventEmitter();\n  }\n  /**\n   * @param {?} cell\n   * @return {?}\n   */\n\n\n  _createClass(MatCalendarBody, [{\n    key: \"_cellClicked\",\n    value: function _cellClicked(cell) {\n      if (!this.allowDisabledSelection && !cell.enabled) {\n        return;\n      }\n\n      this.selectedValueChange.emit(cell.value);\n    }\n    /**\n     * The number of blank cells to put at the beginning for the first row.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_firstRowOffset\",\n    get: function get() {\n      return this.rows && this.rows.length && this.rows[0].length ? this.numCols - this.rows[0].length : 0;\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isActiveCell\",\n    value: function _isActiveCell(rowIndex, colIndex) {\n      var\n      /** @type {?} */\n      cellNumber = rowIndex * this.numCols + colIndex; // Account for the fact that the first row may not have as many cells.\n\n      if (rowIndex) {\n        cellNumber -= this._firstRowOffset;\n      }\n\n      return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_focusActiveCell\",\n    value: function _focusActiveCell() {\n      var _this = this;\n\n      this._ngZone.runOutsideAngular(function () {\n        _this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n          _this._elementRef.nativeElement.querySelector('.mat-calendar-body-active').focus();\n        });\n      });\n    }\n  }]);\n\n  return MatCalendarBody;\n}();\n\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) {\n  return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nMatCalendarBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCalendarBody,\n  selectors: [[\"\", \"mat-calendar-body\", \"\"]],\n  hostAttrs: [\"role\", \"grid\", \"attr.aria-readonly\", \"true\", 1, \"mat-calendar-body\"],\n  inputs: {\n    numCols: \"numCols\",\n    allowDisabledSelection: \"allowDisabledSelection\",\n    activeCell: \"activeCell\",\n    cellAspectRatio: \"cellAspectRatio\",\n    label: \"label\",\n    rows: \"rows\",\n    todayValue: \"todayValue\",\n    selectedValue: \"selectedValue\",\n    labelMinRequiredCells: \"labelMinRequiredCells\"\n  },\n  outputs: {\n    selectedValueChange: \"selectedValueChange\"\n  },\n  exportAs: [\"matCalendarBody\"],\n  attrs: _c0,\n  decls: 2,\n  vars: 2,\n  consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", 3, \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", 3, \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\"]],\n  template: function MatCalendarBody_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n      ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf],\n  styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media screen and (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media screen and (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatCalendarBody.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nMatCalendarBody.propDecorators = {\n  \"label\": [{\n    type: Input\n  }],\n  \"rows\": [{\n    type: Input\n  }],\n  \"todayValue\": [{\n    type: Input\n  }],\n  \"selectedValue\": [{\n    type: Input\n  }],\n  \"labelMinRequiredCells\": [{\n    type: Input\n  }],\n  \"numCols\": [{\n    type: Input\n  }],\n  \"allowDisabledSelection\": [{\n    type: Input\n  }],\n  \"activeCell\": [{\n    type: Input\n  }],\n  \"cellAspectRatio\": [{\n    type: Input\n  }],\n  \"selectedValueChange\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n    type: Component,\n    args: [{\n      selector: '[mat-calendar-body]',\n      template: \"<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\"><td class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"numCols\\\" [style.paddingTop.%]=\\\"50 * cellAspectRatio / numCols\\\" [style.paddingBottom.%]=\\\"50 * cellAspectRatio / numCols\\\">{{label}}</td></tr><tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\"><td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\" aria-hidden=\\\"true\\\" class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"_firstRowOffset\\\" [style.paddingTop.%]=\\\"50 * cellAspectRatio / numCols\\\" [style.paddingBottom.%]=\\\"50 * cellAspectRatio / numCols\\\">{{_firstRowOffset >= labelMinRequiredCells ? label : ''}}</td><td *ngFor=\\\"let item of row; let colIndex = index\\\" role=\\\"gridcell\\\" class=\\\"mat-calendar-body-cell\\\" [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\" [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\" [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\" [attr.aria-label]=\\\"item.ariaLabel\\\" [attr.aria-disabled]=\\\"!item.enabled || null\\\" [attr.aria-selected]=\\\"selectedValue === item.value\\\" (click)=\\\"_cellClicked(item)\\\" [style.width.%]=\\\"100 / numCols\\\" [style.paddingTop.%]=\\\"50 * cellAspectRatio / numCols\\\" [style.paddingBottom.%]=\\\"50 * cellAspectRatio / numCols\\\"><div class=\\\"mat-calendar-body-cell-content\\\" [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\" [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">{{item.displayValue}}</div></td></tr>\",\n      styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media screen and (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media screen and (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"],\n      host: {\n        'class': 'mat-calendar-body',\n        'role': 'grid',\n        'attr.aria-readonly': 'true'\n      },\n      exportAs: 'matCalendarBody',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    numCols: [{\n      type: Input\n    }],\n    allowDisabledSelection: [{\n      type: Input\n    }],\n    activeCell: [{\n      type: Input\n    }],\n    cellAspectRatio: [{\n      type: Input\n    }],\n    selectedValueChange: [{\n      type: Output\n    }],\n    label: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    todayValue: [{\n      type: Input\n    }],\n    selectedValue: [{\n      type: Input\n    }],\n    labelMinRequiredCells: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar\n/** @type {?} */\nDAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\n\nvar MatMonthView = /*#__PURE__*/function () {\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _dateFormats\n   * @param {?} _dateAdapter\n   * @param {?=} _dir\n   */\n  function MatMonthView(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n    _classCallCheck(this, MatMonthView);\n\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dateFormats = _dateFormats;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    /**\n     * Emits when a new date is selected.\n     */\n\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits when any date is selected.\n     */\n\n    this._userSelection = new EventEmitter();\n    /**\n     * Emits when any date is activated.\n     */\n\n    this.activeDateChange = new EventEmitter();\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    var\n    /** @type {?} */\n    firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n\n    var\n    /** @type {?} */\n    narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n\n    var\n    /** @type {?} */\n    longWeekdays = this._dateAdapter.getDayOfWeekNames('long'); // Rotate the labels for days of the week based on the configured first day of the week.\n\n\n    var\n    /** @type {?} */\n    weekdays = longWeekdays.map(function (long, i) {\n      return {\n        long: long,\n        narrow: narrowWeekdays[i]\n      };\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    this._activeDate = this._dateAdapter.today();\n  }\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   * @return {?}\n   */\n\n\n  _createClass(MatMonthView, [{\n    key: \"activeDate\",\n    get: function get() {\n      return this._activeDate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      var\n      /** @type {?} */\n      oldActiveDate = this._activeDate;\n\n      var\n      /** @type {?} */\n      validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n\n      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n      if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n        this._init();\n      }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n      this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"minDate\",\n    get: function get() {\n      return this._minDate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"maxDate\",\n    get: function get() {\n      return this._maxDate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._init();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"_dateSelected\",\n    value: function _dateSelected(date) {\n      if (this._selectedDate != date) {\n        var\n        /** @type {?} */\n        selectedYear = this._dateAdapter.getYear(this.activeDate);\n\n        var\n        /** @type {?} */\n        selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n\n        var\n        /** @type {?} */\n        selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n        this.selectedChange.emit(selectedDate);\n      }\n\n      this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_handleCalendarBodyKeydown\",\n    value: function _handleCalendarBodyKeydown(event) {\n      // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n      // disabled ones from being selected. This may not be ideal, we should look into whether\n      // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n      var\n      /** @type {?} */\n      oldActiveDate = this._activeDate;\n\n      var\n      /** @type {?} */\n      isRtl = this._isRtl();\n\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n          break;\n\n        case RIGHT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n          break;\n\n        case UP_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n          break;\n\n        case DOWN_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n          break;\n\n        case HOME:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n          break;\n\n        case END:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) - this._dateAdapter.getDate(this._activeDate));\n          break;\n\n        case PAGE_UP:\n          this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, -1) : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n          break;\n\n        case PAGE_DOWN:\n          this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, 1) : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n          break;\n\n        case ENTER:\n          if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n            this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n\n            this._userSelection.emit(); // Prevent unexpected default actions such as form submission.\n\n\n            event.preventDefault();\n          }\n\n          return;\n\n        default:\n          // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n          return;\n      }\n\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n\n      this._focusActiveCell(); // Prevent unexpected default actions such as form submission.\n\n\n      event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      this._selectedDate = this._getDateInCurrentMonth(this.selected);\n      this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n      this._monthLabel = this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n\n      var\n      /** @type {?} */\n      firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n\n      this._firstWeekOffset = (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) - this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n      this._createWeekCells();\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_focusActiveCell\",\n    value: function _focusActiveCell() {\n      this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createWeekCells\",\n    value: function _createWeekCells() {\n      var\n      /** @type {?} */\n      daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n\n      var\n      /** @type {?} */\n      dateNames = this._dateAdapter.getDateNames();\n\n      this._weeks = [[]];\n\n      for (var\n      /** @type {?} */\n      i = 0,\n      /** @type {?} */\n      cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n        if (cell == DAYS_PER_WEEK) {\n          this._weeks.push([]);\n\n          cell = 0;\n        }\n\n        var\n        /** @type {?} */\n        date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n\n        var\n        /** @type {?} */\n        enabled = this._shouldEnableDate(date);\n\n        var\n        /** @type {?} */\n        ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n\n        this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\n      }\n    }\n    /**\n     * Date filter for the month\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"_shouldEnableDate\",\n    value: function _shouldEnableDate(date) {\n      return !!date && (!this.dateFilter || this.dateFilter(date)) && (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) && (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getDateInCurrentMonth\",\n    value: function _getDateInCurrentMonth(date) {\n      return date && this._hasSameMonthAndYear(date, this.activeDate) ? this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n\n  }, {\n    key: \"_hasSameMonthAndYear\",\n    value: function _hasSameMonthAndYear(d1, d2) {\n      return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) && this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n\n  }, {\n    key: \"_getValidDateOrNull\",\n    value: function _getValidDateOrNull(obj) {\n      return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isRtl\",\n    value: function _isRtl() {\n      return this._dir && this._dir.value === 'rtl';\n    }\n  }]);\n\n  return MatMonthView;\n}();\n\nMatMonthView.ɵfac = function MatMonthView_Factory(t) {\n  return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8));\n};\n\nMatMonthView.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatMonthView,\n  selectors: [[\"mat-month-view\"]],\n  viewQuery: function MatMonthView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    }\n  },\n  inputs: {\n    activeDate: \"activeDate\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    dateFilter: \"dateFilter\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    _userSelection: \"_userSelection\",\n    activeDateChange: \"activeDateChange\"\n  },\n  exportAs: [\"matMonthView\"],\n  decls: 7,\n  vars: 7,\n  consts: [[1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"]],\n  template: function MatMonthView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"tr\");\n      ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"tr\");\n      ɵngcc0.ɵɵelement(5, \"th\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n      ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) {\n        return ctx._dateSelected($event);\n      })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) {\n        return ctx._handleCalendarBodyKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, MatCalendarBody],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatMonthView.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nMatMonthView.propDecorators = {\n  \"activeDate\": [{\n    type: Input\n  }],\n  \"selected\": [{\n    type: Input\n  }],\n  \"minDate\": [{\n    type: Input\n  }],\n  \"maxDate\": [{\n    type: Input\n  }],\n  \"dateFilter\": [{\n    type: Input\n  }],\n  \"selectedChange\": [{\n    type: Output\n  }],\n  \"_userSelection\": [{\n    type: Output\n  }],\n  \"activeDateChange\": [{\n    type: Output\n  }],\n  \"_matCalendarBody\": [{\n    type: ViewChild,\n    args: [MatCalendarBody]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-month-view',\n      template: \"<table class=\\\"mat-calendar-table\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th></tr><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_monthLabel\\\" [rows]=\\\"_weeks\\\" [todayValue]=\\\"_todayDate\\\" [selectedValue]=\\\"_selectedDate\\\" [labelMinRequiredCells]=\\\"3\\\" [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\" (selectedValueChange)=\\\"_dateSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n      exportAs: 'matMonthView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    selectedChange: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar\n/** @type {?} */\nyearsPerPage = 24;\nvar\n/** @type {?} */\nyearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\n\nvar MatMultiYearView = /*#__PURE__*/function () {\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _dateAdapter\n   * @param {?=} _dir\n   */\n  function MatMultiYearView(_changeDetectorRef, _dateAdapter, _dir) {\n    _classCallCheck(this, MatMultiYearView);\n\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    /**\n     * Emits when a new year is selected.\n     */\n\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits the selected year. This doesn't imply a change on the selected date\n     */\n\n    this.yearSelected = new EventEmitter();\n    /**\n     * Emits when any date is activated.\n     */\n\n    this.activeDateChange = new EventEmitter();\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n  /**\n   * The date to display in this multi-year view (everything other than the year is ignored).\n   * @return {?}\n   */\n\n\n  _createClass(MatMultiYearView, [{\n    key: \"activeDate\",\n    get: function get() {\n      return this._activeDate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      var\n      /** @type {?} */\n      oldActiveDate = this._activeDate;\n\n      var\n      /** @type {?} */\n      validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n\n      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n      if (Math.floor(this._dateAdapter.getYear(oldActiveDate) / yearsPerPage) != Math.floor(this._dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n        this._init();\n      }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n      this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"minDate\",\n    get: function get() {\n      return this._minDate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"maxDate\",\n    get: function get() {\n      return this._maxDate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._init();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this2 = this;\n\n      this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n\n      var\n      /** @type {?} */\n      activeYear = this._dateAdapter.getYear(this._activeDate);\n\n      var\n      /** @type {?} */\n      activeOffset = activeYear % yearsPerPage;\n      this._years = [];\n\n      for (var\n      /** @type {?} */\n      i = 0,\n      /** @type {?} */\n      row = []; i < yearsPerPage; i++) {\n        row.push(activeYear - activeOffset + i);\n\n        if (row.length == yearsPerRow) {\n          this._years.push(row.map(function (year) {\n            return _this2._createCellForYear(year);\n          }));\n\n          row = [];\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n\n  }, {\n    key: \"_yearSelected\",\n    value: function _yearSelected(year) {\n      this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n\n      var\n      /** @type {?} */\n      month = this._dateAdapter.getMonth(this.activeDate);\n\n      var\n      /** @type {?} */\n      daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n\n      this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_handleCalendarBodyKeydown\",\n    value: function _handleCalendarBodyKeydown(event) {\n      // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n      // disabled ones from being selected. This may not be ideal, we should look into whether\n      // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n      var\n      /** @type {?} */\n      oldActiveDate = this._activeDate;\n\n      var\n      /** @type {?} */\n      isRtl = this._isRtl();\n\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n          break;\n\n        case RIGHT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n          break;\n\n        case UP_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n          break;\n\n        case DOWN_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n          break;\n\n        case HOME:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -this._dateAdapter.getYear(this._activeDate) % yearsPerPage);\n          break;\n\n        case END:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - this._dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n          break;\n\n        case PAGE_UP:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n          break;\n\n        case PAGE_DOWN:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n          break;\n\n        case ENTER:\n          this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n\n          break;\n\n        default:\n          // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n          return;\n      }\n\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n\n      this._focusActiveCell(); // Prevent unexpected default actions such as form submission.\n\n\n      event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getActiveCell\",\n    value: function _getActiveCell() {\n      return this._dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_focusActiveCell\",\n    value: function _focusActiveCell() {\n      this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @param {?} year\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createCellForYear\",\n    value: function _createCellForYear(year) {\n      var\n      /** @type {?} */\n      yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n\n      return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @param {?} year\n     * @return {?}\n     */\n\n  }, {\n    key: \"_shouldEnableYear\",\n    value: function _shouldEnableYear(year) {\n      // disable if the year is greater than maxDate lower than minDate\n      if (year === undefined || year === null || this.maxDate && year > this._dateAdapter.getYear(this.maxDate) || this.minDate && year < this._dateAdapter.getYear(this.minDate)) {\n        return false;\n      } // enable if it reaches here and there's no filter defined\n\n\n      if (!this.dateFilter) {\n        return true;\n      }\n\n      var\n      /** @type {?} */\n      firstOfYear = this._dateAdapter.createDate(year, 0, 1); // If any date in the year is enabled count the year as enabled.\n\n\n      for (var\n      /** @type {?} */\n      date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n        if (this.dateFilter(date)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n\n  }, {\n    key: \"_getValidDateOrNull\",\n    value: function _getValidDateOrNull(obj) {\n      return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isRtl\",\n    value: function _isRtl() {\n      return this._dir && this._dir.value === 'rtl';\n    }\n  }]);\n\n  return MatMultiYearView;\n}();\n\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) {\n  return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8));\n};\n\nMatMultiYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatMultiYearView,\n  selectors: [[\"mat-multi-year-view\"]],\n  viewQuery: function MatMultiYearView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    }\n  },\n  inputs: {\n    activeDate: \"activeDate\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    dateFilter: \"dateFilter\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    yearSelected: \"yearSelected\",\n    activeDateChange: \"activeDateChange\"\n  },\n  exportAs: [\"matMultiYearView\"],\n  decls: 5,\n  vars: 6,\n  consts: [[1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", \"allowDisabledSelection\", \"true\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]],\n  template: function MatMultiYearView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"tr\");\n      ɵngcc0.ɵɵelement(3, \"th\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n      ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) {\n        return ctx._yearSelected($event);\n      })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) {\n        return ctx._handleCalendarBodyKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    }\n  },\n  directives: [MatCalendarBody],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatMultiYearView.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nMatMultiYearView.propDecorators = {\n  \"activeDate\": [{\n    type: Input\n  }],\n  \"selected\": [{\n    type: Input\n  }],\n  \"minDate\": [{\n    type: Input\n  }],\n  \"maxDate\": [{\n    type: Input\n  }],\n  \"dateFilter\": [{\n    type: Input\n  }],\n  \"selectedChange\": [{\n    type: Output\n  }],\n  \"yearSelected\": [{\n    type: Output\n  }],\n  \"activeDateChange\": [{\n    type: Output\n  }],\n  \"_matCalendarBody\": [{\n    type: ViewChild,\n    args: [MatCalendarBody]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-multi-year-view',\n      template: \"<table class=\\\"mat-calendar-table\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body allowDisabledSelection=\\\"true\\\" [rows]=\\\"_years\\\" [todayValue]=\\\"_todayYear\\\" [selectedValue]=\\\"_selectedYear\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_getActiveCell()\\\" (selectedValueChange)=\\\"_yearSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n      exportAs: 'matMultiYearView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    selectedChange: [{\n      type: Output\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\n\n\nvar MatYearView = /*#__PURE__*/function () {\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _dateFormats\n   * @param {?} _dateAdapter\n   * @param {?=} _dir\n   */\n  function MatYearView(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n    _classCallCheck(this, MatYearView);\n\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dateFormats = _dateFormats;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    /**\n     * Emits when a new month is selected.\n     */\n\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits the selected month. This doesn't imply a change on the selected date\n     */\n\n    this.monthSelected = new EventEmitter();\n    /**\n     * Emits when any date is activated.\n     */\n\n    this.activeDateChange = new EventEmitter();\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n  /**\n   * The date to display in this year view (everything other than the year is ignored).\n   * @return {?}\n   */\n\n\n  _createClass(MatYearView, [{\n    key: \"activeDate\",\n    get: function get() {\n      return this._activeDate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      var\n      /** @type {?} */\n      oldActiveDate = this._activeDate;\n\n      var\n      /** @type {?} */\n      validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n\n      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n      if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n        this._init();\n      }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n      this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"minDate\",\n    get: function get() {\n      return this._minDate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"maxDate\",\n    get: function get() {\n      return this._maxDate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._init();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n\n  }, {\n    key: \"_monthSelected\",\n    value: function _monthSelected(month) {\n      var\n      /** @type {?} */\n      normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n      this.monthSelected.emit(normalizedDate);\n\n      var\n      /** @type {?} */\n      daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n      this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_handleCalendarBodyKeydown\",\n    value: function _handleCalendarBodyKeydown(event) {\n      // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n      // disabled ones from being selected. This may not be ideal, we should look into whether\n      // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n      var\n      /** @type {?} */\n      oldActiveDate = this._activeDate;\n\n      var\n      /** @type {?} */\n      isRtl = this._isRtl();\n\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n          break;\n\n        case RIGHT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n          break;\n\n        case UP_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n          break;\n\n        case DOWN_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n          break;\n\n        case HOME:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n          break;\n\n        case END:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n          break;\n\n        case PAGE_UP:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n          break;\n\n        case PAGE_DOWN:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n          break;\n\n        case ENTER:\n          this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n\n          break;\n\n        default:\n          // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n          return;\n      }\n\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n\n      this._focusActiveCell(); // Prevent unexpected default actions such as form submission.\n\n\n      event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this3 = this;\n\n      this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n      this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n      this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n      var\n      /** @type {?} */\n      monthNames = this._dateAdapter.getMonthNames('short'); // First row of months only contains 5 elements so we can fit the year label on the same row.\n\n\n      this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(function (row) {\n        return row.map(function (month) {\n          return _this3._createCellForMonth(month, monthNames[month]);\n        });\n      });\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_focusActiveCell\",\n    value: function _focusActiveCell() {\n      this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getMonthInCurrentYear\",\n    value: function _getMonthInCurrentYear(date) {\n      return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ? this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createCellForMonth\",\n    value: function _createCellForMonth(month, monthName) {\n      var\n      /** @type {?} */\n      ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n\n      return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @param {?} month\n     * @return {?}\n     */\n\n  }, {\n    key: \"_shouldEnableMonth\",\n    value: function _shouldEnableMonth(month) {\n      var\n      /** @type {?} */\n      activeYear = this._dateAdapter.getYear(this.activeDate);\n\n      if (month === undefined || month === null || this._isYearAndMonthAfterMaxDate(activeYear, month) || this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n        return false;\n      }\n\n      if (!this.dateFilter) {\n        return true;\n      }\n\n      var\n      /** @type {?} */\n      firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1); // If any date in the month is enabled count the month as enabled.\n\n\n      for (var\n      /** @type {?} */\n      date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n        if (this.dateFilter(date)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isYearAndMonthAfterMaxDate\",\n    value: function _isYearAndMonthAfterMaxDate(year, month) {\n      if (this.maxDate) {\n        var\n        /** @type {?} */\n        maxYear = this._dateAdapter.getYear(this.maxDate);\n\n        var\n        /** @type {?} */\n        maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n        return year > maxYear || year === maxYear && month > maxMonth;\n      }\n\n      return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isYearAndMonthBeforeMinDate\",\n    value: function _isYearAndMonthBeforeMinDate(year, month) {\n      if (this.minDate) {\n        var\n        /** @type {?} */\n        minYear = this._dateAdapter.getYear(this.minDate);\n\n        var\n        /** @type {?} */\n        minMonth = this._dateAdapter.getMonth(this.minDate);\n\n        return year < minYear || year === minYear && month < minMonth;\n      }\n\n      return false;\n    }\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n\n  }, {\n    key: \"_getValidDateOrNull\",\n    value: function _getValidDateOrNull(obj) {\n      return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isRtl\",\n    value: function _isRtl() {\n      return this._dir && this._dir.value === 'rtl';\n    }\n  }]);\n\n  return MatYearView;\n}();\n\nMatYearView.ɵfac = function MatYearView_Factory(t) {\n  return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8));\n};\n\nMatYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatYearView,\n  selectors: [[\"mat-year-view\"]],\n  viewQuery: function MatYearView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    }\n  },\n  inputs: {\n    activeDate: \"activeDate\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    dateFilter: \"dateFilter\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    monthSelected: \"monthSelected\",\n    activeDateChange: \"activeDateChange\"\n  },\n  exportAs: [\"matYearView\"],\n  decls: 5,\n  vars: 8,\n  consts: [[1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", \"allowDisabledSelection\", \"true\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]],\n  template: function MatYearView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"tr\");\n      ɵngcc0.ɵɵelement(3, \"th\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n      ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) {\n        return ctx._monthSelected($event);\n      })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) {\n        return ctx._handleCalendarBodyKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    }\n  },\n  directives: [MatCalendarBody],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatYearView.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nMatYearView.propDecorators = {\n  \"activeDate\": [{\n    type: Input\n  }],\n  \"selected\": [{\n    type: Input\n  }],\n  \"minDate\": [{\n    type: Input\n  }],\n  \"maxDate\": [{\n    type: Input\n  }],\n  \"dateFilter\": [{\n    type: Input\n  }],\n  \"selectedChange\": [{\n    type: Output\n  }],\n  \"monthSelected\": [{\n    type: Output\n  }],\n  \"activeDateChange\": [{\n    type: Output\n  }],\n  \"_matCalendarBody\": [{\n    type: ViewChild,\n    args: [MatCalendarBody]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-year-view',\n      template: \"<table class=\\\"mat-calendar-table\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body allowDisabledSelection=\\\"true\\\" [label]=\\\"_yearLabel\\\" [rows]=\\\"_months\\\" [todayValue]=\\\"_todayMonth\\\" [selectedValue]=\\\"_selectedMonth\\\" [labelMinRequiredCells]=\\\"2\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\" (selectedValueChange)=\\\"_monthSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n      exportAs: 'matYearView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    selectedChange: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Default header for MatCalendar\n * @template D\n */\n\n\nvar MatCalendarHeader = /*#__PURE__*/function () {\n  /**\n   * @param {?} _intl\n   * @param {?} calendar\n   * @param {?} _dateAdapter\n   * @param {?} _dateFormats\n   * @param {?} changeDetectorRef\n   */\n  function MatCalendarHeader(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n    _classCallCheck(this, MatCalendarHeader);\n\n    this._intl = _intl;\n    this.calendar = calendar;\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    this.calendar.stateChanges.subscribe(function () {\n      return changeDetectorRef.markForCheck();\n    });\n  }\n  /**\n   * The label for the current calendar view.\n   * @return {?}\n   */\n\n\n  _createClass(MatCalendarHeader, [{\n    key: \"periodButtonText\",\n    get: function get() {\n      if (this.calendar.currentView == 'month') {\n        return this._dateAdapter.format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel).toLocaleUpperCase();\n      }\n\n      if (this.calendar.currentView == 'year') {\n        return this._dateAdapter.getYearName(this.calendar.activeDate);\n      }\n\n      var\n      /** @type {?} */\n      activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n\n      var\n      /** @type {?} */\n      firstYearInView = this._dateAdapter.getYearName(this._dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n\n      var\n      /** @type {?} */\n      lastYearInView = this._dateAdapter.getYearName(this._dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n      return \"\".concat(firstYearInView, \" \\u2013 \").concat(lastYearInView);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"periodButtonLabel\",\n    get: function get() {\n      return this.calendar.currentView == 'month' ? this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the the previous button.\n     * @return {?}\n     */\n\n  }, {\n    key: \"prevButtonLabel\",\n    get: function get() {\n      return {\n        'month': this._intl.prevMonthLabel,\n        'year': this._intl.prevYearLabel,\n        'multi-year': this._intl.prevMultiYearLabel\n      }[this.calendar.currentView];\n    }\n    /**\n     * The label for the the next button.\n     * @return {?}\n     */\n\n  }, {\n    key: \"nextButtonLabel\",\n    get: function get() {\n      return {\n        'month': this._intl.nextMonthLabel,\n        'year': this._intl.nextYearLabel,\n        'multi-year': this._intl.nextMultiYearLabel\n      }[this.calendar.currentView];\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n\n  }, {\n    key: \"currentPeriodClicked\",\n    value: function currentPeriodClicked() {\n      this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n\n  }, {\n    key: \"previousClicked\",\n    value: function previousClicked() {\n      this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n\n  }, {\n    key: \"nextClicked\",\n    value: function nextClicked() {\n      this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n\n  }, {\n    key: \"previousEnabled\",\n    value: function previousEnabled() {\n      if (!this.calendar.minDate) {\n        return true;\n      }\n\n      return !this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n\n  }, {\n    key: \"nextEnabled\",\n    value: function nextEnabled() {\n      return !this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isSameView\",\n    value: function _isSameView(date1, date2) {\n      if (this.calendar.currentView == 'month') {\n        return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) && this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n      }\n\n      if (this.calendar.currentView == 'year') {\n        return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n      } // Otherwise we are in 'multi-year' view.\n\n\n      return Math.floor(this._dateAdapter.getYear(date1) / yearsPerPage) == Math.floor(this._dateAdapter.getYear(date2) / yearsPerPage);\n    }\n  }]);\n\n  return MatCalendarHeader;\n}();\n\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) {\n  return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return MatCalendar;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatCalendarHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCalendarHeader,\n  selectors: [[\"mat-calendar-header\"]],\n  exportAs: [\"matCalendarHeader\"],\n  decls: 8,\n  vars: 8,\n  consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]],\n  template: function MatCalendarHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() {\n        return ctx.currentPeriodClicked();\n      });\n      ɵngcc0.ɵɵtext(3);\n      ɵngcc0.ɵɵelement(4, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(5, \"div\", 4);\n      ɵngcc0.ɵɵelementStart(6, \"button\", 5);\n      ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_6_listener() {\n        return ctx.previousClicked();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n      ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener() {\n        return ctx.nextClicked();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    }\n  },\n  directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatCalendarHeader.ctorParameters = function () {\n  return [{\n    type: MatDatepickerIntl\n  }, {\n    type: MatCalendar,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return MatCalendar;\n      })]\n    }]\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-calendar-header',\n      template: \"<div class=\\\"mat-calendar-header\\\"><div class=\\\"mat-calendar-controls\\\"><button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\" (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\" cdkAriaLive=\\\"polite\\\">{{periodButtonText}}<div class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div></button><div class=\\\"mat-calendar-spacer\\\"></div><button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\" [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\" [attr.aria-label]=\\\"prevButtonLabel\\\"></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\" [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\" [attr.aria-label]=\\\"nextButtonLabel\\\"></button></div></div>\",\n      exportAs: 'matCalendarHeader',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerIntl\n    }, {\n      type: MatCalendar,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return MatCalendar;\n        })]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\n\n\nvar MatCalendar = /*#__PURE__*/function () {\n  /**\n   * @param {?} _intl\n   * @param {?} _dateAdapter\n   * @param {?} _dateFormats\n   * @param {?} _changeDetectorRef\n   */\n  function MatCalendar(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n    var _this4 = this;\n\n    _classCallCheck(this, MatCalendar);\n\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    this._changeDetectorRef = _changeDetectorRef;\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n\n    this._moveFocusOnNextTick = false;\n    /**\n     * Whether the calendar should be started in month or year view.\n     */\n\n    this.startView = 'month';\n    /**\n     * Emits when the currently selected date changes.\n     */\n\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n\n    this.yearSelected = new EventEmitter();\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n\n    this.monthSelected = new EventEmitter();\n    /**\n     * Emits when any date is selected.\n     */\n\n    this._userSelection = new EventEmitter();\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n\n    this.stateChanges = new Subject();\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._intlChanges = _intl.changes.subscribe(function () {\n      _changeDetectorRef.markForCheck();\n\n      _this4.stateChanges.next();\n    });\n  }\n  /**\n   * A date representing the period (month or year) to start the calendar in.\n   * @return {?}\n   */\n\n\n  _createClass(MatCalendar, [{\n    key: \"startAt\",\n    get: function get() {\n      return this._startAt;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"minDate\",\n    get: function get() {\n      return this._minDate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"maxDate\",\n    get: function get() {\n      return this._maxDate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n\n  }, {\n    key: \"activeDate\",\n    get: function get() {\n      return this._clampedActiveDate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n      this.stateChanges.next();\n    }\n    /**\n     * Whether the calendar is in month view.\n     * @return {?}\n     */\n\n  }, {\n    key: \"currentView\",\n    get: function get() {\n      return this._currentView;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._currentView = value;\n      this._moveFocusOnNextTick = true;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n      this.activeDate = this.startAt || this._dateAdapter.today(); // Assign to the private property since we don't want to move focus on init.\n\n      this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      if (this._moveFocusOnNextTick) {\n        this._moveFocusOnNextTick = false;\n        this.focusActiveCell();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._intlChanges.unsubscribe();\n\n      this.stateChanges.complete();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var\n      /** @type {?} */\n      change = changes[\"minDate\"] || changes[\"maxDate\"] || changes[\"dateFilter\"];\n\n      if (change && !change.firstChange) {\n        var\n        /** @type {?} */\n        view = this._getCurrentViewComponent();\n\n        if (view) {\n          // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n          // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n          this._changeDetectorRef.detectChanges();\n\n          view._init();\n        }\n      }\n\n      this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"focusActiveCell\",\n    value: function focusActiveCell() {\n      this._getCurrentViewComponent()._focusActiveCell();\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"_dateSelected\",\n    value: function _dateSelected(date) {\n      if (!this._dateAdapter.sameDate(date, this.selected)) {\n        this.selectedChange.emit(date);\n      }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n\n  }, {\n    key: \"_yearSelectedInMultiYearView\",\n    value: function _yearSelectedInMultiYearView(normalizedYear) {\n      this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n\n  }, {\n    key: \"_monthSelectedInYearView\",\n    value: function _monthSelectedInYearView(normalizedMonth) {\n      this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_userSelected\",\n    value: function _userSelected() {\n      this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n\n  }, {\n    key: \"_goToDateInView\",\n    value: function _goToDateInView(date, view) {\n      this.activeDate = date;\n      this.currentView = view;\n    }\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n\n  }, {\n    key: \"_getValidDateOrNull\",\n    value: function _getValidDateOrNull(obj) {\n      return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n    }\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getCurrentViewComponent\",\n    value: function _getCurrentViewComponent() {\n      return this.monthView || this.yearView || this.multiYearView;\n    }\n  }]);\n\n  return MatCalendar;\n}();\n\nMatCalendar.ɵfac = function MatCalendar_Factory(t) {\n  return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatCalendar.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCalendar,\n  selectors: [[\"mat-calendar\"]],\n  viewQuery: function MatCalendar_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatMonthView, 1);\n      ɵngcc0.ɵɵviewQuery(MatYearView, 1);\n      ɵngcc0.ɵɵviewQuery(MatMultiYearView, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-calendar\"],\n  inputs: {\n    startView: \"startView\",\n    startAt: \"startAt\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    headerComponent: \"headerComponent\",\n    dateFilter: \"dateFilter\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    yearSelected: \"yearSelected\",\n    monthSelected: \"monthSelected\",\n    _userSelection: \"_userSelection\"\n  },\n  exportAs: [\"matCalendar\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 5,\n  consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]],\n  template: function MatCalendar_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 5, \"mat-month-view\", 2);\n      ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", 3);\n      ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", 4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    }\n  },\n  directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView, MatYearView, MatMultiYearView],\n  styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatCalendar.ctorParameters = function () {\n  return [{\n    type: MatDatepickerIntl\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nMatCalendar.propDecorators = {\n  \"headerComponent\": [{\n    type: Input\n  }],\n  \"startAt\": [{\n    type: Input\n  }],\n  \"startView\": [{\n    type: Input\n  }],\n  \"selected\": [{\n    type: Input\n  }],\n  \"minDate\": [{\n    type: Input\n  }],\n  \"maxDate\": [{\n    type: Input\n  }],\n  \"dateFilter\": [{\n    type: Input\n  }],\n  \"selectedChange\": [{\n    type: Output\n  }],\n  \"yearSelected\": [{\n    type: Output\n  }],\n  \"monthSelected\": [{\n    type: Output\n  }],\n  \"_userSelection\": [{\n    type: Output\n  }],\n  \"monthView\": [{\n    type: ViewChild,\n    args: [MatMonthView]\n  }],\n  \"yearView\": [{\n    type: ViewChild,\n    args: [MatYearView]\n  }],\n  \"multiYearView\": [{\n    type: ViewChild,\n    args: [MatMultiYearView]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-calendar',\n      template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template><div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\"><mat-month-view *ngSwitchCase=\\\"'month'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (selectedChange)=\\\"_dateSelected($event)\\\" (_userSelection)=\\\"_userSelected()\\\"></mat-month-view><mat-year-view *ngSwitchCase=\\\"'year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (monthSelected)=\\\"_monthSelectedInYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view><mat-multi-year-view *ngSwitchCase=\\\"'multi-year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view></div>\",\n      styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"],\n      host: {\n        'class': 'mat-calendar'\n      },\n      exportAs: 'matCalendar',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerIntl\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    startView: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    startAt: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    headerComponent: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    monthView: [{\n      type: ViewChild,\n      args: [MatMonthView]\n    }],\n    yearView: [{\n      type: ViewChild,\n      args: [MatYearView]\n    }],\n    multiYearView: [{\n      type: ViewChild,\n      args: [MatMultiYearView]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Animations used by the Material datepicker.\n */\n\n\nvar\n/** @type {?} */\nmatDatepickerAnimations = {\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: trigger('transformPanel', [state('void', style({\n    opacity: 0,\n    transform: 'scale(1, 0)'\n  })), state('enter', style({\n    opacity: 1,\n    transform: 'scale(1, 1)'\n  })), transition('void => enter', group([query('@fadeInCalendar', animateChild()), animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')])), transition('* => void', animate('100ms linear', style({\n    opacity: 0\n  })))]),\n\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: trigger('fadeInCalendar', [state('void', style({\n    opacity: 0\n  })), state('enter', style({\n    opacity: 1\n  })), transition('void => *', animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Used to generate a unique ID for each datepicker instance.\n */\n\nvar\n/** @type {?} */\ndatepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n */\n\nvar\n/** @type {?} */\nMAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\n\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n  return function () {\n    return overlay.scrollStrategies.reposition();\n  };\n}\n/**\n * \\@docs-private\n */\n\n\nvar\n/** @type {?} */\nMAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n/**\n * \\@docs-private\n */\n\nvar MatDatepickerContentBase =\n/**\n * @param {?} _elementRef\n */\nfunction MatDatepickerContentBase(_elementRef) {\n  _classCallCheck(this, MatDatepickerContentBase);\n\n  this._elementRef = _elementRef;\n};\n\nvar\n/** @type {?} */\n_MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\n\n\nvar MatDatepickerContent = /*#__PURE__*/function (_MatDatepickerContent) {\n  _inherits(MatDatepickerContent, _MatDatepickerContent);\n\n  var _super = _createSuper(MatDatepickerContent);\n\n  /**\n   * @param {?} elementRef\n   */\n  function MatDatepickerContent(elementRef) {\n    _classCallCheck(this, MatDatepickerContent);\n\n    return _super.call(this, elementRef);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(MatDatepickerContent, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this._calendar.focusActiveCell();\n    }\n  }]);\n\n  return MatDatepickerContent;\n}(_MatDatepickerContentMixinBase);\n\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) {\n  return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nMatDatepickerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepickerContent,\n  selectors: [[\"mat-datepicker-content\"]],\n  viewQuery: function MatDatepickerContent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendar, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-datepicker-content\"],\n  hostVars: 3,\n  hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@transformPanel\", \"enter\");\n      ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    }\n  },\n  inputs: {\n    color: \"color\"\n  },\n  exportAs: [\"matDatepickerContent\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 10,\n  consts: [[\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"]],\n  template: function MatDatepickerContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", 0);\n      ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) {\n        return ctx.datepicker._select($event);\n      })(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) {\n        return ctx.datepicker._selectYear($event);\n      })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) {\n        return ctx.datepicker._selectMonth($event);\n      })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener() {\n        return ctx.datepicker.close();\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"@fadeInCalendar\", \"enter\");\n    }\n  },\n  directives: [MatCalendar, ɵngcc5.CdkTrapFocus, ɵngcc1.NgClass],\n  styles: [\".mat-datepicker-content{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);display:block;border-radius:2px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12);display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatDatepickerContent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nMatDatepickerContent.propDecorators = {\n  \"_calendar\": [{\n    type: ViewChild,\n    args: [MatCalendar]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker-content',\n      template: \"<mat-calendar cdkTrapFocus [id]=\\\"datepicker.id\\\" [ngClass]=\\\"datepicker.panelClass\\\" [startAt]=\\\"datepicker.startAt\\\" [startView]=\\\"datepicker.startView\\\" [minDate]=\\\"datepicker._minDate\\\" [maxDate]=\\\"datepicker._maxDate\\\" [dateFilter]=\\\"datepicker._dateFilter\\\" [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\" [selected]=\\\"datepicker._selected\\\" [@fadeInCalendar]=\\\"'enter'\\\" (selectedChange)=\\\"datepicker._select($event)\\\" (yearSelected)=\\\"datepicker._selectYear($event)\\\" (monthSelected)=\\\"datepicker._selectMonth($event)\\\" (_userSelection)=\\\"datepicker.close()\\\"></mat-calendar>\",\n      styles: [\".mat-datepicker-content{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);display:block;border-radius:2px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12);display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"],\n      host: {\n        'class': 'mat-datepicker-content',\n        '[@transformPanel]': '\"enter\"',\n        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n      },\n      animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar],\n      exportAs: 'matDatepickerContent',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['color']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    _calendar: [{\n      type: ViewChild,\n      args: [MatCalendar]\n    }]\n  });\n})();\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\n\n\nvar MatDatepicker = /*#__PURE__*/function () {\n  /**\n   * @param {?} _dialog\n   * @param {?} _overlay\n   * @param {?} _ngZone\n   * @param {?} _viewContainerRef\n   * @param {?} _scrollStrategy\n   * @param {?} _dateAdapter\n   * @param {?} _dir\n   * @param {?} _document\n   */\n  function MatDatepicker(_dialog, _overlay, _ngZone, _viewContainerRef, _scrollStrategy, _dateAdapter, _dir, _document) {\n    _classCallCheck(this, MatDatepicker);\n\n    this._dialog = _dialog;\n    this._overlay = _overlay;\n    this._ngZone = _ngZone;\n    this._viewContainerRef = _viewContainerRef;\n    this._scrollStrategy = _scrollStrategy;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    this._document = _document;\n    /**\n     * The view that the calendar should start in.\n     */\n\n    this.startView = 'month';\n    this._touchUi = false;\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n\n    this.yearSelected = new EventEmitter();\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n\n    this.monthSelected = new EventEmitter();\n    /**\n     * Emits when the datepicker has been opened.\n     */\n\n    this.openedStream = new EventEmitter();\n    /**\n     * Emits when the datepicker has been closed.\n     */\n\n    this.closedStream = new EventEmitter();\n    this._opened = false;\n    /**\n     * The id for the datepicker calendar.\n     */\n\n    this.id = \"mat-datepicker-\".concat(datepickerUid++);\n    this._validSelected = null;\n    /**\n     * The element that was focused before the datepicker was opened.\n     */\n\n    this._focusedElementBeforeOpen = null;\n    /**\n     * Subscription to value changes in the associated input element.\n     */\n\n    this._inputSubscription = Subscription.EMPTY;\n    /**\n     * Emits when the datepicker is disabled.\n     */\n\n    this._disabledChange = new Subject();\n    /**\n     * Emits new selected date when selected date changes.\n     */\n\n    this._selectedChanged = new Subject();\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n  }\n  /**\n   * The date to open the calendar to initially.\n   * @return {?}\n   */\n\n\n  _createClass(MatDatepicker, [{\n    key: \"startAt\",\n    get: function get() {\n      // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n      // selected value is.\n      return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Color palette to use on the datepicker's calendar.\n     * @return {?}\n     */\n\n  }, {\n    key: \"color\",\n    get: function get() {\n      return this._color || (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     * @return {?}\n     */\n\n  }, {\n    key: \"touchUi\",\n    get: function get() {\n      return this._touchUi;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._touchUi = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled === undefined && this._datepickerInput ? this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      var\n      /** @type {?} */\n      newValue = coerceBooleanProperty(value);\n\n      if (newValue !== this._disabled) {\n        this._disabled = newValue;\n\n        this._disabledChange.next(newValue);\n      }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n\n  }, {\n    key: \"opened\",\n    get: function get() {\n      return this._opened;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      value ? this.open() : this.close();\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_selected\",\n    get: function get() {\n      return this._validSelected;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._validSelected = value;\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_minDate\",\n    get: function get() {\n      return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_maxDate\",\n    get: function get() {\n      return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_dateFilter\",\n    get: function get() {\n      return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.close();\n\n      this._inputSubscription.unsubscribe();\n\n      this._disabledChange.complete();\n\n      if (this._popupRef) {\n        this._popupRef.dispose();\n\n        this._popupComponentRef = null;\n      }\n    }\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"_select\",\n    value: function _select(date) {\n      var\n      /** @type {?} */\n      oldValue = this._selected;\n      this._selected = date;\n\n      if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n        this._selectedChanged.next(date);\n      }\n    }\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n\n  }, {\n    key: \"_selectYear\",\n    value: function _selectYear(normalizedYear) {\n      this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n\n  }, {\n    key: \"_selectMonth\",\n    value: function _selectMonth(normalizedMonth) {\n      this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_registerInput\",\n    value: function _registerInput(input) {\n      var _this5 = this;\n\n      if (this._datepickerInput) {\n        throw Error('A MatDatepicker can only be associated with a single input.');\n      }\n\n      this._datepickerInput = input;\n      this._inputSubscription = this._datepickerInput._valueChange.subscribe(function (value) {\n        return _this5._selected = value;\n      });\n    }\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (this._opened || this.disabled) {\n        return;\n      }\n\n      if (!this._datepickerInput) {\n        throw Error('Attempted to open an MatDatepicker with no associated input.');\n      }\n\n      if (this._document) {\n        this._focusedElementBeforeOpen = this._document.activeElement;\n      }\n\n      this.touchUi ? this._openAsDialog() : this._openAsPopup();\n      this._opened = true;\n      this.openedStream.emit();\n    }\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this6 = this;\n\n      if (!this._opened) {\n        return;\n      }\n\n      if (this._popupRef && this._popupRef.hasAttached()) {\n        this._popupRef.detach();\n      }\n\n      if (this._dialogRef) {\n        this._dialogRef.close();\n\n        this._dialogRef = null;\n      }\n\n      if (this._calendarPortal && this._calendarPortal.isAttached) {\n        this._calendarPortal.detach();\n      }\n\n      var\n      /** @type {?} */\n      completeClose = function completeClose() {\n        // The `_opened` could've been reset already if\n        // we got two events in quick succession.\n        if (_this6._opened) {\n          _this6._opened = false;\n\n          _this6.closedStream.emit();\n\n          _this6._focusedElementBeforeOpen = null;\n        }\n      };\n\n      if (this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function') {\n        // Because IE moves focus asynchronously, we can't count on it being restored before we've\n        // marked the datepicker as closed. If the event fires out of sequence and the element that\n        // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n        // able to close the calendar at all. We work around it by making the logic, that marks\n        // the datepicker as closed, async as well.\n        this._focusedElementBeforeOpen.focus();\n\n        setTimeout(completeClose);\n      } else {\n        completeClose();\n      }\n    }\n    /**\n     * Open the calendar as a dialog.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_openAsDialog\",\n    value: function _openAsDialog() {\n      var _this7 = this;\n\n      this._dialogRef = this._dialog.open(MatDatepickerContent, {\n        direction: this._dir ? this._dir.value : 'ltr',\n        viewContainerRef: this._viewContainerRef,\n        panelClass: 'mat-datepicker-dialog'\n      });\n\n      this._dialogRef.afterClosed().subscribe(function () {\n        return _this7.close();\n      });\n\n      this._dialogRef.componentInstance.datepicker = this;\n\n      this._setColor();\n    }\n    /**\n     * Open the calendar as a popup.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_openAsPopup\",\n    value: function _openAsPopup() {\n      var _this8 = this;\n\n      if (!this._calendarPortal) {\n        this._calendarPortal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n      }\n\n      if (!this._popupRef) {\n        this._createPopup();\n      }\n\n      if (!this._popupRef.hasAttached()) {\n        this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n        this._popupComponentRef.instance.datepicker = this;\n\n        this._setColor(); // Update the position once the calendar has rendered.\n\n\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n          _this8._popupRef.updatePosition();\n        });\n      }\n    }\n    /**\n     * Create the popup.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createPopup\",\n    value: function _createPopup() {\n      var _this9 = this;\n\n      var\n      /** @type {?} */\n      overlayConfig = new OverlayConfig({\n        positionStrategy: this._createPopupPositionStrategy(),\n        hasBackdrop: true,\n        backdropClass: 'mat-overlay-transparent-backdrop',\n        direction: this._dir,\n        scrollStrategy: this._scrollStrategy(),\n        panelClass: 'mat-datepicker-popup'\n      });\n      this._popupRef = this._overlay.create(overlayConfig);\n\n      this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n      merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter(function (event) {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE || _this9._datepickerInput && event.altKey && event.keyCode === UP_ARROW;\n      }))).subscribe(function () {\n        return _this9.close();\n      });\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createPopupPositionStrategy\",\n    value: function _createPopupPositionStrategy() {\n      return this._overlay.position().flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin()).withTransformOriginOn('.mat-datepicker-content').withFlexibleDimensions(false).withViewportMargin(8).withPush(false).withPositions([{\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n      }, {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n      }, {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n      }, {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n      }]);\n    }\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n\n  }, {\n    key: \"_getValidDateOrNull\",\n    value: function _getValidDateOrNull(obj) {\n      return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n    }\n    /**\n     * Passes the current theme color along to the calendar overlay.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setColor\",\n    value: function _setColor() {\n      var\n      /** @type {?} */\n      color = this.color;\n\n      if (this._popupComponentRef) {\n        this._popupComponentRef.instance.color = color;\n      }\n\n      if (this._dialogRef) {\n        this._dialogRef.componentInstance.color = color;\n      }\n    }\n  }]);\n\n  return MatDatepicker;\n}();\n\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) {\n  return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8));\n};\n\nMatDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepicker,\n  selectors: [[\"mat-datepicker\"]],\n  inputs: {\n    startView: \"startView\",\n    startAt: \"startAt\",\n    color: \"color\",\n    touchUi: \"touchUi\",\n    disabled: \"disabled\",\n    opened: \"opened\",\n    calendarHeaderComponent: \"calendarHeaderComponent\",\n    panelClass: \"panelClass\"\n  },\n  outputs: {\n    yearSelected: \"yearSelected\",\n    monthSelected: \"monthSelected\",\n    openedStream: \"opened\",\n    closedStream: \"closed\"\n  },\n  exportAs: [\"matDatepicker\"],\n  decls: 0,\n  vars: 0,\n  template: function MatDatepicker_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatDatepicker.ctorParameters = function () {\n  return [{\n    type: MatDialog\n  }, {\n    type: Overlay\n  }, {\n    type: NgZone\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n    }]\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nMatDatepicker.propDecorators = {\n  \"calendarHeaderComponent\": [{\n    type: Input\n  }],\n  \"startAt\": [{\n    type: Input\n  }],\n  \"startView\": [{\n    type: Input\n  }],\n  \"color\": [{\n    type: Input\n  }],\n  \"touchUi\": [{\n    type: Input\n  }],\n  \"disabled\": [{\n    type: Input\n  }],\n  \"yearSelected\": [{\n    type: Output\n  }],\n  \"monthSelected\": [{\n    type: Output\n  }],\n  \"panelClass\": [{\n    type: Input\n  }],\n  \"openedStream\": [{\n    type: Output,\n    args: ['opened']\n  }],\n  \"closedStream\": [{\n    type: Output,\n    args: ['closed']\n  }],\n  \"opened\": [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker',\n      template: '',\n      exportAs: 'matDatepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc7.MatDialog\n    }, {\n      type: ɵngcc8.Overlay\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    startView: [{\n      type: Input\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    startAt: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    touchUi: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    calendarHeaderComponent: [{\n      type: Input\n    }],\n    panelClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar\n/** @type {?} */\nMAT_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return MatDatepickerInput;\n  }),\n  multi: true\n};\nvar\n/** @type {?} */\nMAT_DATEPICKER_VALIDATORS = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(function () {\n    return MatDatepickerInput;\n  }),\n  multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\n\nvar MatDatepickerInputEvent =\n/**\n * @param {?} target\n * @param {?} targetElement\n */\nfunction MatDatepickerInputEvent(target, targetElement) {\n  _classCallCheck(this, MatDatepickerInputEvent);\n\n  this.target = target;\n  this.targetElement = targetElement;\n  this.value = this.target.value;\n};\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\n\n\nvar MatDatepickerInput = /*#__PURE__*/function () {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _dateAdapter\n   * @param {?} _dateFormats\n   * @param {?} _formField\n   */\n  function MatDatepickerInput(_elementRef, _dateAdapter, _dateFormats, _formField) {\n    var _this10 = this;\n\n    _classCallCheck(this, MatDatepickerInput);\n\n    this._elementRef = _elementRef;\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    this._formField = _formField;\n    /**\n     * Emits when a `change` event is fired on this `<input>`.\n     */\n\n    this.dateChange = new EventEmitter();\n    /**\n     * Emits when an `input` event is fired on this `<input>`.\n     */\n\n    this.dateInput = new EventEmitter();\n    /**\n     * Emits when the value changes (either due to user input or programmatic change).\n     */\n\n    this._valueChange = new EventEmitter();\n    /**\n     * Emits when the disabled state has changed\n     */\n\n    this._disabledChange = new EventEmitter();\n\n    this._onTouched = function () {};\n\n    this._cvaOnChange = function () {};\n\n    this._validatorOnChange = function () {};\n\n    this._datepickerSubscription = Subscription.EMPTY;\n    this._localeSubscription = Subscription.EMPTY;\n    /**\n     * The form control validator for whether the input parses.\n     */\n\n    this._parseValidator = function () {\n      return _this10._lastValueValid ? null : {\n        'matDatepickerParse': {\n          'text': _this10._elementRef.nativeElement.value\n        }\n      };\n    };\n    /**\n     * The form control validator for the min date.\n     */\n\n\n    this._minValidator = function (control) {\n      var\n      /** @type {?} */\n      controlValue = _this10._getValidDateOrNull(_this10._dateAdapter.deserialize(control.value));\n\n      return !_this10.min || !controlValue || _this10._dateAdapter.compareDate(_this10.min, controlValue) <= 0 ? null : {\n        'matDatepickerMin': {\n          'min': _this10.min,\n          'actual': controlValue\n        }\n      };\n    };\n    /**\n     * The form control validator for the max date.\n     */\n\n\n    this._maxValidator = function (control) {\n      var\n      /** @type {?} */\n      controlValue = _this10._getValidDateOrNull(_this10._dateAdapter.deserialize(control.value));\n\n      return !_this10.max || !controlValue || _this10._dateAdapter.compareDate(_this10.max, controlValue) >= 0 ? null : {\n        'matDatepickerMax': {\n          'max': _this10.max,\n          'actual': controlValue\n        }\n      };\n    };\n    /**\n     * The form control validator for the date filter.\n     */\n\n\n    this._filterValidator = function (control) {\n      var\n      /** @type {?} */\n      controlValue = _this10._getValidDateOrNull(_this10._dateAdapter.deserialize(control.value));\n\n      return !_this10._dateFilter || !controlValue || _this10._dateFilter(controlValue) ? null : {\n        'matDatepickerFilter': true\n      };\n    };\n    /**\n     * The combined form control validator for this input.\n     */\n\n\n    this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n    /**\n     * Whether the last value set on the input was valid.\n     */\n\n    this._lastValueValid = false;\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    } // Update the displayed date when the locale changes.\n\n\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(function () {\n      _this10.value = _this10.value;\n    });\n  }\n  /**\n   * The datepicker that this input is associated with.\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _createClass(MatDatepickerInput, [{\n    key: \"matDatepicker\",\n    set: function set(value) {\n      this.registerDatepicker(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerDatepicker\",\n    value: function registerDatepicker(value) {\n      if (value) {\n        this._datepicker = value;\n\n        this._datepicker._registerInput(this);\n      }\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker.\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"matDatepickerFilter\",\n    set: function set(value) {\n      this._dateFilter = value;\n\n      this._validatorOnChange();\n    }\n    /**\n     * The value of the input.\n     * @return {?}\n     */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      value = this._dateAdapter.deserialize(value);\n      this._lastValueValid = !value || this._dateAdapter.isValid(value);\n      value = this._getValidDateOrNull(value);\n      var\n      /** @type {?} */\n      oldDate = this.value;\n      this._value = value;\n\n      this._formatValue(value);\n\n      if (!this._dateAdapter.sameDate(oldDate, value)) {\n        this._valueChange.emit(value);\n      }\n    }\n    /**\n     * The minimum valid date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"min\",\n    get: function get() {\n      return this._min;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n      this._validatorOnChange();\n    }\n    /**\n     * The maximum valid date.\n     * @return {?}\n     */\n\n  }, {\n    key: \"max\",\n    get: function get() {\n      return this._max;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n      this._validatorOnChange();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      var\n      /** @type {?} */\n      newValue = coerceBooleanProperty(value);\n      var\n      /** @type {?} */\n      element = this._elementRef.nativeElement;\n\n      if (this._disabled !== newValue) {\n        this._disabled = newValue;\n\n        this._disabledChange.emit(newValue);\n      } // We need to null check the `blur` method, because it's undefined during SSR.\n\n\n      if (newValue && element.blur) {\n        // Normally, native input elements automatically blur if they turn disabled. This behavior\n        // is problematic, because it would mean that it triggers another change detection cycle,\n        // which then causes a changed after checked error if the input element was focused before.\n        element.blur();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this11 = this;\n\n      if (this._datepicker) {\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe(function (selected) {\n          _this11.value = selected;\n\n          _this11._cvaOnChange(selected);\n\n          _this11._onTouched();\n\n          _this11.dateInput.emit(new MatDatepickerInputEvent(_this11, _this11._elementRef.nativeElement));\n\n          _this11.dateChange.emit(new MatDatepickerInputEvent(_this11, _this11._elementRef.nativeElement));\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._datepickerSubscription.unsubscribe();\n\n      this._localeSubscription.unsubscribe();\n\n      this._valueChange.complete();\n\n      this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnValidatorChange\",\n    value: function registerOnValidatorChange(fn) {\n      this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(c) {\n      return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 7.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n\n  }, {\n    key: \"getPopupConnectionElementRef\",\n    value: function getPopupConnectionElementRef() {\n      return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n\n  }, {\n    key: \"getConnectedOverlayOrigin\",\n    value: function getConnectedOverlayOrigin() {\n      return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._cvaOnChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onKeydown\",\n    value: function _onKeydown(event) {\n      if (event.altKey && event.keyCode === DOWN_ARROW) {\n        this._datepicker.open();\n\n        event.preventDefault();\n      }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onInput\",\n    value: function _onInput(value) {\n      var\n      /** @type {?} */\n      date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n\n      this._lastValueValid = !date || this._dateAdapter.isValid(date);\n      date = this._getValidDateOrNull(date);\n\n      if (!this._dateAdapter.sameDate(date, this._value)) {\n        this._value = date;\n\n        this._cvaOnChange(date);\n\n        this._valueChange.emit(date);\n\n        this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getThemePalette\",\n    value: function _getThemePalette() {\n      return this._formField ? this._formField.color : undefined;\n    }\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onBlur\",\n    value: function _onBlur() {\n      // Reformat the input only if we have a valid value.\n      if (this.value) {\n        this._formatValue(this.value);\n      }\n\n      this._onTouched();\n    }\n    /**\n     * Formats a value and sets it on the input element.\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"_formatValue\",\n    value: function _formatValue(value) {\n      this._elementRef.nativeElement.value = value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n\n  }, {\n    key: \"_getValidDateOrNull\",\n    value: function _getValidDateOrNull(obj) {\n      return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n    }\n  }]);\n\n  return MatDatepickerInput;\n}();\n\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) {\n  return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.MatFormField, 8));\n};\n\nMatDatepickerInput.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatDatepickerInput,\n  selectors: [[\"input\", \"matDatepicker\", \"\"]],\n  hostVars: 5,\n  hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) {\n        return ctx._onInput($event.target.value);\n      })(\"change\", function MatDatepickerInput_change_HostBindingHandler() {\n        return ctx._onChange();\n      })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"aria-haspopup\", true)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    matDatepicker: \"matDatepicker\",\n    matDatepickerFilter: \"matDatepickerFilter\",\n    min: \"min\",\n    max: \"max\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    dateChange: \"dateChange\",\n    dateInput: \"dateInput\"\n  },\n  exportAs: [\"matDatepickerInput\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {\n    provide: MAT_INPUT_VALUE_ACCESSOR,\n    useExisting: MatDatepickerInput\n  }])]\n});\n/** @nocollapse */\n\nMatDatepickerInput.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }, {\n    type: MatFormField,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nMatDatepickerInput.propDecorators = {\n  \"matDatepicker\": [{\n    type: Input\n  }],\n  \"matDatepickerFilter\": [{\n    type: Input\n  }],\n  \"value\": [{\n    type: Input\n  }],\n  \"min\": [{\n    type: Input\n  }],\n  \"max\": [{\n    type: Input\n  }],\n  \"disabled\": [{\n    type: Input\n  }],\n  \"dateChange\": [{\n    type: Output\n  }],\n  \"dateInput\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matDatepicker]',\n      providers: [MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {\n        provide: MAT_INPUT_VALUE_ACCESSOR,\n        useExisting: MatDatepickerInput\n      }],\n      host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': '_onInput($event.target.value)',\n        '(change)': '_onChange()',\n        '(blur)': '_onBlur()',\n        '(keydown)': '_onKeydown($event)'\n      },\n      exportAs: 'matDatepickerInput'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc9.MatFormField,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    dateChange: [{\n      type: Output\n    }],\n    dateInput: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    matDatepicker: [{\n      type: Input\n    }],\n    matDatepickerFilter: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\n\n\nvar MatDatepickerToggleIcon = function MatDatepickerToggleIcon() {\n  _classCallCheck(this, MatDatepickerToggleIcon);\n};\n\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) {\n  return new (t || MatDatepickerToggleIcon)();\n};\n\nMatDatepickerToggleIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatDatepickerToggleIcon,\n  selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n    type: Directive,\n    args: [{\n      selector: '[matDatepickerToggleIcon]'\n    }]\n  }], null, null);\n})();\n/**\n * @template D\n */\n\n\nvar MatDatepickerToggle = /*#__PURE__*/function () {\n  /**\n   * @param {?} _intl\n   * @param {?} _changeDetectorRef\n   */\n  function MatDatepickerToggle(_intl, _changeDetectorRef) {\n    _classCallCheck(this, MatDatepickerToggle);\n\n    this._intl = _intl;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._stateChanges = Subscription.EMPTY;\n  }\n  /**\n   * Whether the toggle button is disabled.\n   * @return {?}\n   */\n\n\n  _createClass(MatDatepickerToggle, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes[\"datepicker\"]) {\n        this._watchStateChanges();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_open\",\n    value: function _open(event) {\n      if (this.datepicker && !this.disabled) {\n        this.datepicker.open();\n        event.stopPropagation();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_watchStateChanges\",\n    value: function _watchStateChanges() {\n      var _this12 = this;\n\n      var\n      /** @type {?} */\n      datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n      var\n      /** @type {?} */\n      inputDisabled = this.datepicker && this.datepicker._datepickerInput ? this.datepicker._datepickerInput._disabledChange : of();\n      var\n      /** @type {?} */\n      datepickerToggled = this.datepicker ? merge(this.datepicker.openedStream, this.datepicker.closedStream) : of();\n\n      this._stateChanges.unsubscribe();\n\n      this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe(function () {\n        return _this12._changeDetectorRef.markForCheck();\n      });\n    }\n  }]);\n\n  return MatDatepickerToggle;\n}();\n\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) {\n  return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatDatepickerToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepickerToggle,\n  selectors: [[\"mat-datepicker-toggle\"]],\n  contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-datepicker-toggle\"],\n  hostVars: 6,\n  hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    datepicker: [\"for\", \"datepicker\"]\n  },\n  exportAs: [\"matDatepickerToggle\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 3,\n  vars: 3,\n  consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", \"aria-haspopup\", \"true\", 3, \"disabled\", \"click\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M0 0h24v24H0z\", \"fill\", \"none\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]],\n  template: function MatDatepickerToggle_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) {\n        return ctx._open($event);\n      });\n      ɵngcc0.ɵɵtemplate(1, MatDatepickerToggle__svg_svg_1_Template, 3, 0, \"svg\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.openCalendarLabel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    }\n  },\n  directives: [ɵngcc4.MatButton, ɵngcc1.NgIf],\n  styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatDatepickerToggle.ctorParameters = function () {\n  return [{\n    type: MatDatepickerIntl\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nMatDatepickerToggle.propDecorators = {\n  \"datepicker\": [{\n    type: Input,\n    args: ['for']\n  }],\n  \"disabled\": [{\n    type: Input\n  }],\n  \"_customIcon\": [{\n    type: ContentChild,\n    args: [MatDatepickerToggleIcon]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker-toggle',\n      template: \"<button mat-icon-button type=\\\"button\\\" aria-haspopup=\\\"true\\\" [attr.aria-label]=\\\"_intl.openCalendarLabel\\\" [disabled]=\\\"disabled\\\" (click)=\\\"_open($event)\\\"><svg *ngIf=\\\"!_customIcon\\\" class=\\\"mat-datepicker-toggle-default-icon\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" fill=\\\"currentColor\\\" focusable=\\\"false\\\"><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/><path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/></svg><ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content></button>\",\n      styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"],\n      host: {\n        'class': 'mat-datepicker-toggle',\n        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n        '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n        '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"'\n      },\n      exportAs: 'matDatepickerToggle',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerIntl\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    datepicker: [{\n      type: Input,\n      args: ['for']\n    }],\n    _customIcon: [{\n      type: ContentChild,\n      args: [MatDatepickerToggleIcon]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar MatDatepickerModule = function MatDatepickerModule() {\n  _classCallCheck(this, MatDatepickerModule);\n};\n\nMatDatepickerModule.ɵfac = function MatDatepickerModule_Factory(t) {\n  return new (t || MatDatepickerModule)();\n};\n\nMatDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatDatepickerModule\n});\nMatDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [[CommonModule, MatButtonModule, MatDialogModule, OverlayModule, A11yModule, PortalModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, {\n    declarations: function declarations() {\n      return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader];\n    },\n    imports: function imports() {\n      return [CommonModule, MatButtonModule, MatDialogModule, OverlayModule, A11yModule, PortalModule];\n    },\n    exports: function exports() {\n      return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatButtonModule, MatDialogModule, OverlayModule, A11yModule, PortalModule],\n      exports: [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader],\n      declarations: [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader],\n      providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n      entryComponents: [MatDatepickerContent, MatCalendarHeader]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport { MatDatepickerModule, MatCalendarHeader, MatCalendar, MatCalendarCell, MatCalendarBody, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MatDatepickerContentBase, _MatDatepickerContentMixinBase, MatDatepickerContent, MatDatepicker, matDatepickerAnimations, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, MatDatepickerInputEvent, MatDatepickerInput, MatDatepickerIntl, MatDatepickerToggleIcon, MatDatepickerToggle, MatMonthView, MatYearView, MatMultiYearView as ɵa34 }; //# sourceMappingURL=datepicker.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/@angular/material/__ivy_ngcc__/esm2015/datepicker.js"],"names":["Injectable","NgModule","ChangeDetectionStrategy","ChangeDetectorRef","Component","EventEmitter","forwardRef","Inject","Input","Optional","Output","ViewChild","ViewEncapsulation","ElementRef","NgZone","InjectionToken","ViewContainerRef","Directive","ContentChild","defineInjectable","Subject","merge","Subscription","of","take","filter","DOWN_ARROW","END","ENTER","HOME","LEFT_ARROW","PAGE_DOWN","PAGE_UP","RIGHT_ARROW","UP_ARROW","ESCAPE","DateAdapter","MAT_DATE_FORMATS","mixinColor","Directionality","ComponentPortal","PortalModule","animate","state","style","transition","trigger","group","query","animateChild","coerceBooleanProperty","Overlay","OverlayConfig","OverlayModule","DOCUMENT","CommonModule","MatDialog","MatDialogModule","NG_VALIDATORS","NG_VALUE_ACCESSOR","Validators","MatFormField","MAT_INPUT_VALUE_ACCESSOR","A11yModule","MatButtonModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","ɵngcc6","ɵngcc7","ɵngcc8","ɵngcc9","_c0","MatCalendarBody_tr_0_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵstyleProp","cellAspectRatio","numCols","ɵɵattribute","ɵɵtextInterpolate","label","MatCalendarBody_tr_1_td_1_Template","ctx_r4","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r9","ɵɵgetCurrentView","ɵɵlistener","MatCalendarBody_tr_1_td_2_Template_td_click_0_listener","ɵɵrestoreView","item_r6","$implicit","ctx_r8","_cellClicked","colIndex_r7","index","rowIndex_r3","ctx_r5","ɵɵclassProp","enabled","_isActiveCell","ɵɵproperty","ariaLabel","selectedValue","value","todayValue","displayValue","MatCalendarBody_tr_1_Template","ɵɵtemplate","row_r2","ctx_r1","MatMonthView_th_3_Template","day_r1","long","narrow","MatCalendar_ng_template_0_Template","MatCalendar_mat_month_view_2_Template","_r5","MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener","$event","activeDate","MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener","ctx_r6","_dateSelected","MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener","ctx_r7","_userSelected","selected","dateFilter","maxDate","minDate","MatCalendar_mat_year_view_3_Template","MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener","MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener","ctx_r10","_monthSelectedInYearView","MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener","ctx_r11","_goToDateInView","ctx_r2","MatCalendar_mat_multi_year_view_4_Template","_r13","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener","ctx_r12","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener","ctx_r14","_yearSelectedInMultiYearView","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener","ctx_r15","ctx_r3","MatDatepickerToggle__svg_svg_1_Template","ɵɵnamespaceSVG","ɵɵelement","_c1","_c2","createMissingDateImplError","provider","Error","MatDatepickerIntl","changes","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","ɵfac","MatDatepickerIntl_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngInjectableDef","ngDevMode","ɵsetClassMetadata","type","args","MatCalendarCell","MatCalendarBody","_elementRef","_ngZone","allowDisabledSelection","activeCell","selectedValueChange","cell","emit","rows","length","rowIndex","colIndex","cellNumber","runOutsideAngular","onStable","asObservable","pipe","subscribe","nativeElement","querySelector","focus","MatCalendarBody_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","inputs","outputs","exportAs","attrs","decls","vars","consts","template","MatCalendarBody_Template","directives","NgIf","NgForOf","styles","encapsulation","changeDetection","ctorParameters","propDecorators","selector","host","None","OnPush","DAYS_PER_WEEK","MatMonthView","_changeDetectorRef","_dateFormats","_dateAdapter","_dir","selectedChange","_userSelection","activeDateChange","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","map","i","_weekdays","slice","concat","_activeDate","today","oldActiveDate","validDate","_getValidDateOrNull","deserialize","clampDate","_hasSameMonthAndYear","_init","_selected","_selectedDate","_getDateInCurrentMonth","_minDate","_maxDate","date","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","event","isRtl","_isRtl","keyCode","addCalendarDays","getDate","getNumDaysInMonth","altKey","addCalendarYears","addCalendarMonths","preventDefault","compareDate","_focusActiveCell","_todayDate","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","_createWeekCells","markForCheck","_matCalendarBody","daysInMonth","dateNames","getDateNames","_weeks","push","_shouldEnableDate","format","display","dateA11yLabel","d1","d2","obj","isDateInstance","isValid","MatMonthView_Factory","viewQuery","MatMonthView_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","MatMonthView_Template","MatMonthView_Template_tbody_selectedValueChange_6_listener","MatMonthView_Template_tbody_keydown_6_listener","_handleCalendarBodyKeydown","undefined","decorators","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","Math","floor","_selectedYear","_todayYear","activeYear","activeOffset","_years","row","year","_createCellForYear","month","min","_yearSelected","yearName","getYearName","_shouldEnableYear","firstOfYear","MatMultiYearView_Factory","MatMultiYearView_Query","MatMultiYearView_Template","MatMultiYearView_Template_tbody_selectedValueChange_4_listener","MatMultiYearView_Template_tbody_keydown_4_listener","_getActiveCell","MatYearView","monthSelected","_selectedMonth","_getMonthInCurrentYear","normalizedDate","_monthSelected","_todayMonth","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","MatYearView_Factory","MatYearView_Query","MatYearView_Template","MatYearView_Template_tbody_selectedValueChange_4_listener","MatYearView_Template_tbody_keydown_4_listener","MatCalendarHeader","_intl","calendar","changeDetectorRef","stateChanges","currentView","monthYearLabel","firstYearInView","lastYearInView","_isSameView","date1","date2","MatCalendarHeader_Factory","MatCalendar","MatCalendarHeader_Template","MatCalendarHeader_Template_button_click_2_listener","currentPeriodClicked","MatCalendarHeader_Template_button_click_6_listener","previousClicked","MatCalendarHeader_Template_button_click_7_listener","nextClicked","periodButtonLabel","periodButtonText","previousEnabled","prevButtonLabel","nextEnabled","nextButtonLabel","MatButton","CdkAriaLive","_moveFocusOnNextTick","startView","_intlChanges","next","_startAt","_clampedActiveDate","_currentView","_calendarHeaderPortal","headerComponent","startAt","focusActiveCell","unsubscribe","complete","change","firstChange","view","_getCurrentViewComponent","detectChanges","sameDate","normalizedYear","normalizedMonth","monthView","yearView","multiYearView","MatCalendar_Factory","MatCalendar_Query","features","ɵɵNgOnChangesFeature","MatCalendar_Template","CdkPortalOutlet","CdkMonitorFocus","NgSwitch","NgSwitchCase","matDatepickerAnimations","transformPanel","opacity","transform","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","useFactory","MatDatepickerContentBase","_MatDatepickerContentMixinBase","MatDatepickerContent","elementRef","_calendar","MatDatepickerContent_Factory","MatDatepickerContent_Query","hostVars","hostBindings","MatDatepickerContent_HostBindings","ɵɵsyntheticHostProperty","datepicker","touchUi","color","ɵɵInheritDefinitionFeature","MatDatepickerContent_Template","MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener","_select","MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener","_selectYear","MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener","_selectMonth","MatDatepickerContent_Template_mat_calendar__userSelection_0_listener","close","id","panelClass","_dateFilter","calendarHeaderComponent","CdkTrapFocus","NgClass","data","animation","animations","MatDatepicker","_dialog","_overlay","_viewContainerRef","_scrollStrategy","_document","_touchUi","openedStream","closedStream","_opened","_validSelected","_focusedElementBeforeOpen","_inputSubscription","EMPTY","_disabledChange","_selectedChanged","_datepickerInput","_color","_getThemePalette","_disabled","disabled","newValue","open","max","_popupRef","dispose","_popupComponentRef","oldValue","input","_valueChange","activeElement","_openAsDialog","_openAsPopup","hasAttached","detach","_dialogRef","_calendarPortal","isAttached","completeClose","setTimeout","direction","viewContainerRef","afterClosed","componentInstance","_setColor","_createPopup","attach","instance","updatePosition","overlayConfig","positionStrategy","_createPopupPositionStrategy","hasBackdrop","backdropClass","scrollStrategy","create","overlayElement","setAttribute","backdropClick","detachments","keydownEvents","position","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPush","withPositions","originX","originY","overlayX","overlayY","MatDatepicker_Factory","opened","MatDatepicker_Template","MAT_DATEPICKER_VALUE_ACCESSOR","useExisting","MatDatepickerInput","multi","MAT_DATEPICKER_VALIDATORS","MatDatepickerInputEvent","target","targetElement","_formField","dateChange","dateInput","_onTouched","_cvaOnChange","_validatorOnChange","_datepickerSubscription","_localeSubscription","_parseValidator","_lastValueValid","_minValidator","control","controlValue","_maxValidator","_filterValidator","_validator","compose","localeChanges","registerDatepicker","_datepicker","_registerInput","_value","oldDate","_formatValue","_min","_max","element","blur","fn","c","isDisabled","parse","MatDatepickerInput_Factory","ɵdir","ɵɵdefineDirective","MatDatepickerInput_HostBindings","MatDatepickerInput_input_HostBindingHandler","_onInput","MatDatepickerInput_change_HostBindingHandler","_onChange","MatDatepickerInput_blur_HostBindingHandler","_onBlur","MatDatepickerInput_keydown_HostBindingHandler","_onKeydown","ɵɵhostProperty","toIso8601","matDatepicker","matDatepickerFilter","ɵɵProvidersFeature","providers","MatDatepickerToggleIcon","MatDatepickerToggleIcon_Factory","MatDatepickerToggle","_stateChanges","_watchStateChanges","stopPropagation","datepickerDisabled","inputDisabled","datepickerToggled","MatDatepickerToggle_Factory","contentQueries","MatDatepickerToggle_ContentQueries","dirIndex","ɵɵcontentQuery","_customIcon","MatDatepickerToggle_HostBindings","ngContentSelectors","MatDatepickerToggle_Template","ɵɵprojectionDef","MatDatepickerToggle_Template_button_click_0_listener","_open","ɵɵprojection","MatDatepickerModule","MatDatepickerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","entryComponents","ɵa34"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, ElementRef, NgZone, InjectionToken, ViewContainerRef, Directive, ContentChild, defineInjectable } from '@angular/core';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { take, filter } from 'rxjs/operators';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { animate, state, style, transition, trigger, group, query, animateChild } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { MatButtonModule } from '@angular/material/button';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", 50 * ctx_r0.cellAspectRatio / ctx_r0.numCols, \"%\")(\"padding-bottom\", 50 * ctx_r0.cellAspectRatio / ctx_r0.numCols, \"%\");\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.label);\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", 50 * ctx_r4.cellAspectRatio / ctx_r4.numCols, \"%\")(\"padding-bottom\", 50 * ctx_r4.cellAspectRatio / ctx_r4.numCols, \"%\");\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const item_r6 = ctx.$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8._cellClicked(item_r6); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const colIndex_r7 = ctx.index;\n    const rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", 100 / ctx_r5.numCols, \"%\")(\"padding-top\", 50 * ctx_r5.cellAspectRatio / ctx_r5.numCols, \"%\")(\"padding-bottom\", 50 * ctx_r5.cellAspectRatio / ctx_r5.numCols, \"%\");\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7));\n    ɵngcc0.ɵɵproperty(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5.selectedValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5.selectedValue === item_r6.value)(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r6.displayValue);\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 19, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const rowIndex_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n} }\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.activeDate = $event; })(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._dateSelected($event); })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._userSelected(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.activeDate = $event; })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._monthSelectedInYearView($event); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.activeDate = $event; })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14._yearSelectedInMultiYearView($event); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate);\n} }\nfunction MatDatepickerToggle__svg_svg_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 2);\n    ɵngcc0.ɵɵelement(1, \"path\", 3);\n    ɵngcc0.ɵɵelement(2, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c2 = [\"[matDatepickerToggleIcon]\"];\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\nMatDatepickerIntl.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDatepickerIntl, factory: MatDatepickerIntl.ɵfac, providedIn: 'root' });\n/** @nocollapse */ MatDatepickerIntl.ngInjectableDef = defineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass MatCalendarCell {\n    /**\n     * @param {?} value\n     * @param {?} displayValue\n     * @param {?} ariaLabel\n     * @param {?} enabled\n     */\n    constructor(value, displayValue, ariaLabel, enabled) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass MatCalendarBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * Whether to allow selection of disabled cells.\n         */\n        this.allowDisabledSelection = false;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    _cellClicked(cell) {\n        if (!this.allowDisabledSelection && !cell.enabled) {\n            return;\n        }\n        this.selectedValueChange.emit(cell.value);\n    }\n    /**\n     * The number of blank cells to put at the beginning for the first row.\n     * @return {?}\n     */\n    get _firstRowOffset() {\n        return this.rows && this.rows.length && this.rows[0].length ?\n            this.numCols - this.rows[0].length : 0;\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    _isActiveCell(rowIndex, colIndex) {\n        let /** @type {?} */ cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this._elementRef.nativeElement.querySelector('.mat-calendar-body-active').focus();\n            });\n        });\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [\"role\", \"grid\", \"attr.aria-readonly\", \"true\", 1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", allowDisabledSelection: \"allowDisabledSelection\", activeCell: \"activeCell\", cellAspectRatio: \"cellAspectRatio\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", selectedValue: \"selectedValue\", labelMinRequiredCells: \"labelMinRequiredCells\" }, outputs: { selectedValueChange: \"selectedValueChange\" }, exportAs: [\"matCalendarBody\"], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", 3, \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", 3, \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media screen and (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media screen and (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: NgZone, },\n];\nMatCalendarBody.propDecorators = {\n    \"label\": [{ type: Input },],\n    \"rows\": [{ type: Input },],\n    \"todayValue\": [{ type: Input },],\n    \"selectedValue\": [{ type: Input },],\n    \"labelMinRequiredCells\": [{ type: Input },],\n    \"numCols\": [{ type: Input },],\n    \"allowDisabledSelection\": [{ type: Input },],\n    \"activeCell\": [{ type: Input },],\n    \"cellAspectRatio\": [{ type: Input },],\n    \"selectedValueChange\": [{ type: Output },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{ selector: '[mat-calendar-body]',\n                template: \"<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\"><td class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"numCols\\\" [style.paddingTop.%]=\\\"50 * cellAspectRatio / numCols\\\" [style.paddingBottom.%]=\\\"50 * cellAspectRatio / numCols\\\">{{label}}</td></tr><tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\"><td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\" aria-hidden=\\\"true\\\" class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"_firstRowOffset\\\" [style.paddingTop.%]=\\\"50 * cellAspectRatio / numCols\\\" [style.paddingBottom.%]=\\\"50 * cellAspectRatio / numCols\\\">{{_firstRowOffset >= labelMinRequiredCells ? label : ''}}</td><td *ngFor=\\\"let item of row; let colIndex = index\\\" role=\\\"gridcell\\\" class=\\\"mat-calendar-body-cell\\\" [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\" [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\" [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\" [attr.aria-label]=\\\"item.ariaLabel\\\" [attr.aria-disabled]=\\\"!item.enabled || null\\\" [attr.aria-selected]=\\\"selectedValue === item.value\\\" (click)=\\\"_cellClicked(item)\\\" [style.width.%]=\\\"100 / numCols\\\" [style.paddingTop.%]=\\\"50 * cellAspectRatio / numCols\\\" [style.paddingBottom.%]=\\\"50 * cellAspectRatio / numCols\\\"><div class=\\\"mat-calendar-body-cell-content\\\" [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\" [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">{{item.displayValue}}</div></td></tr>\",\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media screen and (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media screen and (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"],\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'attr.aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], allowDisabledSelection: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], selectedValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMonthView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        const /** @type {?} */ firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const /** @type {?} */ narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        const /** @type {?} */ longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        let /** @type {?} */ weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        const /** @type {?} */ oldActiveDate = this._activeDate;\n        const /** @type {?} */ validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (this._selectedDate != date) {\n            const /** @type {?} */ selectedYear = this._dateAdapter.getYear(this.activeDate);\n            const /** @type {?} */ selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            const /** @type {?} */ selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const /** @type {?} */ oldActiveDate = this._activeDate;\n        const /** @type {?} */ isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        let /** @type {?} */ firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @return {?}\n     */\n    _createWeekCells() {\n        const /** @type {?} */ daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const /** @type {?} */ dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let /** @type {?} */ i = 0, /** @type {?} */ cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const /** @type {?} */ date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            const /** @type {?} */ enabled = this._shouldEnableDate(date);\n            const /** @type {?} */ ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\n        }\n    }\n    /**\n     * Date filter for the month\n     * @param {?} date\n     * @return {?}\n     */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @param {?} date\n     * @return {?}\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMonthView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], decls: 7, vars: 7, consts: [[1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] },] },\n    { type: DateAdapter, decorators: [{ type: Optional },] },\n    { type: Directionality, decorators: [{ type: Optional },] },\n];\nMatMonthView.propDecorators = {\n    \"activeDate\": [{ type: Input },],\n    \"selected\": [{ type: Input },],\n    \"minDate\": [{ type: Input },],\n    \"maxDate\": [{ type: Input },],\n    \"dateFilter\": [{ type: Input },],\n    \"selectedChange\": [{ type: Output },],\n    \"_userSelection\": [{ type: Output },],\n    \"activeDateChange\": [{ type: Output },],\n    \"_matCalendarBody\": [{ type: ViewChild, args: [MatCalendarBody,] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{ selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th></tr><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_monthLabel\\\" [rows]=\\\"_weeks\\\" [todayValue]=\\\"_todayDate\\\" [selectedValue]=\\\"_selectedDate\\\" [labelMinRequiredCells]=\\\"3\\\" [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\" (selectedValueChange)=\\\"_dateSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ yearsPerPage = 24;\nconst /** @type {?} */ yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMultiYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this multi-year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        let /** @type {?} */ oldActiveDate = this._activeDate;\n        const /** @type {?} */ validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (Math.floor(this._dateAdapter.getYear(oldActiveDate) / yearsPerPage) !=\n            Math.floor(this._dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        let /** @type {?} */ activeYear = this._dateAdapter.getYear(this._activeDate);\n        let /** @type {?} */ activeOffset = activeYear % yearsPerPage;\n        this._years = [];\n        for (let /** @type {?} */ i = 0, /** @type {?} */ row = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    _yearSelected(year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        let /** @type {?} */ month = this._dateAdapter.getMonth(this.activeDate);\n        let /** @type {?} */ daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const /** @type {?} */ oldActiveDate = this._activeDate;\n        const /** @type {?} */ isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -this._dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - this._dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _getActiveCell() {\n        return this._dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @param {?} year\n     * @return {?}\n     */\n    _createCellForYear(year) {\n        let /** @type {?} */ yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @param {?} year\n     * @return {?}\n     */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const /** @type {?} */ firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let /** @type {?} */ date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 6, consts: [[1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", \"allowDisabledSelection\", \"true\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef, },\n    { type: DateAdapter, decorators: [{ type: Optional },] },\n    { type: Directionality, decorators: [{ type: Optional },] },\n];\nMatMultiYearView.propDecorators = {\n    \"activeDate\": [{ type: Input },],\n    \"selected\": [{ type: Input },],\n    \"minDate\": [{ type: Input },],\n    \"maxDate\": [{ type: Input },],\n    \"dateFilter\": [{ type: Input },],\n    \"selectedChange\": [{ type: Output },],\n    \"yearSelected\": [{ type: Output },],\n    \"activeDateChange\": [{ type: Output },],\n    \"_matCalendarBody\": [{ type: ViewChild, args: [MatCalendarBody,] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{ selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body allowDisabledSelection=\\\"true\\\" [rows]=\\\"_years\\\" [todayValue]=\\\"_todayYear\\\" [selectedValue]=\\\"_selectedYear\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_getActiveCell()\\\" (selectedValueChange)=\\\"_yearSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        let /** @type {?} */ oldActiveDate = this._activeDate;\n        const /** @type {?} */ validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    _monthSelected(month) {\n        const /** @type {?} */ normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        const /** @type {?} */ daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const /** @type {?} */ oldActiveDate = this._activeDate;\n        const /** @type {?} */ isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        let /** @type {?} */ monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @param {?} date\n     * @return {?}\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    _createCellForMonth(month, monthName) {\n        let /** @type {?} */ ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @param {?} month\n     * @return {?}\n     */\n    _shouldEnableMonth(month) {\n        const /** @type {?} */ activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        const /** @type {?} */ firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let /** @type {?} */ date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            const /** @type {?} */ maxYear = this._dateAdapter.getYear(this.maxDate);\n            const /** @type {?} */ maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            const /** @type {?} */ minYear = this._dateAdapter.getYear(this.minDate);\n            const /** @type {?} */ minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 8, consts: [[1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", \"allowDisabledSelection\", \"true\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] },] },\n    { type: DateAdapter, decorators: [{ type: Optional },] },\n    { type: Directionality, decorators: [{ type: Optional },] },\n];\nMatYearView.propDecorators = {\n    \"activeDate\": [{ type: Input },],\n    \"selected\": [{ type: Input },],\n    \"minDate\": [{ type: Input },],\n    \"maxDate\": [{ type: Input },],\n    \"dateFilter\": [{ type: Input },],\n    \"selectedChange\": [{ type: Output },],\n    \"monthSelected\": [{ type: Output },],\n    \"activeDateChange\": [{ type: Output },],\n    \"_matCalendarBody\": [{ type: ViewChild, args: [MatCalendarBody,] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{ selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body allowDisabledSelection=\\\"true\\\" [label]=\\\"_yearLabel\\\" [rows]=\\\"_months\\\" [todayValue]=\\\"_todayMonth\\\" [selectedValue]=\\\"_selectedMonth\\\" [labelMinRequiredCells]=\\\"2\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\" (selectedValueChange)=\\\"_monthSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nclass MatCalendarHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} calendar\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /**\n     * The label for the current calendar view.\n     * @return {?}\n     */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        const /** @type {?} */ activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        const /** @type {?} */ firstYearInView = this._dateAdapter.getYearName(this._dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        const /** @type {?} */ lastYearInView = this._dateAdapter.getYearName(this._dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n    /**\n     * @return {?}\n     */\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the the previous button.\n     * @return {?}\n     */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * The label for the the next button.\n     * @return {?}\n     */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this._dateAdapter.getYear(date1) / yearsPerPage) ==\n            Math.floor(this._dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatCalendar)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], decls: 8, vars: 8, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(6, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_6_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl, },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef(() => MatCalendar),] },] },\n    { type: DateAdapter, decorators: [{ type: Optional },] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] },] },\n    { type: ChangeDetectorRef, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\"><div class=\\\"mat-calendar-controls\\\"><button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\" (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\" cdkAriaLive=\\\"polite\\\">{{periodButtonText}}<div class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div></button><div class=\\\"mat-calendar-spacer\\\"></div><button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\" [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\" [attr.aria-label]=\\\"prevButtonLabel\\\"></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\" [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\" [attr.aria-label]=\\\"nextButtonLabel\\\"></button></div></div>\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatCalendar)]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatCalendar {\n    /**\n     * @param {?} _intl\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * A date representing the period (month or year) to start the calendar in.\n     * @return {?}\n     */\n    get startAt() { return this._startAt; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the calendar is in month view.\n     * @return {?}\n     */\n    get currentView() { return this._currentView; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        const /** @type {?} */ change = changes[\"minDate\"] || changes[\"maxDate\"] || changes[\"dateFilter\"];\n        if (change && !change.firstChange) {\n            const /** @type {?} */ view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell();\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (!this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n    _userSelected() {\n        this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @return {?}\n     */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, 1);\n        ɵngcc0.ɵɵviewQuery(MatYearView, 1);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 5, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView, MatYearView, MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl, },\n    { type: DateAdapter, decorators: [{ type: Optional },] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] },] },\n    { type: ChangeDetectorRef, },\n];\nMatCalendar.propDecorators = {\n    \"headerComponent\": [{ type: Input },],\n    \"startAt\": [{ type: Input },],\n    \"startView\": [{ type: Input },],\n    \"selected\": [{ type: Input },],\n    \"minDate\": [{ type: Input },],\n    \"maxDate\": [{ type: Input },],\n    \"dateFilter\": [{ type: Input },],\n    \"selectedChange\": [{ type: Output },],\n    \"yearSelected\": [{ type: Output },],\n    \"monthSelected\": [{ type: Output },],\n    \"_userSelection\": [{ type: Output },],\n    \"monthView\": [{ type: ViewChild, args: [MatMonthView,] },],\n    \"yearView\": [{ type: ViewChild, args: [MatYearView,] },],\n    \"multiYearView\": [{ type: ViewChild, args: [MatMultiYearView,] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{ selector: 'mat-calendar',\n                template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template><div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\"><mat-month-view *ngSwitchCase=\\\"'month'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (selectedChange)=\\\"_dateSelected($event)\\\" (_userSelection)=\\\"_userSelected()\\\"></mat-month-view><mat-year-view *ngSwitchCase=\\\"'year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (monthSelected)=\\\"_monthSelectedInYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view><mat-multi-year-view *ngSwitchCase=\\\"'multi-year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view></div>\",\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"],\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n */\nconst /** @type {?} */ matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({ opacity: 0, transform: 'scale(1, 0)' })),\n        state('enter', style({ opacity: 1, transform: 'scale(1, 1)' })),\n        transition('void => enter', group([\n            query('@fadeInCalendar', animateChild()),\n            animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        transition('void => *', animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n */\nlet /** @type {?} */ datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n */\nconst /** @type {?} */ MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n */\nconst /** @type {?} */ MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * \\@docs-private\n */\nclass MatDatepickerContentBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst /** @type {?} */ _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super(elementRef);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._calendar.focusActiveCell();\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatDatepickerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transformPanel\", \"enter\");\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 10, consts: [[\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", 0);\n        ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) { return ctx.datepicker._select($event); })(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) { return ctx.datepicker._selectMonth($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener() { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"@fadeInCalendar\", \"enter\");\n    } }, directives: [MatCalendar, ɵngcc5.CdkTrapFocus, ɵngcc1.NgClass], styles: [\".mat-datepicker-content{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);display:block;border-radius:2px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12);display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef, },\n];\nMatDatepickerContent.propDecorators = {\n    \"_calendar\": [{ type: ViewChild, args: [MatCalendar,] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker-content',\n                template: \"<mat-calendar cdkTrapFocus [id]=\\\"datepicker.id\\\" [ngClass]=\\\"datepicker.panelClass\\\" [startAt]=\\\"datepicker.startAt\\\" [startView]=\\\"datepicker.startView\\\" [minDate]=\\\"datepicker._minDate\\\" [maxDate]=\\\"datepicker._maxDate\\\" [dateFilter]=\\\"datepicker._dateFilter\\\" [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\" [selected]=\\\"datepicker._selected\\\" [@fadeInCalendar]=\\\"'enter'\\\" (selectedChange)=\\\"datepicker._select($event)\\\" (yearSelected)=\\\"datepicker._selectYear($event)\\\" (monthSelected)=\\\"datepicker._selectMonth($event)\\\" (_userSelection)=\\\"datepicker.close()\\\"></mat-calendar>\",\n                styles: [\".mat-datepicker-content{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);display:block;border-radius:2px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12);display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"],\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '\"enter\"',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar]\n        }] }); })();\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass MatDatepicker {\n    /**\n     * @param {?} _dialog\n     * @param {?} _overlay\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} _scrollStrategy\n     * @param {?} _dateAdapter\n     * @param {?} _dir\n     * @param {?} _document\n     */\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, _scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._scrollStrategy = _scrollStrategy;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        this._touchUi = false;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * The id for the datepicker calendar.\n         */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        /**\n         * Emits new selected date when selected date changes.\n         */\n        this._selectedChanged = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n    }\n    /**\n     * The date to open the calendar to initially.\n     * @return {?}\n     */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Color palette to use on the datepicker's calendar.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     * @return {?}\n     */\n    get touchUi() { return this._touchUi; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        const /** @type {?} */ newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { value ? this.open() : this.close(); }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get _selected() { return this._validSelected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _selected(value) { this._validSelected = value; }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get _minDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get _maxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * @return {?}\n     */\n    get _dateFilter() {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupComponentRef = null;\n        }\n    }\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    _select(date) {\n        let /** @type {?} */ oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    }\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    _registerInput(input) {\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((value) => this._selected = value);\n    }\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupRef && this._popupRef.hasAttached()) {\n            this._popupRef.detach();\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        if (this._calendarPortal && this._calendarPortal.isAttached) {\n            this._calendarPortal.detach();\n        }\n        const /** @type {?} */ completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        };\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /**\n     * Open the calendar as a dialog.\n     * @return {?}\n     */\n    _openAsDialog() {\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n        });\n        this._dialogRef.afterClosed().subscribe(() => this.close());\n        this._dialogRef.componentInstance.datepicker = this;\n        this._setColor();\n    }\n    /**\n     * Open the calendar as a popup.\n     * @return {?}\n     */\n    _openAsPopup() {\n        if (!this._calendarPortal) {\n            this._calendarPortal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        }\n        if (!this._popupRef) {\n            this._createPopup();\n        }\n        if (!this._popupRef.hasAttached()) {\n            this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n            this._popupComponentRef.instance.datepicker = this;\n            this._setColor();\n            // Update the position once the calendar has rendered.\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this._popupRef.updatePosition();\n            });\n        }\n    }\n    /**\n     * Create the popup.\n     * @return {?}\n     */\n    _createPopup() {\n        const /** @type {?} */ overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        }))).subscribe(() => this.close());\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @return {?}\n     */\n    _createPopupPositionStrategy() {\n        return this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withPush(false)\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            }\n        ]);\n    }\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Passes the current theme color along to the calendar overlay.\n     * @return {?}\n     */\n    _setColor() {\n        const /** @type {?} */ color = this.color;\n        if (this._popupComponentRef) {\n            this._popupComponentRef.instance.color = color;\n        }\n        if (this._dialogRef) {\n            this._dialogRef.componentInstance.color = color;\n        }\n    }\n}\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) { return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], inputs: { startView: \"startView\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", panelClass: \"panelClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", openedStream: \"opened\", closedStream: \"closed\" }, exportAs: [\"matDatepicker\"], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepicker.ctorParameters = () => [\n    { type: MatDialog, },\n    { type: Overlay, },\n    { type: NgZone, },\n    { type: ViewContainerRef, },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] },] },\n    { type: DateAdapter, decorators: [{ type: Optional },] },\n    { type: Directionality, decorators: [{ type: Optional },] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] },] },\n];\nMatDatepicker.propDecorators = {\n    \"calendarHeaderComponent\": [{ type: Input },],\n    \"startAt\": [{ type: Input },],\n    \"startView\": [{ type: Input },],\n    \"color\": [{ type: Input },],\n    \"touchUi\": [{ type: Input },],\n    \"disabled\": [{ type: Input },],\n    \"yearSelected\": [{ type: Output },],\n    \"monthSelected\": [{ type: Output },],\n    \"panelClass\": [{ type: Input },],\n    \"openedStream\": [{ type: Output, args: ['opened',] },],\n    \"closedStream\": [{ type: Output, args: ['closed',] },],\n    \"opened\": [{ type: Input },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None }]\n    }], function () { return [{ type: ɵngcc7.MatDialog }, { type: ɵngcc8.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { startView: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\nconst /** @type {?} */ MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nclass MatDatepickerInputEvent {\n    /**\n     * @param {?} target\n     * @param {?} targetElement\n     */\n    constructor(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nclass MatDatepickerInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _formField\n     */\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = () => { };\n        this._cvaOnChange = () => { };\n        this._validatorOnChange = () => { };\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (control) => {\n            const /** @type {?} */ controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.min || !controlValue ||\n                this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': this.min, 'actual': controlValue } };\n        };\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (control) => {\n            const /** @type {?} */ controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.max || !controlValue ||\n                this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': this.max, 'actual': controlValue } };\n        };\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (control) => {\n            const /** @type {?} */ controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        };\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n    /**\n     * The datepicker that this input is associated with.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepicker(value) {\n        this.registerDatepicker(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    registerDatepicker(value) {\n        if (value) {\n            this._datepicker = value;\n            this._datepicker._registerInput(this);\n        }\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepickerFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * The value of the input.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        const /** @type {?} */ oldDate = this.value;\n        this._value = value;\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /**\n     * The minimum valid date.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * The maximum valid date.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n    get disabled() { return !!this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        const /** @type {?} */ newValue = coerceBooleanProperty(value);\n        const /** @type {?} */ element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._datepicker) {\n            this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((selected) => {\n                this.value = selected;\n                this._cvaOnChange(selected);\n                this._onTouched();\n                this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 7.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        if (event.altKey && event.keyCode === DOWN_ARROW) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onInput(value) {\n        let /** @type {?} */ date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    _getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /**\n     * Formats a value and sets it on the input element.\n     * @param {?} value\n     * @return {?}\n     */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.MatFormField, 8)); };\nMatDatepickerInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostVars: 5, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", true)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    } }, inputs: { value: \"value\", matDatepicker: \"matDatepicker\", matDatepickerFilter: \"matDatepickerFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ])] });\n/** @nocollapse */\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: DateAdapter, decorators: [{ type: Optional },] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] },] },\n    { type: MatFormField, decorators: [{ type: Optional },] },\n];\nMatDatepickerInput.propDecorators = {\n    \"matDatepicker\": [{ type: Input },],\n    \"matDatepickerFilter\": [{ type: Input },],\n    \"value\": [{ type: Input },],\n    \"min\": [{ type: Input },],\n    \"max\": [{ type: Input },],\n    \"disabled\": [{ type: Input },],\n    \"dateChange\": [{ type: Output },],\n    \"dateInput\": [{ type: Output },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    '[attr.aria-haspopup]': 'true',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], matDatepicker: [{\n            type: Input\n        }], matDatepickerFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\n/**\n * @template D\n */\nclass MatDatepickerToggle {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _changeDetectorRef) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n    }\n    /**\n     * Whether the toggle button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes[\"datepicker\"]) {\n            this._watchStateChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _watchStateChanges() {\n        const /** @type {?} */ datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        const /** @type {?} */ inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        const /** @type {?} */ datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatDatepickerToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 6, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"] }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 3, vars: 3, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", \"aria-haspopup\", \"true\", 3, \"disabled\", \"click\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M0 0h24v24H0z\", \"fill\", \"none\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) { return ctx._open($event); });\n        ɵngcc0.ɵɵtemplate(1, MatDatepickerToggle__svg_svg_1_Template, 3, 0, \"svg\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.openCalendarLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl, },\n    { type: ChangeDetectorRef, },\n];\nMatDatepickerToggle.propDecorators = {\n    \"datepicker\": [{ type: Input, args: ['for',] },],\n    \"disabled\": [{ type: Input },],\n    \"_customIcon\": [{ type: ContentChild, args: [MatDatepickerToggleIcon,] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker-toggle',\n                template: \"<button mat-icon-button type=\\\"button\\\" aria-haspopup=\\\"true\\\" [attr.aria-label]=\\\"_intl.openCalendarLabel\\\" [disabled]=\\\"disabled\\\" (click)=\\\"_open($event)\\\"><svg *ngIf=\\\"!_customIcon\\\" class=\\\"mat-datepicker-toggle-default-icon\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" fill=\\\"currentColor\\\" focusable=\\\"false\\\"><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/><path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/></svg><ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content></button>\",\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"],\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }]; }, { disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵfac = function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); };\nMatDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatDialogModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule]; }, exports: function () { return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MatDatepickerModule, MatCalendarHeader, MatCalendar, MatCalendarCell, MatCalendarBody, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MatDatepickerContentBase, _MatDatepickerContentMixinBase, MatDatepickerContent, MatDatepicker, matDatepickerAnimations, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, MatDatepickerInputEvent, MatDatepickerInput, MatDatepickerIntl, MatDatepickerToggleIcon, MatDatepickerToggle, MatMonthView, MatYearView, MatMultiYearView as ɵa34 };\n\n//# sourceMappingURL=datepicker.js.map"]},"metadata":{},"sourceType":"module"}