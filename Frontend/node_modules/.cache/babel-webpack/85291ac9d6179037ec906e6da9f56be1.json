{"ast":null,"code":"/**\n * @module ol/events/EventTarget\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { UNDEFINED } from '../functions.js';\nimport Event from '../events/Event.js';\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\n\nvar EventTarget = function (Disposable) {\n  function EventTarget() {\n    Disposable.call(this);\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n\n    this.pendingRemovals_ = {};\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n\n    this.dispatching_ = {};\n    /**\n     * @private\n     * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n     */\n\n    this.listeners_ = {};\n  }\n\n  if (Disposable) EventTarget.__proto__ = Disposable;\n  EventTarget.prototype = Object.create(Disposable && Disposable.prototype);\n  EventTarget.prototype.constructor = EventTarget;\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n\n  EventTarget.prototype.addEventListener = function addEventListener(type, listener) {\n    var listeners = this.listeners_[type];\n\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n   *     module:ol/events/Event|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @function\n   * @api\n   */\n\n\n  EventTarget.prototype.dispatchEvent = function dispatchEvent(event) {\n    var this$1 = this;\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n\n      ++this.dispatching_[type];\n\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this$1, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n\n      --this.dispatching_[type];\n\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n\n        while (pendingRemovals--) {\n          this$1.removeEventListener(type, UNDEFINED);\n        }\n\n        delete this.dispatching_[type];\n      }\n\n      return propagate;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  EventTarget.prototype.disposeInternal = function disposeInternal() {\n    unlistenAll(this);\n  };\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n   */\n\n\n  EventTarget.prototype.getListeners = function getListeners(type) {\n    return this.listeners_[type];\n  };\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this EventTarget has any listeners.\n   * @return {boolean} Has listeners.\n   */\n\n\n  EventTarget.prototype.hasListener = function hasListener(opt_type) {\n    return opt_type ? opt_type in this.listeners_ : Object.keys(this.listeners_).length > 0;\n  };\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n\n\n  EventTarget.prototype.removeEventListener = function removeEventListener(type, listener) {\n    var listeners = this.listeners_[type];\n\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = UNDEFINED;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return EventTarget;\n}(Disposable);\n\nexport default EventTarget; //# sourceMappingURL=EventTarget.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/ol/events/EventTarget.js"],"names":["Disposable","unlistenAll","UNDEFINED","Event","EventTarget","call","pendingRemovals_","dispatching_","listeners_","__proto__","prototype","Object","create","constructor","addEventListener","type","listener","listeners","indexOf","push","dispatchEvent","event","this$1","evt","target","propagate","i","ii","length","propagationStopped","pendingRemovals","removeEventListener","disposeInternal","getListeners","hasListener","opt_type","keys","index","splice"],"mappings":"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","sourcesContent":["/**\n * @module ol/events/EventTarget\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar EventTarget = (function (Disposable) {\n  function EventTarget() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) EventTarget.__proto__ = Disposable;\n  EventTarget.prototype = Object.create( Disposable && Disposable.prototype );\n  EventTarget.prototype.constructor = EventTarget;\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  EventTarget.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n   *     module:ol/events/Event|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @function\n   * @api\n   */\n  EventTarget.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this$1, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this$1.removeEventListener(type, UNDEFINED);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EventTarget.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n   */\n  EventTarget.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this EventTarget has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  EventTarget.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  EventTarget.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = UNDEFINED;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return EventTarget;\n}(Disposable));\n\n\nexport default EventTarget;\n\n//# sourceMappingURL=EventTarget.js.map"]},"metadata":{},"sourceType":"module"}