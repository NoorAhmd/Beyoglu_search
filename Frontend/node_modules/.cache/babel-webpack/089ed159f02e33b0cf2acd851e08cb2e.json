{"ast":null,"code":"/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\n\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString()).replace(xRegEx, tileCoord[1].toString()).replace(yRegEx, function () {\n          var y = -tileCoord[2] - 1;\n          return y.toString();\n        }).replace(dashYRegEx, function () {\n          var z = tileCoord[0];\n          var range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n\n          var y = range.getHeight() + tileCoord[2];\n          return y.toString();\n        });\n      }\n    }\n  );\n}\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\n\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\n\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\n\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\n\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n\n    return urls;\n  }\n\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n\n    return urls;\n  }\n\n  urls.push(url);\n  return urls;\n} //# sourceMappingURL=tileurlfunction.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/ol/tileurlfunction.js"],"names":["assert","modulo","hash","tileCoordHash","createFromTemplate","template","tileGrid","zRegEx","xRegEx","yRegEx","dashYRegEx","tileCoord","pixelRatio","projection","undefined","replace","toString","y","z","range","getFullTileRange","getHeight","createFromTemplates","templates","len","length","tileUrlFunctions","Array","i","createFromTileUrlFunctions","h","index","nullTileUrlFunction","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","push","String","fromCharCode","stop","parseInt"],"mappings":"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","sourcesContent":["/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map"]},"metadata":{},"sourceType":"module"}