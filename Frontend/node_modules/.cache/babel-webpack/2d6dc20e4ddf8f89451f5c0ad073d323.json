{"ast":null,"code":"/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport { disable } from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport { shiftKeyOnly, mouseOnly } from '../events/condition.js';\nimport { rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints } from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\n\nvar DragRotateAndZoom = function (PointerInteraction) {\n  function DragRotateAndZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.lastAngle_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.lastMagnitude_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.lastScaleDelta_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  if (PointerInteraction) DragRotateAndZoom.__proto__ = PointerInteraction;\n  DragRotateAndZoom.prototype = Object.create(PointerInteraction && PointerInteraction.prototype);\n  DragRotateAndZoom.prototype.constructor = DragRotateAndZoom;\n  return DragRotateAndZoom;\n}(PointerInteraction);\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\n\n\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var deltaX = offset[0] - size[0] / 2;\n  var deltaY = size[1] / 2 - offset[1];\n  var theta = Math.atan2(deltaY, deltaX);\n  var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  var view = map.getView();\n\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    var angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n\n  this.lastAngle_ = theta;\n\n  if (this.lastMagnitude_ !== undefined) {\n    var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n\n  this.lastMagnitude_ = magnitude;\n}\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\n\n\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\n\n\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom; //# sourceMappingURL=DragRotateAndZoom.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/Beyoglu_search/Frontend/node_modules/ol/interaction/DragRotateAndZoom.js"],"names":["disable","ViewHint","shiftKeyOnly","mouseOnly","rotate","rotateWithoutConstraints","zoom","zoomWithoutConstraints","PointerInteraction","DragRotateAndZoom","opt_options","options","call","handleDownEvent","handleDragEvent","handleUpEvent","condition_","condition","lastAngle_","undefined","lastMagnitude_","lastScaleDelta_","duration_","duration","__proto__","prototype","Object","create","constructor","mapBrowserEvent","map","size","getSize","offset","pixel","deltaX","deltaY","theta","Math","atan2","magnitude","sqrt","view","getView","getConstraints","rotation","angleDelta","getRotation","resolution","getResolution","setHint","INTERACTING","direction"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,OAAR,QAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAAQC,YAAR,EAAsBC,SAAtB,QAAsC,wBAAtC;AACA,SAAQC,MAAR,EAAgBC,wBAAhB,EAA0CC,IAA1C,EAAgDC,sBAAhD,QAA6E,+BAA7E;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,iBAAiB,GAAI,UAAUD,kBAAV,EAA8B;AACrD,WAASC,iBAAT,CAA2BC,WAA3B,EAAwC;AAEtC,QAAIC,OAAO,GAAGD,WAAW,GAAGA,WAAH,GAAiB,EAA1C;AAEAF,IAAAA,kBAAkB,CAACI,IAAnB,CAAwB,IAAxB,EAA8B;AAC5BC,MAAAA,eAAe,EAAEA,eADW;AAE5BC,MAAAA,eAAe,EAAEA,eAFW;AAG5BC,MAAAA,aAAa,EAAEA;AAHa,KAA9B;AAMA;AACJ;AACA;AACA;;AACI,SAAKC,UAAL,GAAkBL,OAAO,CAACM,SAAR,GAAoBN,OAAO,CAACM,SAA5B,GAAwCf,YAA1D;AAEA;AACJ;AACA;AACA;;AACI,SAAKgB,UAAL,GAAkBC,SAAlB;AAEA;AACJ;AACA;AACA;;AACI,SAAKC,cAAL,GAAsBD,SAAtB;AAEA;AACJ;AACA;AACA;;AACI,SAAKE,eAAL,GAAuB,CAAvB;AAEA;AACJ;AACA;AACA;;AACI,SAAKC,SAAL,GAAiBX,OAAO,CAACY,QAAR,KAAqBJ,SAArB,GAAiCR,OAAO,CAACY,QAAzC,GAAoD,GAArE;AAED;;AAED,MAAKf,kBAAL,EAA0BC,iBAAiB,CAACe,SAAlB,GAA8BhB,kBAA9B;AAC1BC,EAAAA,iBAAiB,CAACgB,SAAlB,GAA8BC,MAAM,CAACC,MAAP,CAAenB,kBAAkB,IAAIA,kBAAkB,CAACiB,SAAxD,CAA9B;AACAhB,EAAAA,iBAAiB,CAACgB,SAAlB,CAA4BG,WAA5B,GAA0CnB,iBAA1C;AAEA,SAAOA,iBAAP;AACD,CAhDwB,CAgDvBD,kBAhDuB,CAAzB;AAmDA;AACA;AACA;AACA;;;AACA,SAASM,eAAT,CAAyBe,eAAzB,EAA0C;AACxC,MAAI,CAAC1B,SAAS,CAAC0B,eAAD,CAAd,EAAiC;AAC/B;AACD;;AAED,MAAIC,GAAG,GAAGD,eAAe,CAACC,GAA1B;AACA,MAAIC,IAAI,GAAGD,GAAG,CAACE,OAAJ,EAAX;AACA,MAAIC,MAAM,GAAGJ,eAAe,CAACK,KAA7B;AACA,MAAIC,MAAM,GAAGF,MAAM,CAAC,CAAD,CAAN,GAAYF,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAnC;AACA,MAAIK,MAAM,GAAGL,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAV,GAAcE,MAAM,CAAC,CAAD,CAAjC;AACA,MAAII,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAX,EAAmBD,MAAnB,CAAZ;AACA,MAAIK,SAAS,GAAGF,IAAI,CAACG,IAAL,CAAUN,MAAM,GAAGA,MAAT,GAAkBC,MAAM,GAAGA,MAArC,CAAhB;AACA,MAAIM,IAAI,GAAGZ,GAAG,CAACa,OAAJ,EAAX;;AACA,MAAID,IAAI,CAACE,cAAL,GAAsBC,QAAtB,KAAmC7C,OAAnC,IAA8C,KAAKkB,UAAL,KAAoBC,SAAtE,EAAiF;AAC/E,QAAI2B,UAAU,GAAGT,KAAK,GAAG,KAAKnB,UAA9B;AACAb,IAAAA,wBAAwB,CAACqC,IAAD,EAAOA,IAAI,CAACK,WAAL,KAAqBD,UAA5B,CAAxB;AACD;;AACD,OAAK5B,UAAL,GAAkBmB,KAAlB;;AACA,MAAI,KAAKjB,cAAL,KAAwBD,SAA5B,EAAuC;AACrC,QAAI6B,UAAU,GAAG,KAAK5B,cAAL,IAAuBsB,IAAI,CAACO,aAAL,KAAuBT,SAA9C,CAAjB;AACAjC,IAAAA,sBAAsB,CAACmC,IAAD,EAAOM,UAAP,CAAtB;AACD;;AACD,MAAI,KAAK5B,cAAL,KAAwBD,SAA5B,EAAuC;AACrC,SAAKE,eAAL,GAAuB,KAAKD,cAAL,GAAsBoB,SAA7C;AACD;;AACD,OAAKpB,cAAL,GAAsBoB,SAAtB;AACD;AAGD;AACA;AACA;AACA;AACA;;;AACA,SAASzB,aAAT,CAAuBc,eAAvB,EAAwC;AACtC,MAAI,CAAC1B,SAAS,CAAC0B,eAAD,CAAd,EAAiC;AAC/B,WAAO,IAAP;AACD;;AAED,MAAIC,GAAG,GAAGD,eAAe,CAACC,GAA1B;AACA,MAAIY,IAAI,GAAGZ,GAAG,CAACa,OAAJ,EAAX;AACAD,EAAAA,IAAI,CAACQ,OAAL,CAAajD,QAAQ,CAACkD,WAAtB,EAAmC,CAAC,CAApC;AACA,MAAIC,SAAS,GAAG,KAAK/B,eAAL,GAAuB,CAAvC;AACAjB,EAAAA,MAAM,CAACsC,IAAD,EAAOA,IAAI,CAACK,WAAL,EAAP,CAAN;AACAzC,EAAAA,IAAI,CAACoC,IAAD,EAAOA,IAAI,CAACO,aAAL,EAAP,EAA6B9B,SAA7B,EAAwC,KAAKG,SAA7C,EAAwD8B,SAAxD,CAAJ;AACA,OAAK/B,eAAL,GAAuB,CAAvB;AACA,SAAO,KAAP;AACD;AAGD;AACA;AACA;AACA;AACA;;;AACA,SAASR,eAAT,CAAyBgB,eAAzB,EAA0C;AACxC,MAAI,CAAC1B,SAAS,CAAC0B,eAAD,CAAd,EAAiC;AAC/B,WAAO,KAAP;AACD;;AAED,MAAI,KAAKb,UAAL,CAAgBa,eAAhB,CAAJ,EAAsC;AACpCA,IAAAA,eAAe,CAACC,GAAhB,CAAoBa,OAApB,GAA8BO,OAA9B,CAAsCjD,QAAQ,CAACkD,WAA/C,EAA4D,CAA5D;AACA,SAAKjC,UAAL,GAAkBC,SAAlB;AACA,SAAKC,cAAL,GAAsBD,SAAtB;AACA,WAAO,IAAP;AACD,GALD,MAKO;AACL,WAAO,KAAP;AACD;AACF;;AAED,eAAeV,iBAAf,C,CAEA","sourcesContent":["/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = (function (PointerInteraction) {\n  function DragRotateAndZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  if ( PointerInteraction ) DragRotateAndZoom.__proto__ = PointerInteraction;\n  DragRotateAndZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotateAndZoom.prototype.constructor = DragRotateAndZoom;\n\n  return DragRotateAndZoom;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var deltaX = offset[0] - size[0] / 2;\n  var deltaY = size[1] / 2 - offset[1];\n  var theta = Math.atan2(deltaY, deltaX);\n  var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  var view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    var angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n\n//# sourceMappingURL=DragRotateAndZoom.js.map"]},"metadata":{},"sourceType":"module"}