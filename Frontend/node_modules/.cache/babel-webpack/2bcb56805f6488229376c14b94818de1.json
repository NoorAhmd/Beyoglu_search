{"ast":null,"code":"import _assertThisInitialized from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createClass from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, defineInjectable } from '@angular/core';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, supportsPassiveEventListeners } from '@angular/cdk/platform';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\nvar _c0 = [[[\"mat-option\"], [\"ng-container\"]]];\nvar _c1 = [\"mat-option, ng-container\"];\n\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"\")(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nvar _c2 = [\"*\"];\n\nvar AnimationCurves = function AnimationCurves() {\n  _classCallCheck(this, AnimationCurves);\n};\n\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\n\nvar AnimationDurations = function AnimationDurations() {\n  _classCallCheck(this, AnimationDurations);\n};\n\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n */\n\nvar\n/** @type {?} */\nMATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\n\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n\n\nvar MatCommonModule = /*#__PURE__*/function () {\n  /**\n   * @param {?} _sanityChecksEnabled\n   */\n  function MatCommonModule(_sanityChecksEnabled) {\n    _classCallCheck(this, MatCommonModule);\n\n    this._sanityChecksEnabled = _sanityChecksEnabled;\n    /**\n     * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n     */\n\n    this._hasDoneGlobalChecks = false;\n    /**\n     * Whether we've already checked for HammerJs availability.\n     */\n\n    this._hasCheckedHammer = false;\n    /**\n     * Reference to the global `document` object.\n     */\n\n    this._document = typeof document === 'object' && document ? document : null;\n    /**\n     * Reference to the global 'window' object.\n     */\n\n    this._window = typeof window === 'object' && window ? window : null;\n\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n\n      this._checkThemeIsPresent();\n\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n  /**\n   * Whether any sanity checks are enabled\n   * @return {?}\n   */\n\n\n  _createClass(MatCommonModule, [{\n    key: \"_areChecksEnabled\",\n    value: function _areChecksEnabled() {\n      return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isTestEnv\",\n    value: function _isTestEnv() {\n      return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_checkDoctypeIsDefined\",\n    value: function _checkDoctypeIsDefined() {\n      if (this._document && !this._document.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_checkThemeIsPresent\",\n    value: function _checkThemeIsPresent() {\n      // We need to assert that the `body` is defined, because these checks run very early\n      // and the `body` won't be defined if the consumer put their scripts in the `head`.\n      if (this._document && this._document.body && typeof getComputedStyle === 'function') {\n        var\n        /** @type {?} */\n        testElement = this._document.createElement('div');\n\n        testElement.classList.add('mat-theme-loaded-marker');\n\n        this._document.body.appendChild(testElement);\n\n        var\n        /** @type {?} */\n        computedStyle = getComputedStyle(testElement); // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\n        if (computedStyle && computedStyle.display !== 'none') {\n          console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n        }\n\n        this._document.body.removeChild(testElement);\n      }\n    }\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_checkHammerIsAvailable\",\n    value: function _checkHammerIsAvailable() {\n      if (this._hasCheckedHammer || !this._window) {\n        return;\n      }\n\n      if (this._areChecksEnabled() && !this._window['Hammer']) {\n        console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n      }\n\n      this._hasCheckedHammer = true;\n    }\n  }]);\n\n  return MatCommonModule;\n}();\n\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) {\n  return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8));\n};\n\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatCommonModule\n});\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[BidiModule], BidiModule]\n});\n/** @nocollapse */\n\nMatCommonModule.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MATERIAL_SANITY_CHECKS]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, {\n    imports: function imports() {\n      return [BidiModule];\n    },\n    exports: function exports() {\n      return [BidiModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\n\n\nfunction mixinDisabled(base) {\n  return /*#__PURE__*/function (_base) {\n    _inherits(_class, _base);\n\n    var _super = _createSuper(_class);\n\n    /**\n     * @param {...?} args\n     */\n    function _class() {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this._disabled = false;\n      return _this;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(_class, [{\n      key: \"disabled\",\n      get: function get() {\n        return this._disabled;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        this._disabled = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return _class;\n  }(base);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\n\n\nfunction mixinColor(base, defaultColor) {\n  return /*#__PURE__*/function (_base2) {\n    _inherits(_class2, _base2);\n\n    var _super2 = _createSuper(_class2);\n\n    /**\n     * @param {...?} args\n     */\n    function _class2() {\n      var _this2;\n\n      _classCallCheck(this, _class2);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _super2.call.apply(_super2, [this].concat(args)); // Set the default color that can be specified from the mixin.\n\n      _this2.color = defaultColor;\n      return _this2;\n    }\n\n    _createClass(_class2, [{\n      key: \"color\",\n      get:\n      /**\n       * @return {?}\n       */\n      function get() {\n        return this._color;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        var\n        /** @type {?} */\n        colorPalette = value || defaultColor;\n\n        if (colorPalette !== this._color) {\n          if (this._color) {\n            this._elementRef.nativeElement.classList.remove(\"mat-\".concat(this._color));\n          }\n\n          if (colorPalette) {\n            this._elementRef.nativeElement.classList.add(\"mat-\".concat(colorPalette));\n          }\n\n          this._color = colorPalette;\n        }\n      }\n    }]);\n\n    return _class2;\n  }(base);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\n\n\nfunction mixinDisableRipple(base) {\n  return /*#__PURE__*/function (_base3) {\n    _inherits(_class3, _base3);\n\n    var _super3 = _createSuper(_class3);\n\n    /**\n     * @param {...?} args\n     */\n    function _class3() {\n      var _this3;\n\n      _classCallCheck(this, _class3);\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      _this3 = _super3.call.apply(_super3, [this].concat(args));\n      _this3._disableRipple = false;\n      return _this3;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n\n\n    _createClass(_class3, [{\n      key: \"disableRipple\",\n      get: function get() {\n        return this._disableRipple;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return _class3;\n  }(base);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\n\n\nfunction mixinTabIndex(base) {\n  var defaultTabIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return /*#__PURE__*/function (_base4) {\n    _inherits(_class4, _base4);\n\n    var _super4 = _createSuper(_class4);\n\n    /**\n     * @param {...?} args\n     */\n    function _class4() {\n      var _this4;\n\n      _classCallCheck(this, _class4);\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      _this4 = _super4.call.apply(_super4, [this].concat(args));\n      _this4._tabIndex = defaultTabIndex;\n      return _this4;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(_class4, [{\n      key: \"tabIndex\",\n      get: function get() {\n        return this.disabled ? -1 : this._tabIndex;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : defaultTabIndex;\n      }\n    }]);\n\n    return _class4;\n  }(base);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\n\n\nfunction mixinErrorState(base) {\n  return /*#__PURE__*/function (_base5) {\n    _inherits(_class5, _base5);\n\n    var _super5 = _createSuper(_class5);\n\n    /**\n     * @param {...?} args\n     */\n    function _class5() {\n      var _this5;\n\n      _classCallCheck(this, _class5);\n\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      _this5 = _super5.call.apply(_super5, [this].concat(args));\n      /**\n       * Whether the component is in an error state.\n       */\n\n      _this5.errorState = false;\n      /**\n       * Stream that emits whenever the state of the input changes such that the wrapping\n       * `MatFormField` needs to run change detection.\n       */\n\n      _this5.stateChanges = new Subject();\n      return _this5;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(_class5, [{\n      key: \"updateErrorState\",\n      value: function updateErrorState() {\n        var\n        /** @type {?} */\n        oldState = this.errorState;\n        var\n        /** @type {?} */\n        parent = this._parentFormGroup || this._parentForm;\n        var\n        /** @type {?} */\n        matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n        var\n        /** @type {?} */\n        control = this.ngControl ?\n        /** @type {?} */\n        this.ngControl.control : null;\n        var\n        /** @type {?} */\n        newState = matcher.isErrorState(control, parent);\n\n        if (newState !== oldState) {\n          this.errorState = newState;\n          this.stateChanges.next();\n        }\n      }\n    }]);\n\n    return _class5;\n  }(base);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\n\n\nfunction mixinInitialized(base) {\n  return /*#__PURE__*/function (_base6) {\n    _inherits(_class6, _base6);\n\n    var _super6 = _createSuper(_class6);\n\n    /**\n     * @param {...?} args\n     */\n    function _class6() {\n      var _this6;\n\n      _classCallCheck(this, _class6);\n\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      _this6 = _super6.call.apply(_super6, [this].concat(args));\n      /**\n       * Whether this directive has been marked as initialized.\n       */\n\n      _this6._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n\n      _this6._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n\n      _this6.initialized = new Observable(function (subscriber) {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (_this6._isInitialized) {\n          _this6._notifySubscriber(subscriber);\n        } else {\n          /** @type {?} */\n          _this6._pendingSubscribers.push(subscriber);\n        }\n      });\n      return _this6;\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * \\@docs-private\n     * @return {?}\n     */\n\n\n    _createClass(_class6, [{\n      key: \"_markInitialized\",\n      value: function _markInitialized() {\n        if (this._isInitialized) {\n          throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n        }\n\n        this._isInitialized = true;\n        /** @type {?} */\n\n        this._pendingSubscribers.forEach(this._notifySubscriber);\n\n        this._pendingSubscribers = null;\n      }\n      /**\n       * Emits and completes the subscriber stream (should only emit once).\n       * @param {?} subscriber\n       * @return {?}\n       */\n\n    }, {\n      key: \"_notifySubscriber\",\n      value: function _notifySubscriber(subscriber) {\n        subscriber.next();\n        subscriber.complete();\n      }\n    }]);\n\n    return _class6;\n  }(base);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n */\n\n\nvar\n/** @type {?} */\nMAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\n\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 7.0.0\n */\n\n\nvar\n/** @type {?} */\nMAT_DATE_LOCALE_PROVIDER = {\n  provide: MAT_DATE_LOCALE,\n  useExisting: LOCALE_ID\n};\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\n\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter() {\n    _classCallCheck(this, DateAdapter);\n\n    this._localeChanges = new Subject();\n  }\n  /**\n   * A stream that emits when the locale changes.\n   * @return {?}\n   */\n\n\n  _createClass(DateAdapter, [{\n    key: \"localeChanges\",\n    get: function get() {\n      return this._localeChanges;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(value) {\n      if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n        return value;\n      }\n\n      return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n\n  }, {\n    key: \"setLocale\",\n    value: function setLocale(locale) {\n      this.locale = locale;\n\n      this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n\n  }, {\n    key: \"compareDate\",\n    value: function compareDate(first, second) {\n      return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n\n  }, {\n    key: \"sameDate\",\n    value: function sameDate(first, second) {\n      if (first && second) {\n        var\n        /** @type {?} */\n        firstValid = this.isValid(first);\n        var\n        /** @type {?} */\n        secondValid = this.isValid(second);\n\n        if (firstValid && secondValid) {\n          return !this.compareDate(first, second);\n        }\n\n        return firstValid == secondValid;\n      }\n\n      return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n\n  }, {\n    key: \"clampDate\",\n    value: function clampDate(date, min, max) {\n      if (min && this.compareDate(date, min) < 0) {\n        return min;\n      }\n\n      if (max && this.compareDate(date, max) > 0) {\n        return max;\n      }\n\n      return date;\n    }\n  }]);\n\n  return DateAdapter;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar\n/** @type {?} */\nMAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Whether the browser supports the Intl API.\n */\n\nvar\n/** @type {?} */\nSUPPORTS_INTL_API = typeof Intl != 'undefined';\n/**\n * The default month names to use if Intl API is not available.\n */\n\nvar\n/** @type {?} */\nDEFAULT_MONTH_NAMES = {\n  'long': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\nvar ɵ0 = function ɵ0(i) {\n  return String(i + 1);\n};\n/**\n * The default date names to use if Intl API is not available.\n */\n\n\nvar\n/** @type {?} */\nDEFAULT_DATE_NAMES = range(31, ɵ0);\n/**\n * The default day of the week names to use if Intl API is not available.\n */\n\nvar\n/** @type {?} */\nDEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\n\nvar\n/** @type {?} */\nISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\n\nfunction range(length, valueFunction) {\n  var\n  /** @type {?} */\n  valuesArray = Array(length);\n\n  for (var\n  /** @type {?} */\n  i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n\n  return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\n\n\nvar NativeDateAdapter = /*#__PURE__*/function (_DateAdapter) {\n  _inherits(NativeDateAdapter, _DateAdapter);\n\n  var _super7 = _createSuper(NativeDateAdapter);\n\n  /**\n   * @param {?} matDateLocale\n   * @param {?} platform\n   */\n  function NativeDateAdapter(matDateLocale, platform) {\n    var _thisSuper, _this7;\n\n    _classCallCheck(this, NativeDateAdapter);\n\n    _this7 = _super7.call(this);\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from it's utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     */\n\n    _this7.useUtcForDisplay = true;\n\n    _get((_thisSuper = _assertThisInitialized(_this7), _getPrototypeOf(NativeDateAdapter.prototype)), \"setLocale\", _thisSuper).call(_thisSuper, matDateLocale); // IE does its own time zone correction, so we disable this on IE.\n\n\n    _this7.useUtcForDisplay = !platform.TRIDENT;\n    _this7._clampDate = platform.TRIDENT || platform.EDGE;\n    return _this7;\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  _createClass(NativeDateAdapter, [{\n    key: \"getYear\",\n    value: function getYear(date) {\n      return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"getMonth\",\n    value: function getMonth(date) {\n      return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDate\",\n    value: function getDate(date) {\n      return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDayOfWeek\",\n    value: function getDayOfWeek(date) {\n      return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n\n  }, {\n    key: \"getMonthNames\",\n    value: function getMonthNames(style) {\n      var _this8 = this;\n\n      if (SUPPORTS_INTL_API) {\n        var\n        /** @type {?} */\n        dtf = new Intl.DateTimeFormat(this.locale, {\n          month: style,\n          timeZone: 'utc'\n        });\n        return range(12, function (i) {\n          return _this8._stripDirectionalityCharacters(_this8._format(dtf, new Date(2017, i, 1)));\n        });\n      }\n\n      return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDateNames\",\n    value: function getDateNames() {\n      var _this9 = this;\n\n      if (SUPPORTS_INTL_API) {\n        var\n        /** @type {?} */\n        dtf = new Intl.DateTimeFormat(this.locale, {\n          day: 'numeric',\n          timeZone: 'utc'\n        });\n        return range(31, function (i) {\n          return _this9._stripDirectionalityCharacters(_this9._format(dtf, new Date(2017, 0, i + 1)));\n        });\n      }\n\n      return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDayOfWeekNames\",\n    value: function getDayOfWeekNames(style) {\n      var _this10 = this;\n\n      if (SUPPORTS_INTL_API) {\n        var\n        /** @type {?} */\n        dtf = new Intl.DateTimeFormat(this.locale, {\n          weekday: style,\n          timeZone: 'utc'\n        });\n        return range(7, function (i) {\n          return _this10._stripDirectionalityCharacters(_this10._format(dtf, new Date(2017, 0, i + 1)));\n        });\n      }\n\n      return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"getYearName\",\n    value: function getYearName(date) {\n      if (SUPPORTS_INTL_API) {\n        var\n        /** @type {?} */\n        dtf = new Intl.DateTimeFormat(this.locale, {\n          year: 'numeric',\n          timeZone: 'utc'\n        });\n        return this._stripDirectionalityCharacters(this._format(dtf, date));\n      }\n\n      return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getFirstDayOfWeek\",\n    value: function getFirstDayOfWeek() {\n      // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n      return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"getNumDaysInMonth\",\n    value: function getNumDaysInMonth(date) {\n      return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone(date) {\n      return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"createDate\",\n    value: function createDate(year, month, date) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(\"Invalid month index \\\"\".concat(month, \"\\\". Month index has to be between 0 and 11.\"));\n      }\n\n      if (date < 1) {\n        throw Error(\"Invalid date \\\"\".concat(date, \"\\\". Date has to be greater than 0.\"));\n      }\n\n      var\n      /** @type {?} */\n      result = this._createDateWithOverflow(year, month, date); // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n\n\n      if (result.getMonth() != month) {\n        throw Error(\"Invalid date \\\"\".concat(date, \"\\\" for month with index \\\"\").concat(month, \"\\\".\"));\n      }\n\n      return result;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"today\",\n    value: function today() {\n      return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(value) {\n      // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n      // parameters.\n      if (typeof value == 'number') {\n        return new Date(value);\n      }\n\n      return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n\n  }, {\n    key: \"format\",\n    value: function format(date, displayFormat) {\n      if (!this.isValid(date)) {\n        throw Error('NativeDateAdapter: Cannot format invalid date.');\n      }\n\n      if (SUPPORTS_INTL_API) {\n        // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n        // if we attempt to format a date whose year is less than 1 or greater than 9999.\n        if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n          date = this.clone(date);\n          date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n        }\n\n        displayFormat = Object.assign({}, displayFormat, {\n          timeZone: 'utc'\n        });\n        var\n        /** @type {?} */\n        dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n        return this._stripDirectionalityCharacters(this._format(dtf, date));\n      }\n\n      return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n\n  }, {\n    key: \"addCalendarYears\",\n    value: function addCalendarYears(date, years) {\n      return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n\n  }, {\n    key: \"addCalendarMonths\",\n    value: function addCalendarMonths(date, months) {\n      var\n      /** @type {?} */\n      newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date)); // It's possible to wind up in the wrong month if the original month has more days than the new\n      // month. In this case we want to go to the last day of the desired month.\n      // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n      // guarantee this.\n\n\n      if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n        newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n      }\n\n      return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n\n  }, {\n    key: \"addCalendarDays\",\n    value: function addCalendarDays(date, days) {\n      return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"toIso8601\",\n    value: function toIso8601(date) {\n      return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(value) {\n      if (typeof value === 'string') {\n        if (!value) {\n          return null;\n        } // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n        // string is the right format first.\n\n\n        if (ISO_8601_REGEX.test(value)) {\n          var\n          /** @type {?} */\n          date = new Date(value);\n\n          if (this.isValid(date)) {\n            return date;\n          }\n        }\n      }\n\n      return _get(_getPrototypeOf(NativeDateAdapter.prototype), \"deserialize\", this).call(this, value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n\n  }, {\n    key: \"isDateInstance\",\n    value: function isDateInstance(obj) {\n      return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"invalid\",\n    value: function invalid() {\n      return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createDateWithOverflow\",\n    value: function _createDateWithOverflow(year, month, date) {\n      var\n      /** @type {?} */\n      result = new Date(year, month, date); // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n      // abbreviations for 19xx.\n\n      if (year >= 0 && year < 100) {\n        result.setFullYear(this.getYear(result) - 1900);\n      }\n\n      return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n\n  }, {\n    key: \"_2digit\",\n    value: function _2digit(n) {\n      return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n\n  }, {\n    key: \"_stripDirectionalityCharacters\",\n    value: function _stripDirectionalityCharacters(str) {\n      return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n\n  }, {\n    key: \"_format\",\n    value: function _format(dtf, date) {\n      var\n      /** @type {?} */\n      d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n      return dtf.format(d);\n    }\n  }]);\n\n  return NativeDateAdapter;\n}(DateAdapter);\n\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {\n  return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc1.Platform));\n};\n\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NativeDateAdapter,\n  factory: NativeDateAdapter.ɵfac\n});\n/** @nocollapse */\n\nNativeDateAdapter.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_LOCALE]\n    }]\n  }, {\n    type: Platform\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: ɵngcc1.Platform\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar\n/** @type {?} */\nMAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar NativeDateModule = function NativeDateModule() {\n  _classCallCheck(this, NativeDateModule);\n};\n\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) {\n  return new (t || NativeDateModule)();\n};\n\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NativeDateModule\n});\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }],\n  imports: [[PlatformModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, {\n    imports: function imports() {\n      return [PlatformModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlatformModule],\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\n\nvar ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\n\nvar MatNativeDateModule = function MatNativeDateModule() {\n  _classCallCheck(this, MatNativeDateModule);\n};\n\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) {\n  return new (t || MatNativeDateModule)();\n};\n\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatNativeDateModule\n});\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: ɵ0$1\n  }],\n  imports: [[NativeDateModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, {\n    imports: [NativeDateModule]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: ɵ0$1\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\n\n\nvar ShowOnDirtyErrorStateMatcher = /*#__PURE__*/function () {\n  function ShowOnDirtyErrorStateMatcher() {\n    _classCallCheck(this, ShowOnDirtyErrorStateMatcher);\n  }\n\n  _createClass(ShowOnDirtyErrorStateMatcher, [{\n    key: \"isErrorState\",\n    value:\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    function isErrorState(control, form) {\n      return !!(control && control.invalid && (control.dirty || form && form.submitted));\n    }\n  }]);\n\n  return ShowOnDirtyErrorStateMatcher;\n}();\n\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n  return new (t || ShowOnDirtyErrorStateMatcher)();\n};\n\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ShowOnDirtyErrorStateMatcher,\n  factory: ShowOnDirtyErrorStateMatcher.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\n\n\nvar ErrorStateMatcher = /*#__PURE__*/function () {\n  function ErrorStateMatcher() {\n    _classCallCheck(this, ErrorStateMatcher);\n  }\n\n  _createClass(ErrorStateMatcher, [{\n    key: \"isErrorState\",\n    value:\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    function isErrorState(control, form) {\n      return !!(control && control.invalid && (control.touched || form && form.submitted));\n    }\n  }]);\n\n  return ErrorStateMatcher;\n}();\n\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {\n  return new (t || ErrorStateMatcher)();\n};\n\nErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ErrorStateMatcher,\n  factory: ErrorStateMatcher.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nErrorStateMatcher.ngInjectableDef = defineInjectable({\n  factory: function ErrorStateMatcher_Factory() {\n    return new ErrorStateMatcher();\n  },\n  token: ErrorStateMatcher,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n */\n\n\nvar\n/** @type {?} */\nMAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\nvar\n/** @type {?} */\nANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = ['longpress', 'slide', 'slidestart', 'slideend', 'slideright', 'slideleft'];\n\nvar ɵ0$2 = function ɵ0$2() {},\n    ɵ1 = function ɵ1() {};\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n */\n\n\nvar\n/** @type {?} */\nnoopHammerInstance = {\n  on: ɵ0$2,\n  off: ɵ1\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\n\nvar GestureConfig = /*#__PURE__*/function (_HammerGestureConfig) {\n  _inherits(GestureConfig, _HammerGestureConfig);\n\n  var _super8 = _createSuper(GestureConfig);\n\n  /**\n   * @param {?=} _hammerOptions\n   * @param {?=} commonModule\n   */\n  function GestureConfig(_hammerOptions, commonModule) {\n    var _this11;\n\n    _classCallCheck(this, GestureConfig);\n\n    _this11 = _super8.call(this);\n    _this11._hammerOptions = _hammerOptions;\n    /**\n     * List of new event names to add to the gesture support list\n     */\n\n    _this11.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n\n    if (commonModule) {\n      commonModule._checkHammerIsAvailable();\n    }\n\n    return _this11;\n  }\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://material.io/design/#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * @param {?} element Element to which to assign the new HammerJS gestures.\n   * @return {?} Newly-created HammerJS instance.\n   */\n\n\n  _createClass(GestureConfig, [{\n    key: \"buildHammer\",\n    value: function buildHammer(element) {\n      var\n      /** @type {?} */\n      hammer = typeof window !== 'undefined' ?\n      /** @type {?} */\n      window.Hammer : null;\n\n      if (!hammer) {\n        // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n        // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n        // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n        // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n        // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n        // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n        // undefined).\n        // @breaking-change 7.0.0\n        return noopHammerInstance;\n      }\n\n      var\n      /** @type {?} */\n      mc = new hammer(element, this._hammerOptions || undefined); // Default Hammer Recognizers.\n\n      var\n      /** @type {?} */\n      pan = new hammer.Pan();\n      var\n      /** @type {?} */\n      swipe = new hammer.Swipe();\n      var\n      /** @type {?} */\n      press = new hammer.Press(); // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n      // Otherwise the previous `recognizeWith` will be dropped.\n      // TODO: Confirm threshold numbers with Material Design UX Team\n\n      var\n      /** @type {?} */\n      slide = this._createRecognizer(pan, {\n        event: 'slide',\n        threshold: 0\n      }, swipe);\n\n      var\n      /** @type {?} */\n      longpress = this._createRecognizer(press, {\n        event: 'longpress',\n        time: 500\n      }); // Overwrite the default `pan` event to use the swipe event.\n\n\n      pan.recognizeWith(swipe); // Add customized gestures to Hammer manager\n\n      mc.add([swipe, press, pan, slide, longpress]);\n      return (\n        /** @type {?} */\n        mc\n      );\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createRecognizer\",\n    value: function _createRecognizer(base, options) {\n      var\n      /** @type {?} */\n      recognizer = new\n      /** @type {?} */\n      base.constructor(options);\n\n      for (var _len7 = arguments.length, inheritances = new Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n        inheritances[_key7 - 2] = arguments[_key7];\n      }\n\n      inheritances.push(base);\n      inheritances.forEach(function (item) {\n        return recognizer.recognizeWith(item);\n      });\n      return recognizer;\n    }\n  }]);\n\n  return GestureConfig;\n}(HammerGestureConfig);\n\nGestureConfig.ɵfac = function GestureConfig_Factory(t) {\n  return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8));\n};\n\nGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: GestureConfig,\n  factory: GestureConfig.ɵfac\n});\n/** @nocollapse */\n\nGestureConfig.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_HAMMER_OPTIONS]\n    }]\n  }, {\n    type: MatCommonModule,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_HAMMER_OPTIONS]\n      }]\n    }, {\n      type: MatCommonModule,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n\n\nvar MatLine = function MatLine() {\n  _classCallCheck(this, MatLine);\n};\n\nMatLine.ɵfac = function MatLine_Factory(t) {\n  return new (t || MatLine)();\n};\n\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatLine,\n  selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n  hostAttrs: [1, \"mat-line\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\n\n\nvar MatLineSetter = /*#__PURE__*/function () {\n  /**\n   * @param {?} _lines\n   * @param {?} _element\n   */\n  function MatLineSetter(_lines, _element) {\n    var _this12 = this;\n\n    _classCallCheck(this, MatLineSetter);\n\n    this._lines = _lines;\n    this._element = _element;\n\n    this._setLineClass(this._lines.length);\n\n    this._lines.changes.subscribe(function () {\n      _this12._setLineClass(_this12._lines.length);\n    });\n  }\n  /**\n   * @param {?} count\n   * @return {?}\n   */\n\n\n  _createClass(MatLineSetter, [{\n    key: \"_setLineClass\",\n    value: function _setLineClass(count) {\n      this._resetClasses();\n\n      if (count === 2 || count === 3) {\n        this._setClass(\"mat-\".concat(count, \"-line\"), true);\n      } else if (count > 3) {\n        this._setClass(\"mat-multi-line\", true);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_resetClasses\",\n    value: function _resetClasses() {\n      this._setClass('mat-2-line', false);\n\n      this._setClass('mat-3-line', false);\n\n      this._setClass('mat-multi-line', false);\n    }\n    /**\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setClass\",\n    value: function _setClass(className, isAdd) {\n      if (isAdd) {\n        this._element.nativeElement.classList.add(className);\n      } else {\n        this._element.nativeElement.classList.remove(className);\n      }\n    }\n  }]);\n\n  return MatLineSetter;\n}();\n\nvar MatLineModule = function MatLineModule() {\n  _classCallCheck(this, MatLineModule);\n};\n\nMatLineModule.ɵfac = function MatLineModule_Factory(t) {\n  return new (t || MatLineModule)();\n};\n\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatLineModule\n});\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, {\n    declarations: [MatLine],\n    imports: [MatCommonModule],\n    exports: [MatLine, MatCommonModule]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/** @enum {number} */\n\n\nvar RippleState = {\n  FADING_IN: 0,\n  VISIBLE: 1,\n  FADING_OUT: 2,\n  HIDDEN: 3\n};\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\n/**\n * Reference to a previously launched ripple element.\n */\n\nvar RippleRef = /*#__PURE__*/function () {\n  /**\n   * @param {?} _renderer\n   * @param {?} element\n   * @param {?} config\n   */\n  function RippleRef(_renderer, element, config) {\n    _classCallCheck(this, RippleRef);\n\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    /**\n     * Current state of the ripple reference.\n     */\n\n    this.state = RippleState.HIDDEN;\n  }\n  /**\n   * Fades out the ripple element.\n   * @return {?}\n   */\n\n\n  _createClass(RippleRef, [{\n    key: \"fadeOut\",\n    value: function fadeOut() {\n      this._renderer.fadeOutRipple(this);\n    }\n  }]);\n\n  return RippleRef;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\n\n\nvar\n/** @type {?} */\ndefaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\n\nvar\n/** @type {?} */\nignoreMouseEventsTimeout = 800;\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\n\nvar RippleRenderer = /*#__PURE__*/function () {\n  /**\n   * @param {?} _target\n   * @param {?} _ngZone\n   * @param {?} elementRef\n   * @param {?} platform\n   */\n  function RippleRenderer(_target, _ngZone, elementRef, platform) {\n    var _this13 = this;\n\n    _classCallCheck(this, RippleRenderer);\n\n    this._target = _target;\n    this._ngZone = _ngZone;\n    /**\n     * Whether the pointer is currently down or not.\n     */\n\n    this._isPointerDown = false;\n    /**\n     * Events to be registered on the trigger element.\n     */\n\n    this._triggerEvents = new Map();\n    /**\n     * Set of currently active ripple references.\n     */\n\n    this._activeRipples = new Set();\n    /**\n     * Options that apply to all the event listeners that are bound by the renderer.\n     */\n\n    this._eventOptions = supportsPassiveEventListeners() ?\n    /** @type {?} */\n    {\n      passive: true\n    } : false;\n    /**\n     * Function being called whenever the trigger is being pressed using mouse.\n     */\n\n    this.onMousedown = function (event) {\n      var\n      /** @type {?} */\n      isSyntheticEvent = _this13._lastTouchStartEvent && Date.now() < _this13._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n      if (!_this13._target.rippleDisabled && !isSyntheticEvent) {\n        _this13._isPointerDown = true;\n\n        _this13.fadeInRipple(event.clientX, event.clientY, _this13._target.rippleConfig);\n      }\n    };\n    /**\n     * Function being called whenever the trigger is being pressed using touch.\n     */\n\n\n    this.onTouchStart = function (event) {\n      if (!_this13._target.rippleDisabled) {\n        // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n        // events will launch a second ripple if we don't ignore mouse events for a specific\n        // time after a touchstart event.\n        _this13._lastTouchStartEvent = Date.now();\n        _this13._isPointerDown = true;\n\n        _this13.fadeInRipple(event.touches[0].clientX, event.touches[0].clientY, _this13._target.rippleConfig);\n      }\n    };\n    /**\n     * Function being called whenever the trigger is being released.\n     */\n\n\n    this.onPointerUp = function () {\n      if (!_this13._isPointerDown) {\n        return;\n      }\n\n      _this13._isPointerDown = false; // Fade-out all ripples that are visible and not persistent.\n\n      _this13._activeRipples.forEach(function (ripple) {\n        // By default, only ripples that are completely visible will fade out on pointer release.\n        // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n        var\n        /** @type {?} */\n        isVisible = ripple.state === RippleState.VISIBLE || ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n\n        if (!ripple.config.persistent && isVisible) {\n          ripple.fadeOut();\n        }\n      });\n    }; // Only do anything if we're on the browser.\n\n\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement; // Specify events which need to be registered on the trigger.\n\n      this._triggerEvents.set('mousedown', this.onMousedown);\n\n      this._triggerEvents.set('mouseup', this.onPointerUp);\n\n      this._triggerEvents.set('mouseleave', this.onPointerUp);\n\n      this._triggerEvents.set('touchstart', this.onTouchStart);\n\n      this._triggerEvents.set('touchend', this.onPointerUp);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param {?=} config Extra ripple options.\n   * @return {?}\n   */\n\n\n  _createClass(RippleRenderer, [{\n    key: \"fadeInRipple\",\n    value: function fadeInRipple(x, y) {\n      var _this14 = this;\n\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var\n      /** @type {?} */\n      containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n\n      var\n      /** @type {?} */\n      animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n\n      if (config.centered) {\n        x = containerRect.left + containerRect.width / 2;\n        y = containerRect.top + containerRect.height / 2;\n      }\n\n      var\n      /** @type {?} */\n      radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n      var\n      /** @type {?} */\n      offsetX = x - containerRect.left;\n      var\n      /** @type {?} */\n      offsetY = y - containerRect.top;\n      var\n      /** @type {?} */\n      duration = animationConfig.enterDuration / (config.speedFactor || 1);\n      var\n      /** @type {?} */\n      ripple = document.createElement('div');\n      ripple.classList.add('mat-ripple-element');\n      ripple.style.left = \"\".concat(offsetX - radius, \"px\");\n      ripple.style.top = \"\".concat(offsetY - radius, \"px\");\n      ripple.style.height = \"\".concat(radius * 2, \"px\");\n      ripple.style.width = \"\".concat(radius * 2, \"px\"); // If the color is not set, the default CSS color will be used.\n\n      ripple.style.backgroundColor = config.color || null;\n      ripple.style.transitionDuration = \"\".concat(duration, \"ms\");\n\n      this._containerElement.appendChild(ripple); // By default the browser does not recalculate the styles of dynamically created\n      // ripple elements. This is critical because then the `scale` would not animate properly.\n\n\n      enforceStyleRecalculation(ripple);\n      ripple.style.transform = 'scale(1)'; // Exposed reference to the ripple that will be returned.\n\n      var\n      /** @type {?} */\n      rippleRef = new RippleRef(this, ripple, config);\n      rippleRef.state = RippleState.FADING_IN; // Add the ripple reference to the list of all active ripples.\n\n      this._activeRipples.add(rippleRef);\n\n      if (!config.persistent) {\n        this._mostRecentTransientRipple = rippleRef;\n      } // Wait for the ripple element to be completely faded in.\n      // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n\n\n      this.runTimeoutOutsideZone(function () {\n        var\n        /** @type {?} */\n        isMostRecentTransientRipple = rippleRef === _this14._mostRecentTransientRipple;\n        rippleRef.state = RippleState.VISIBLE; // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n\n        if (!config.persistent && (!isMostRecentTransientRipple || !_this14._isPointerDown)) {\n          rippleRef.fadeOut();\n        }\n      }, duration);\n      return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n\n  }, {\n    key: \"fadeOutRipple\",\n    value: function fadeOutRipple(rippleRef) {\n      var\n      /** @type {?} */\n      wasActive = this._activeRipples.delete(rippleRef);\n\n      if (rippleRef === this._mostRecentTransientRipple) {\n        this._mostRecentTransientRipple = null;\n      } // Clear out the cached bounding rect if we have no more ripples.\n\n\n      if (!this._activeRipples.size) {\n        this._containerRect = null;\n      } // For ripples that are not active anymore, don't re-un the fade-out animation.\n\n\n      if (!wasActive) {\n        return;\n      }\n\n      var\n      /** @type {?} */\n      rippleEl = rippleRef.element;\n      var\n      /** @type {?} */\n      animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n      rippleEl.style.transitionDuration = \"\".concat(animationConfig.exitDuration, \"ms\");\n      rippleEl.style.opacity = '0';\n      rippleRef.state = RippleState.FADING_OUT; // Once the ripple faded out, the ripple can be safely removed from the DOM.\n\n      this.runTimeoutOutsideZone(function () {\n        rippleRef.state = RippleState.HIDDEN;\n        /** @type {?} */\n\n        rippleEl.parentNode.removeChild(rippleEl);\n      }, animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n\n  }, {\n    key: \"fadeOutAll\",\n    value: function fadeOutAll() {\n      this._activeRipples.forEach(function (ripple) {\n        return ripple.fadeOut();\n      });\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} element\n     * @return {?}\n     */\n\n  }, {\n    key: \"setupTriggerEvents\",\n    value: function setupTriggerEvents(element) {\n      var _this15 = this;\n\n      if (!element || element === this._triggerElement) {\n        return;\n      } // Remove all previously registered event listeners from the trigger element.\n\n\n      this._removeTriggerEvents();\n\n      this._ngZone.runOutsideAngular(function () {\n        _this15._triggerEvents.forEach(function (fn, type) {\n          return element.addEventListener(type, fn, _this15._eventOptions);\n        });\n      });\n\n      this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n\n  }, {\n    key: \"runTimeoutOutsideZone\",\n    value: function runTimeoutOutsideZone(fn) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._ngZone.runOutsideAngular(function () {\n        return setTimeout(fn, delay);\n      });\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_removeTriggerEvents\",\n    value: function _removeTriggerEvents() {\n      var _this16 = this;\n\n      if (this._triggerElement) {\n        this._triggerEvents.forEach(function (fn, type) {\n          /** @type {?} */\n          _this16._triggerElement.removeEventListener(type, fn, _this16._eventOptions);\n        });\n      }\n    }\n  }]);\n\n  return RippleRenderer;\n}();\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\n\n\nfunction enforceStyleRecalculation(element) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\n\n\nfunction distanceToFurthestCorner(x, y, rect) {\n  var\n  /** @type {?} */\n  distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  var\n  /** @type {?} */\n  distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Injection token that can be used to specify the global ripple options.\n */\n\n\nvar\n/** @type {?} */\nMAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\n\nvar MatRipple = /*#__PURE__*/function () {\n  /**\n   * @param {?} _elementRef\n   * @param {?} ngZone\n   * @param {?} platform\n   * @param {?} globalOptions\n   * @param {?=} animationMode\n   */\n  function MatRipple(_elementRef, ngZone, platform, globalOptions, animationMode) {\n    _classCallCheck(this, MatRipple);\n\n    this._elementRef = _elementRef;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n\n    this.radius = 0;\n    /**\n     * If set, the normal duration of ripple animations is divided by this value. For example,\n     * setting it to 0.5 will cause the animations to take twice as long.\n     * A changed speedFactor will not modify the fade-out duration of the ripples.\n     * @deprecated Use the [matRippleAnimation] binding instead.\n     * \\@breaking-change 7.0.0\n     */\n\n    this.speedFactor = 1;\n    this._disabled = false;\n    /**\n     * Whether ripple directive is initialized and the input bindings are set.\n     */\n\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n\n    if (animationMode === 'NoopAnimations') {\n      this._globalOptions.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n  }\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   * @return {?}\n   */\n\n\n  _createClass(MatRipple, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._disabled = value;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"trigger\",\n    get: function get() {\n      return this._trigger || this._elementRef.nativeElement;\n    }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    ,\n    set: function set(trigger) {\n      this._trigger = trigger;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._isInitialized = true;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n\n  }, {\n    key: \"fadeOutAll\",\n    value: function fadeOutAll() {\n      this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @return {?}\n     */\n\n  }, {\n    key: \"rippleConfig\",\n    get: function get() {\n      return {\n        centered: this.centered,\n        radius: this.radius,\n        color: this.color,\n        animation: Object.assign({}, this._globalOptions.animation, this.animation),\n        terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1)\n      };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @return {?}\n     */\n\n  }, {\n    key: \"rippleDisabled\",\n    get: function get() {\n      return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the the trigger event listeners if ripples are enabled.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setupTriggerEventsIfEnabled\",\n    value: function _setupTriggerEventsIfEnabled() {\n      if (!this.disabled && this._isInitialized) {\n        this._rippleRenderer.setupTriggerEvents(this.trigger);\n      }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n\n  }, {\n    key: \"launch\",\n    value: function launch(configOrX) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var config = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (typeof configOrX === 'number') {\n        return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n      } else {\n        return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n      }\n    }\n  }]);\n\n  return MatRipple;\n}();\n\nMatRipple.ɵfac = function MatRipple_Factory(t) {\n  return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatRipple,\n  selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n  hostAttrs: [1, \"mat-ripple\"],\n  hostVars: 2,\n  hostBindings: function MatRipple_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    }\n  },\n  inputs: {\n    radius: [\"matRippleRadius\", \"radius\"],\n    speedFactor: [\"matRippleSpeedFactor\", \"speedFactor\"],\n    disabled: [\"matRippleDisabled\", \"disabled\"],\n    trigger: [\"matRippleTrigger\", \"trigger\"],\n    color: [\"matRippleColor\", \"color\"],\n    unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n    centered: [\"matRippleCentered\", \"centered\"],\n    animation: [\"matRippleAnimation\", \"animation\"]\n  },\n  exportAs: [\"matRipple\"]\n});\n/** @nocollapse */\n\nMatRipple.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatRipple.propDecorators = {\n  \"color\": [{\n    type: Input,\n    args: ['matRippleColor']\n  }],\n  \"unbounded\": [{\n    type: Input,\n    args: ['matRippleUnbounded']\n  }],\n  \"centered\": [{\n    type: Input,\n    args: ['matRippleCentered']\n  }],\n  \"radius\": [{\n    type: Input,\n    args: ['matRippleRadius']\n  }],\n  \"speedFactor\": [{\n    type: Input,\n    args: ['matRippleSpeedFactor']\n  }],\n  \"animation\": [{\n    type: Input,\n    args: ['matRippleAnimation']\n  }],\n  \"disabled\": [{\n    type: Input,\n    args: ['matRippleDisabled']\n  }],\n  \"trigger\": [{\n    type: Input,\n    args: ['matRippleTrigger']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc1.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    speedFactor: [{\n      type: Input,\n      args: ['matRippleSpeedFactor']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }],\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar MatRippleModule = function MatRippleModule() {\n  _classCallCheck(this, MatRippleModule);\n};\n\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) {\n  return new (t || MatRippleModule)();\n};\n\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatRippleModule\n});\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[MatCommonModule, PlatformModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, {\n    declarations: function declarations() {\n      return [MatRipple];\n    },\n    imports: function imports() {\n      return [MatCommonModule, PlatformModule];\n    },\n    exports: function exports() {\n      return [MatRipple, MatCommonModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, PlatformModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\n\n\nvar MatPseudoCheckbox =\n/**\n * @param {?=} _animationMode\n */\nfunction MatPseudoCheckbox(_animationMode) {\n  _classCallCheck(this, MatPseudoCheckbox);\n\n  this._animationMode = _animationMode;\n  /**\n   * Display state of the checkbox.\n   */\n\n  this.state = 'unchecked';\n  /**\n   * Whether the checkbox is disabled.\n   */\n\n  this.disabled = false;\n};\n\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {\n  return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatPseudoCheckbox,\n  selectors: [[\"mat-pseudo-checkbox\"]],\n  hostAttrs: [1, \"mat-pseudo-checkbox\"],\n  hostVars: 8,\n  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    state: \"state\",\n    disabled: \"disabled\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatPseudoCheckbox_Template(rf, ctx) {},\n  styles: [\".mat-pseudo-checkbox{width:20px;height:20px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:7px;left:0;width:16px;opacity:1}.mat-pseudo-checkbox-checked::after{top:3px;left:1px;width:12px;height:5px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatPseudoCheckbox.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatPseudoCheckbox.propDecorators = {\n  \"state\": [{\n    type: Input\n  }],\n  \"disabled\": [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      styles: [\".mat-pseudo-checkbox{width:20px;height:20px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:7px;left:0;width:16px;opacity:1}.mat-pseudo-checkbox-checked::after{top:3px;left:1px;width:12px;height:5px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1}\"],\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar MatPseudoCheckboxModule = function MatPseudoCheckboxModule() {\n  _classCallCheck(this, MatPseudoCheckboxModule);\n};\n\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n  return new (t || MatPseudoCheckboxModule)();\n};\n\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatPseudoCheckboxModule\n});\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, {\n    declarations: [MatPseudoCheckbox],\n    exports: [MatPseudoCheckbox]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\n\n\nvar MatOptgroupBase = function MatOptgroupBase() {\n  _classCallCheck(this, MatOptgroupBase);\n};\n\nvar\n/** @type {?} */\n_MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase); // Counter for unique group ids.\n\n\nvar\n/** @type {?} */\n_uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\n\nvar MatOptgroup = /*#__PURE__*/function (_MatOptgroupMixinBase2) {\n  _inherits(MatOptgroup, _MatOptgroupMixinBase2);\n\n  var _super9 = _createSuper(MatOptgroup);\n\n  function MatOptgroup() {\n    var _this17;\n\n    _classCallCheck(this, MatOptgroup);\n\n    _this17 = _super9.apply(this, arguments);\n    /**\n     * Unique id for the underlying label.\n     */\n\n    _this17._labelId = \"mat-optgroup-label-\".concat(_uniqueOptgroupIdCounter++);\n    return _this17;\n  }\n\n  return MatOptgroup;\n}(_MatOptgroupMixinBase);\n\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) {\n  return ɵMatOptgroup_BaseFactory(t || MatOptgroup);\n};\n\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatOptgroup,\n  selectors: [[\"mat-optgroup\"]],\n  hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"],\n  hostVars: 4,\n  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n      ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    label: \"label\"\n  },\n  exportAs: [\"matOptgroup\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"mat-optgroup-label\", 3, \"id\"]],\n  template: function MatOptgroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx.label);\n    }\n  },\n  styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatOptgroup.propDecorators = {\n  \"label\": [{\n    type: Input\n  }]\n};\nvar ɵMatOptgroup_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}</label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n      host: {\n        'class': 'mat-optgroup',\n        'role': 'group',\n        '[class.mat-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n      }\n    }]\n  }], null, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\n\n\nvar\n/** @type {?} */\n_uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\n\nvar MatOptionSelectionChange =\n/**\n * @param {?} source\n * @param {?=} isUserInput\n */\nfunction MatOptionSelectionChange(source) {\n  var isUserInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  _classCallCheck(this, MatOptionSelectionChange);\n\n  this.source = source;\n  this.isUserInput = isUserInput;\n};\n/**\n * Injection token used to provide the parent component to options.\n */\n\n\nvar\n/** @type {?} */\nMAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\n\nvar MatOption = /*#__PURE__*/function () {\n  /**\n   * @param {?} _element\n   * @param {?} _changeDetectorRef\n   * @param {?} _parent\n   * @param {?} group\n   */\n  function MatOption(_element, _changeDetectorRef, _parent, group) {\n    _classCallCheck(this, MatOption);\n\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._id = \"mat-option-\".concat(_uniqueIdCounter++);\n    this._mostRecentViewValue = '';\n    /**\n     * Event emitted when the option is selected or deselected.\n     */\n\n    this.onSelectionChange = new EventEmitter();\n    /**\n     * Emits when the state of the option changes and any parents have to be notified.\n     */\n\n    this._stateChanges = new Subject();\n  }\n  /**\n   * Whether the wrapping component is in multiple selection mode.\n   * @return {?}\n   */\n\n\n  _createClass(MatOption, [{\n    key: \"multiple\",\n    get: function get() {\n      return this._parent && this._parent.multiple;\n    }\n    /**\n     * The unique ID of the option.\n     * @return {?}\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.group && this.group.disabled || this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n\n  }, {\n    key: \"disableRipple\",\n    get: function get() {\n      return this._parent && this._parent.disableRipple;\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n\n  }, {\n    key: \"viewValue\",\n    get: function get() {\n      // TODO(kara): Add input property alternative for node envs.\n      return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      if (!this._selected) {\n        this._selected = true;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent();\n      }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n\n  }, {\n    key: \"deselect\",\n    value: function deselect() {\n      if (this._selected) {\n        this._selected = false;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent();\n      }\n    }\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var\n      /** @type {?} */\n      element = this._getHostElement();\n\n      if (typeof element.focus === 'function') {\n        element.focus();\n      }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n\n  }, {\n    key: \"setActiveStyles\",\n    value: function setActiveStyles() {\n      if (!this._active) {\n        this._active = true;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n\n  }, {\n    key: \"setInactiveStyles\",\n    value: function setInactiveStyles() {\n      if (this._active) {\n        this._active = false;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_handleKeydown\",\n    value: function _handleKeydown(event) {\n      if (event.keyCode === ENTER || event.keyCode === SPACE) {\n        this._selectViaInteraction(); // Prevent the page from scrolling down and form submits.\n\n\n        event.preventDefault();\n      }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n\n  }, {\n    key: \"_selectViaInteraction\",\n    value: function _selectViaInteraction() {\n      if (!this.disabled) {\n        this._selected = this.multiple ? !this._selected : true;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent(true);\n      }\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getTabIndex\",\n    value: function _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getHostElement\",\n    value: function _getHostElement() {\n      return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      // Since parent components could be using the option's label to display the selected values\n      // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n      // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n      // relatively cheap, however we still limit them only to selected options in order to avoid\n      // hitting the DOM too often.\n      if (this._selected) {\n        var\n        /** @type {?} */\n        viewValue = this.viewValue;\n\n        if (viewValue !== this._mostRecentViewValue) {\n          this._mostRecentViewValue = viewValue;\n\n          this._stateChanges.next();\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n\n  }, {\n    key: \"_emitSelectionChangeEvent\",\n    value: function _emitSelectionChangeEvent() {\n      var isUserInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n  }]);\n\n  return MatOption;\n}();\n\nMatOption.ɵfac = function MatOption_Factory(t) {\n  return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8));\n};\n\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatOption,\n  selectors: [[\"mat-option\"]],\n  hostAttrs: [\"role\", \"option\", 1, \"mat-option\"],\n  hostVars: 12,\n  hostBindings: function MatOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n        return ctx._selectViaInteraction();\n      })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx.selected.toString())(\"aria-disabled\", ctx.disabled.toString());\n      ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    value: \"value\"\n  },\n  outputs: {\n    onSelectionChange: \"onSelectionChange\"\n  },\n  exportAs: [\"matOption\"],\n  ngContentSelectors: _c2,\n  decls: 4,\n  vars: 3,\n  consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]],\n  template: function MatOption_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(3, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    }\n  },\n  directives: [ɵngcc2.NgIf, MatRipple, MatPseudoCheckbox],\n  styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media screen and (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatOption.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_OPTION_PARENT_COMPONENT]\n    }]\n  }, {\n    type: MatOptgroup,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nMatOption.propDecorators = {\n  \"value\": [{\n    type: Input\n  }],\n  \"disabled\": [{\n    type: Input\n  }],\n  \"onSelectionChange\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mat-selected]': 'selected',\n        '[class.mat-option-multiple]': 'multiple',\n        '[class.mat-active]': 'active',\n        '[id]': 'id',\n        '[attr.aria-selected]': 'selected.toString()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[class.mat-option-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-option'\n      },\n      styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media screen and (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n      template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    onSelectionChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\n\n\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    var\n    /** @type {?} */\n    optionsArray = options.toArray();\n    var\n    /** @type {?} */\n    groups = optionGroups.toArray();\n    var\n    /** @type {?} */\n    groupCounter = 0;\n\n    for (var\n    /** @type {?} */\n    i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\n\n\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n  var\n  /** @type {?} */\n  optionOffset = optionIndex * optionHeight;\n\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar MatOptionModule = function MatOptionModule() {\n  _classCallCheck(this, MatOptionModule);\n};\n\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) {\n  return new (t || MatOptionModule)();\n};\n\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatOptionModule\n});\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, {\n    declarations: function declarations() {\n      return [MatOption, MatOptgroup];\n    },\n    imports: function imports() {\n      return [MatRippleModule, CommonModule, MatPseudoCheckboxModule];\n    },\n    exports: function exports() {\n      return [MatOption, MatOptgroup];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * InjectionToken that can be used to specify the global label options.\n */\n\n\nvar\n/** @type {?} */\nMAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n */\n\nvar\n/** @type {?} */\nJAN = 0,\n\n/** @type {?} */\nFEB = 1,\n\n/** @type {?} */\nMAR = 2,\n\n/** @type {?} */\nAPR = 3,\n\n/** @type {?} */\nMAY = 4,\n\n/** @type {?} */\nJUN = 5,\n\n/** @type {?} */\nJUL = 6,\n\n/** @type {?} */\nAUG = 7,\n\n/** @type {?} */\nSEP = 8,\n\n/** @type {?} */\nOCT = 9,\n\n/** @type {?} */\nNOV = 10,\n\n/** @type {?} */\nDEC = 11;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, MatLine, MatLineSetter, MatLineModule, MatOptionModule, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 }; //# sourceMappingURL=core.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/@angular/material/__ivy_ngcc__/esm2015/core.js"],"names":["NgModule","InjectionToken","Optional","Inject","isDevMode","inject","LOCALE_ID","Injectable","Directive","ElementRef","Input","NgZone","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","EventEmitter","Output","defineInjectable","BidiModule","coerceBooleanProperty","Subject","Observable","Platform","PlatformModule","supportsPassiveEventListeners","HammerGestureConfig","ANIMATION_MODULE_TYPE","ENTER","SPACE","CommonModule","ɵngcc0","ɵngcc1","ɵngcc2","_c0","_c1","MatOption_mat_pseudo_checkbox_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","selected","disabled","_c2","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS","providedIn","factory","MATERIAL_SANITY_CHECKS_FACTORY","MatCommonModule","_sanityChecksEnabled","_hasDoneGlobalChecks","_hasCheckedHammer","_document","document","_window","window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","console","warn","body","getComputedStyle","testElement","createElement","classList","add","appendChild","computedStyle","display","removeChild","ɵfac","MatCommonModule_Factory","t","ɵɵinject","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ctorParameters","undefined","decorators","args","ngJitMode","ɵɵsetNgModuleScope","exports","ngDevMode","ɵsetClassMetadata","mixinDisabled","base","_disabled","value","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","remove","mixinDisableRipple","_disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","mixinErrorState","errorState","stateChanges","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","Error","forEach","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","provide","useExisting","DateAdapter","_localeChanges","isDateInstance","isValid","invalid","locale","first","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","min","max","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","DEFAULT_MONTH_NAMES","ɵ0","i","String","DEFAULT_DATE_NAMES","range","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","length","valueFunction","valuesArray","Array","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDay","style","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","day","weekday","year","_createDateWithOverflow","createDate","result","parse","displayFormat","clone","setFullYear","Math","Object","assign","toDateString","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","obj","isNaN","getTime","NaN","n","slice","str","replace","d","UTC","getHours","getMinutes","getSeconds","getMilliseconds","format","NativeDateAdapter_Factory","ɵprov","ɵɵdefineInjectable","token","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","providers","useClass","ɵ0$1","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","ngInjectableDef","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ0$2","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","commonModule","events","_checkHammerIsAvailable","element","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","event","threshold","longpress","time","recognizeWith","options","recognizer","constructor","inheritances","item","GestureConfig_Factory","MatLine","MatLine_Factory","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","selector","host","MatLineSetter","_lines","_element","_setLineClass","changes","subscribe","count","_resetClasses","_setClass","className","isAdd","MatLineModule","MatLineModule_Factory","declarations","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","config","state","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","RippleRenderer","_target","_ngZone","elementRef","_isPointerDown","_triggerEvents","Map","_activeRipples","Set","_eventOptions","passive","onMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","onTouchStart","touches","onPointerUp","ripple","isVisible","terminateOnPointerUp","persistent","fadeOut","isBrowser","_containerElement","set","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","duration","speedFactor","backgroundColor","transitionDuration","enforceStyleRecalculation","transform","rippleRef","_mostRecentTransientRipple","runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","delete","size","rippleEl","opacity","parentNode","_triggerElement","_removeTriggerEvents","runOutsideAngular","fn","addEventListener","delay","setTimeout","removeEventListener","getPropertyValue","rect","distX","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","_trigger","trigger","fadeOutAll","baseSpeedFactor","setupTriggerEvents","configOrX","MatRipple_Factory","ɵɵdirectiveInject","hostVars","hostBindings","MatRipple_HostBindings","ɵɵclassProp","unbounded","inputs","exportAs","propDecorators","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","_animationMode","MatPseudoCheckbox_Factory","ɵcmp","ɵɵdefineComponent","MatPseudoCheckbox_HostBindings","decls","vars","template","MatPseudoCheckbox_Template","styles","encapsulation","changeDetection","None","OnPush","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","arguments","_labelId","MatOptgroup_Factory","ɵMatOptgroup_BaseFactory","MatOptgroup_HostBindings","ɵɵattribute","toString","label","features","ɵɵInheritDefinitionFeature","ngContentSelectors","consts","MatOptgroup_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵprojection","ɵɵadvance","ɵɵtextInterpolate","ɵɵgetInheritedFactory","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MAT_OPTION_PARENT_COMPONENT","MatOption","_changeDetectorRef","_parent","group","_selected","_active","_id","_mostRecentViewValue","onSelectionChange","_stateChanges","multiple","disableRipple","_getHostElement","textContent","trim","markForCheck","_emitSelectionChangeEvent","focus","viewValue","keyCode","_selectViaInteraction","preventDefault","emit","MatOption_Factory","MatOption_HostBindings","ɵɵlistener","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","$event","_handleKeydown","ɵɵhostProperty","id","_getTabIndex","active","outputs","MatOption_Template","ɵɵtemplate","directives","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","MatOptionModule","MatOptionModule_Factory","MAT_LABEL_GLOBAL_OPTIONS","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","ɵa1"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, defineInjectable } from '@angular/core';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, supportsPassiveEventListeners } from '@angular/cdk/platform';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [[[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c2 = [\"*\"];\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n */\nconst /** @type {?} */ MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} _sanityChecksEnabled\n     */\n    constructor(_sanityChecksEnabled) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Whether we've already checked for HammerJs availability.\n         */\n        this._hasCheckedHammer = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @return {?}\n     */\n    _areChecksEnabled() {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @return {?}\n     */\n    _isTestEnv() {\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n    /**\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        if (this._document && this._document.body && typeof getComputedStyle === 'function') {\n            const /** @type {?} */ testElement = this._document.createElement('div');\n            testElement.classList.add('mat-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n            const /** @type {?} */ computedStyle = getComputedStyle(testElement);\n            // In some situations the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn('Could not find Angular Material core theme. Most Material ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: https://material.angular.io/guide/theming');\n            }\n            this._document.body.removeChild(testElement);\n        }\n    }\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    _checkHammerIsAvailable() {\n        if (this._hasCheckedHammer || !this._window) {\n            return;\n        }\n        if (this._areChecksEnabled() && !this._window['Hammer']) {\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n        }\n        this._hasCheckedHammer = true;\n    }\n}\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8)); };\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule], BidiModule] });\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] },] },\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            const /** @type {?} */ colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            const /** @type {?} */ oldState = this.errorState;\n            const /** @type {?} */ parent = this._parentFormGroup || this._parentForm;\n            const /** @type {?} */ matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const /** @type {?} */ control = this.ngControl ? /** @type {?} */ (this.ngControl.control) : null;\n            const /** @type {?} */ newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    /** @type {?} */ ((this._pendingSubscribers)).push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true; /** @type {?} */\n            ((this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n */\nconst /** @type {?} */ MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 7.0.0\n */\nconst /** @type {?} */ MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let /** @type {?} */ firstValid = this.isValid(first);\n            let /** @type {?} */ secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Whether the browser supports the Intl API.\n */\nconst /** @type {?} */ SUPPORTS_INTL_API = typeof Intl != 'undefined';\n/**\n * The default month names to use if Intl API is not available.\n */\nconst /** @type {?} */ DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = i => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n */\nconst /** @type {?} */ DEFAULT_DATE_NAMES = range(31, ɵ0);\n/**\n * The default day of the week names to use if Intl API is not available.\n */\nconst /** @type {?} */ DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst /** @type {?} */ ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    const /** @type {?} */ valuesArray = Array(length);\n    for (let /** @type {?} */ i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from it's utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            const /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            const /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        let /** @type {?} */ result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign({}, displayFormat, { timeZone: 'utc' });\n            const /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        let /** @type {?} */ newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let /** @type {?} */ date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        const /** @type {?} */ result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        const /** @type {?} */ d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] },] },\n    { type: Platform, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc1.Platform }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nconst /** @type {?} */ MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); };\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); };\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\nErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ErrorStateMatcher, factory: ErrorStateMatcher.ɵfac, providedIn: 'root' });\n/** @nocollapse */ ErrorStateMatcher.ngInjectableDef = defineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n */\nconst /** @type {?} */ MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\nconst /** @type {?} */ ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = () => { }, ɵ1 = () => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n */\nconst /** @type {?} */ noopHammerInstance = {\n    on: ɵ0$2,\n    off: ɵ1,\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} commonModule\n     */\n    constructor(_hammerOptions, commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        const /** @type {?} */ hammer = typeof window !== 'undefined' ? (/** @type {?} */ (window)).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 7.0.0\n            return noopHammerInstance;\n        }\n        const /** @type {?} */ mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        const /** @type {?} */ pan = new hammer.Pan();\n        const /** @type {?} */ swipe = new hammer.Swipe();\n        const /** @type {?} */ press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        const /** @type {?} */ slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        const /** @type {?} */ longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return /** @type {?} */ (mc);\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        let /** @type {?} */ recognizer = new (/** @type {?} */ (base.constructor))(options);\n        inheritances.push(base);\n        inheritances.forEach(item => recognizer.recognizeWith(item));\n        return recognizer;\n    }\n}\nGestureConfig.ɵfac = function GestureConfig_Factory(t) { return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8)); };\nGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GestureConfig, factory: GestureConfig.ɵfac });\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] },] },\n    { type: MatCommonModule, decorators: [{ type: Optional },] },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_HAMMER_OPTIONS]\n            }] }, { type: MatCommonModule, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nclass MatLineSetter {\n    /**\n     * @param {?} _lines\n     * @param {?} _element\n     */\n    constructor(_lines, _element) {\n        this._lines = _lines;\n        this._element = _element;\n        this._setLineClass(this._lines.length);\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    _setLineClass(count) {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mat-${count}-line`, true);\n        }\n        else if (count > 3) {\n            this._setClass(`mat-multi-line`, true);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _resetClasses() {\n        this._setClass('mat-2-line', false);\n        this._setClass('mat-3-line', false);\n        this._setClass('mat-multi-line', false);\n    }\n    /**\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setClass(className, isAdd) {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        }\n        else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = function MatLineModule_Factory(t) { return new (t || MatLineModule)(); };\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0,\n    VISIBLE: 1,\n    FADING_OUT: 2,\n    HIDDEN: 3,\n};\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple reference.\n         */\n        this.state = RippleState.HIDDEN;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst /** @type {?} */ defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst /** @type {?} */ ignoreMouseEventsTimeout = 800;\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Options that apply to all the event listeners that are bound by the renderer.\n         */\n        this._eventOptions = supportsPassiveEventListeners() ? (/** @type {?} */ ({ passive: true })) : false;\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this.onMousedown = (event) => {\n            const /** @type {?} */ isSyntheticEvent = this._lastTouchStartEvent &&\n                Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!this._target.rippleDisabled && !isSyntheticEvent) {\n                this._isPointerDown = true;\n                this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n            }\n        };\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this.onTouchStart = (event) => {\n            if (!this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                this._lastTouchStartEvent = Date.now();\n                this._isPointerDown = true;\n                this.fadeInRipple(event.touches[0].clientX, event.touches[0].clientY, this._target.rippleConfig);\n            }\n        };\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this.onPointerUp = () => {\n            if (!this._isPointerDown) {\n                return;\n            }\n            this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            this._activeRipples.forEach(ripple => {\n                // By default, only ripples that are completely visible will fade out on pointer release.\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                const /** @type {?} */ isVisible = ripple.state === RippleState.VISIBLE ||\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            });\n        };\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = elementRef.nativeElement;\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents.set('mousedown', this.onMousedown);\n            this._triggerEvents.set('mouseup', this.onPointerUp);\n            this._triggerEvents.set('mouseleave', this.onPointerUp);\n            this._triggerEvents.set('touchstart', this.onTouchStart);\n            this._triggerEvents.set('touchend', this.onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        const /** @type {?} */ containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        const /** @type {?} */ animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const /** @type {?} */ radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const /** @type {?} */ offsetX = x - containerRect.left;\n        const /** @type {?} */ offsetY = y - containerRect.top;\n        const /** @type {?} */ duration = animationConfig.enterDuration / (config.speedFactor || 1);\n        const /** @type {?} */ ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color || null;\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        const /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this.runTimeoutOutsideZone(() => {\n            const /** @type {?} */ isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = RippleState.VISIBLE;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        const /** @type {?} */ wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-un the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        const /** @type {?} */ rippleEl = rippleRef.element;\n        const /** @type {?} */ animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this.runTimeoutOutsideZone(() => {\n            rippleRef.state = RippleState.HIDDEN; /** @type {?} */\n            ((rippleEl.parentNode)).removeChild(rippleEl);\n        }, animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} element\n     * @return {?}\n     */\n    setupTriggerEvents(element) {\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular(() => {\n            this._triggerEvents.forEach((fn, type) => element.addEventListener(type, fn, this._eventOptions));\n        });\n        this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            this._triggerEvents.forEach((fn, type) => {\n                /** @type {?} */ ((this._triggerElement)).removeEventListener(type, fn, this._eventOptions);\n            });\n        }\n    }\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token that can be used to specify the global ripple options.\n */\nconst /** @type {?} */ MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalOptions\n     * @param {?=} animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        /**\n         * If set, the normal duration of ripple animations is divided by this value. For example,\n         * setting it to 0.5 will cause the animations to take twice as long.\n         * A changed speedFactor will not modify the fade-out duration of the ripples.\n         * @deprecated Use the [matRippleAnimation] binding instead.\n         * \\@breaking-change 7.0.0\n         */\n        this.speedFactor = 1;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign({}, this._globalOptions.animation, this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n            speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the the trigger event listeners if ripples are enabled.\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], speedFactor: [\"matRippleSpeedFactor\", \"speedFactor\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: NgZone, },\n    { type: Platform, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] },] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] },] },\n];\nMatRipple.propDecorators = {\n    \"color\": [{ type: Input, args: ['matRippleColor',] },],\n    \"unbounded\": [{ type: Input, args: ['matRippleUnbounded',] },],\n    \"centered\": [{ type: Input, args: ['matRippleCentered',] },],\n    \"radius\": [{ type: Input, args: ['matRippleRadius',] },],\n    \"speedFactor\": [{ type: Input, args: ['matRippleSpeedFactor',] },],\n    \"animation\": [{ type: Input, args: ['matRippleAnimation',] },],\n    \"disabled\": [{ type: Input, args: ['matRippleDisabled',] },],\n    \"trigger\": [{ type: Input, args: ['matRippleTrigger',] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], speedFactor: [{\n            type: Input,\n            args: ['matRippleSpeedFactor']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); };\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule, PlatformModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:20px;height:20px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:7px;left:0;width:16px;opacity:1}.mat-pseudo-checkbox-checked::after{top:3px;left:1px;width:12px;height:5px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] },] },\n];\nMatPseudoCheckbox.propDecorators = {\n    \"state\": [{ type: Input },],\n    \"disabled\": [{ type: Input },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{ encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                styles: [\".mat-pseudo-checkbox{width:20px;height:20px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:7px;left:0;width:16px;opacity:1}.mat-pseudo-checkbox-checked::after{top:3px;left:1px;width:12px;height:5px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1}\"],\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                } }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); };\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\nconst /** @type {?} */ _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\nlet /** @type {?} */ _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) { return ɵMatOptgroup_BaseFactory(t || MatOptgroup); };\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", label: \"label\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 3, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.label);\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatOptgroup.propDecorators = {\n    \"label\": [{ type: Input },],\n};\nconst ɵMatOptgroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{ selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}</label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId'\n                } }]\n    }], null, { label: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet /** @type {?} */ _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token used to provide the parent component to options.\n */\nconst /** @type {?} */ MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._id = `mat-option-${_uniqueIdCounter++}`;\n        this._mostRecentViewValue = '';\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * The unique ID of the option.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    focus() {\n        const /** @type {?} */ element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const /** @type {?} */ viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8)); };\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx.selected.toString())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, exportAs: [\"matOption\"], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, directives: [ɵngcc2.NgIf, MatRipple, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media screen and (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: ChangeDetectorRef, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] },] },\n    { type: MatOptgroup, decorators: [{ type: Optional },] },\n];\nMatOption.propDecorators = {\n    \"value\": [{ type: Input },],\n    \"disabled\": [{ type: Input },],\n    \"onSelectionChange\": [{ type: Output },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{ selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': 'selected.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option'\n                },\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media screen and (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }] }]; }, { onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let /** @type {?} */ optionsArray = options.toArray();\n        let /** @type {?} */ groups = optionGroups.toArray();\n        let /** @type {?} */ groupCounter = 0;\n        for (let /** @type {?} */ i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    const /** @type {?} */ optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); };\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n */\nconst /** @type {?} */ MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n */\nconst /** @type {?} */ JAN = 0, /** @type {?} */ FEB = 1, /** @type {?} */ MAR = 2, /** @type {?} */ APR = 3, /** @type {?} */ MAY = 4, /** @type {?} */ JUN = 5, /** @type {?} */ JUL = 6, /** @type {?} */ AUG = 7, /** @type {?} */ SEP = 8, /** @type {?} */\nOCT = 9, /** @type {?} */ NOV = 10, /** @type {?} */ DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, MatLine, MatLineSetter, MatLineModule, MatOptionModule, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };\n\n//# sourceMappingURL=core.js.map"]},"metadata":{},"sourceType":"module"}