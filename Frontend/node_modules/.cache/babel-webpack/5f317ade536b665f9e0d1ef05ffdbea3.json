{"ast":null,"code":"/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\n\nvar Property = {\n  LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\n\nvar LayerGroup = function (BaseLayer) {\n  function LayerGroup(opt_options) {\n    var options = opt_options || {};\n    var baseOptions =\n    /** @type {module:ol/layer/Group~Options} */\n    assign({}, options);\n    delete baseOptions.layers;\n    var layers = options.layers;\n    BaseLayer.call(this, baseOptions);\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n\n    this.layersListenerKeys_ = [];\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n     */\n\n    this.listenerKeys_ = {};\n    listen(this, getChangeEventType(Property.LAYERS), this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {\n          unique: true\n        });\n      } else {\n        assert(layers instanceof Collection, 43); // Expected `layers` to be an array or a `Collection`\n\n        layers = layers;\n      }\n    } else {\n      layers = new Collection(undefined, {\n        unique: true\n      });\n    }\n\n    this.setLayers(layers);\n  }\n\n  if (BaseLayer) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create(BaseLayer && BaseLayer.prototype);\n  LayerGroup.prototype.constructor = LayerGroup;\n  /**\n   * @private\n   */\n\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_() {\n    this.changed();\n  };\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n\n\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_() {\n    var this$1 = this;\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n\n    for (var id in this$1.listenerKeys_) {\n      this$1.listenerKeys_[id].forEach(unlistenByKey);\n    }\n\n    clear(this.listenerKeys_);\n    var layersArray = layers.getArray();\n\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this$1.listenerKeys_[getUid(layer).toString()] = [listen(layer, ObjectEventType.PROPERTYCHANGE, this$1.handleLayerChange_, this$1), listen(layer, EventType.CHANGE, this$1.handleLayerChange_, this$1)];\n    }\n\n    this.changed();\n  };\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n\n\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_(collectionEvent) {\n    var layer =\n    /** @type {module:ol/layer/Base} */\n    collectionEvent.element;\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key] = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    this.changed();\n  };\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n\n\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_(collectionEvent) {\n    var layer =\n    /** @type {module:ol/layer/Base} */\n    collectionEvent.element;\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n\n\n  LayerGroup.prototype.getLayers = function getLayers() {\n    return (\n      /** @type {!module:ol/Collection.<module:ol/layer/Base>} */\n      this.get(Property.LAYERS)\n    );\n  };\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n\n\n  LayerGroup.prototype.setLayers = function setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LayerGroup.prototype.getLayersArray = function getLayersArray(opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray(opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n    var pos = states.length;\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n    var ownLayerState = this.getLayerState();\n\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LayerGroup.prototype.getSourceState = function getSourceState() {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer);\n\nexport default LayerGroup; //# sourceMappingURL=Group.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/layer/Group.js"],"names":["getUid","Collection","CollectionEventType","getChangeEventType","ObjectEventType","assert","listen","unlistenByKey","EventType","getIntersection","BaseLayer","assign","clear","SourceState","Property","LAYERS","LayerGroup","opt_options","options","baseOptions","layers","call","layersListenerKeys_","listenerKeys_","handleLayersChanged_","Array","isArray","slice","unique","undefined","setLayers","__proto__","prototype","Object","create","constructor","handleLayerChange_","changed","this$1","forEach","length","getLayers","push","ADD","handleLayersAdd_","REMOVE","handleLayersRemove_","id","layersArray","getArray","i","ii","layer","toString","PROPERTYCHANGE","CHANGE","collectionEvent","element","key","get","set","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","pos","ownLayerState","getLayerState","layerState","opacity","visible","maxResolution","Math","min","minResolution","max","extent","getSourceState","READY"],"mappings":"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","sourcesContent":["/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = (function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(layers instanceof Collection,\n          43); // Expected `layers` to be an array or a `Collection`\n        layers = layers;\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    var this$1 = this;\n\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this$1.listenerKeys_) {\n      this$1.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this$1.listenerKeys_[getUid(layer).toString()] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this$1.handleLayerChange_, this$1),\n        listen(layer, EventType.CHANGE, this$1.handleLayerChange_, this$1)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map"]},"metadata":{},"sourceType":"module"}