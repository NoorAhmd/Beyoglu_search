{"ast":null,"code":"/**\n * @module ol/renderer/canvas/Map\n */\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\nimport { includes, stableSort } from '../../array.js';\nimport { CLASS_UNSELECTABLE } from '../../css.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { visibleAtResolution } from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, { sortByZIndex } from '../Map.js';\nimport SourceState from '../../source/State.js';\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\n\nexport var layerRendererConstructors = [];\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\n\nvar CanvasMapRenderer = function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n    var container = map.getViewport();\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n\n    this.context_ = createCanvasContext2D();\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n    this.canvas_ = this.context_.canvas;\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.renderedVisible_ = true;\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n\n    this.transform_ = createTransform();\n  }\n\n  if (MapRenderer) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create(MapRenderer && MapRenderer.prototype);\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n\n  CanvasMapRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_(type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n      var transform = this.getTransform(frameState);\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio, extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext, frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n\n\n  CanvasMapRenderer.prototype.getTransform = function getTransform(frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame(frameState) {\n    var this$1 = this;\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n    this.calculateMatrices2D(frameState);\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii, layer, layerRenderer, layerState;\n\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      layer = layerState.layer;\n      layerRenderer =\n      /** @type {module:ol/renderer/canvas/Layer} */\n      this$1.getLayerRenderer(layer);\n\n      if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    var i;\n\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer =\n        /** @type {module:ol/renderer/canvas/Layer} */\n        this$1.getLayerRenderer(layer);\n        result = layerRenderer.forEachLayerAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n\n        if (result) {\n          return result;\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers(constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer);\n\nexport default CanvasMapRenderer; //# sourceMappingURL=Map.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/renderer/canvas/Map.js"],"names":["create","createTransform","apply","applyTransform","compose","composeTransform","includes","stableSort","CLASS_UNSELECTABLE","createCanvasContext2D","visibleAtResolution","RenderEvent","RenderEventType","rotateAtOffset","CanvasImmediateRenderer","MapRenderer","sortByZIndex","SourceState","layerRendererConstructors","CanvasMapRenderer","map","call","container","getViewport","context_","canvas_","canvas","style","width","height","display","className","insertBefore","childNodes","renderedVisible_","transform_","__proto__","prototype","Object","constructor","dispatchComposeEvent_","type","frameState","getMap","context","hasListener","extent","pixelRatio","viewState","rotation","transform","getTransform","vectorContext","composeEvent","dispatchEvent","dx1","dy1","sx","resolution","sy","angle","dx2","center","dy2","renderFrame","this$1","Math","round","size","clearRect","calculateMatrices2D","PRECOMPOSE","layerStatesArray","save","viewResolution","i","ii","layer","layerRenderer","layerState","length","getLayerRenderer","sourceState","READY","prepareFrame","composeFrame","restore","POSTCOMPOSE","scheduleRemoveUnusedLayerRenderers","scheduleExpireIconCache","forEachLayerAtPixel","pixel","hitTolerance","callback","thisArg","layerFilter","thisArg2","result","layerStates","numLayers","coordinate","pixelToCoordinateTransform","slice","forEachLayerAtCoordinate","undefined","registerLayerRenderers","constructors","ctor","push"],"mappings":"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","sourcesContent":["/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = (function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  CanvasMapRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii, layer, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      layer = layerState.layer;\n      layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map"]},"metadata":{},"sourceType":"module"}