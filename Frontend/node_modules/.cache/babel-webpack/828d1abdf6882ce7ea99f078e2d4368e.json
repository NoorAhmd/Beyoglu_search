{"ast":null,"code":"/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\n\nvar DragZoom = function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if (DragBox) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create(DragBox && DragBox.prototype);\n  DragZoom.prototype.constructor = DragZoom;\n  return DragZoom;\n}(DragBox);\n/**\n * @this {module:ol/interaction/DragZoom}\n */\n\n\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view =\n  /** @type {!module:ol/View} */\n  map.getView();\n  var size =\n  /** @type {!module:ol/size~Size} */\n  map.getSize();\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([map.getPixelFromCoordinate(getBottomLeft(extent)), map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(view.getResolutionForExtent(extent, size));\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\nexport default DragZoom; //# sourceMappingURL=DragZoom.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/interaction/dragzoom.js"],"names":["easeOut","shiftKeyOnly","createOrUpdateFromCoordinates","getBottomLeft","getCenter","getTopRight","scaleFromCenter","DragBox","DragZoom","opt_options","options","condition","call","className","onBoxEnd","duration_","duration","undefined","out_","out","__proto__","prototype","Object","create","constructor","map","getMap","view","getView","size","getSize","extent","getGeometry","getExtent","mapExtent","calculateExtent","boxPixelExtent","getPixelFromCoordinate","factor","getResolutionForExtent","resolution","constrainResolution","center","constrainCenter","animate","easing"],"mappings":"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","sourcesContent":["/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = (function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {module:ol/interaction/DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!module:ol/View} */ (map.getView());\n  var size = /** @type {!module:ol/size~Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map"]},"metadata":{},"sourceType":"module"}