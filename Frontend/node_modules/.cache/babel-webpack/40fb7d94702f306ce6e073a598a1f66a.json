{"ast":null,"code":"import _createClass from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/n.ah/Projects/ankamap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, Injectable, NgZone, defineInjectable, inject } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { combineLatest, fromEventPattern, Subject } from 'rxjs';\nimport { map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nvar LayoutModule = function LayoutModule() {\n  _classCallCheck(this, LayoutModule);\n};\n\nLayoutModule.ɵfac = function LayoutModule_Factory(t) {\n  return new (t || LayoutModule)();\n};\n\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: LayoutModule\n});\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n    type: NgModule\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Global registry for all dynamically-created, injected media queries.\n */\n\n\nvar\n/** @type {?} */\nmediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n */\n\nvar\n/** @type {?} */\nmediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\n\nvar MediaMatcher = /*#__PURE__*/function () {\n  /**\n   * @param {?} platform\n   */\n  function MediaMatcher(platform) {\n    _classCallCheck(this, MediaMatcher);\n\n    this.platform = platform;\n    this._matchMedia = this.platform.isBrowser && window.matchMedia ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n    // call it from a different scope.\n    window.matchMedia.bind(window) : noopMatchMedia;\n  }\n  /**\n   * Evaluates the given media query and returns the native MediaQueryList from which results\n   * can be retrieved.\n   * Confirms the layout engine will trigger for the selector query provided and returns the\n   * MediaQueryList for the query provided.\n   * @param {?} query\n   * @return {?}\n   */\n\n\n  _createClass(MediaMatcher, [{\n    key: \"matchMedia\",\n    value: function matchMedia(query) {\n      if (this.platform.WEBKIT) {\n        createEmptyStyleRule(query);\n      }\n\n      return this._matchMedia(query);\n    }\n  }]);\n\n  return MediaMatcher;\n}();\n\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) {\n  return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform));\n};\n\nMediaMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: MediaMatcher,\n  factory: MediaMatcher.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nMediaMatcher.ctorParameters = function () {\n  return [{\n    type: Platform\n  }];\n};\n/** @nocollapse */\n\n\nMediaMatcher.ngInjectableDef = defineInjectable({\n  factory: function MediaMatcher_Factory() {\n    return new MediaMatcher(inject(Platform));\n  },\n  token: MediaMatcher,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.Platform\n    }];\n  }, null);\n})();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\n\n\nfunction createEmptyStyleRule(query) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      document.head.appendChild(mediaQueryStyleNode);\n    }\n\n    if (mediaQueryStyleNode.sheet) {\n      /** @type {?} */\n      mediaQueryStyleNode.sheet.insertRule(\"@media \".concat(query, \" {.fx-query-test{ }}\"), 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (\n  /** @type {?} */\n  e) {\n    console.error(e);\n  }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\n\n\nfunction noopMatchMedia(query) {\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: function addListener() {},\n    removeListener: function removeListener() {}\n  };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Utility for checking the matching state of \\@media queries.\n */\n\n\nvar BreakpointObserver = /*#__PURE__*/function () {\n  /**\n   * @param {?} mediaMatcher\n   * @param {?} zone\n   */\n  function BreakpointObserver(mediaMatcher, zone) {\n    _classCallCheck(this, BreakpointObserver);\n\n    this.mediaMatcher = mediaMatcher;\n    this.zone = zone;\n    /**\n     * A map of all media queries currently being listened for.\n     */\n\n    this._queries = new Map();\n    /**\n     * A subject for all other observables to takeUntil based on.\n     */\n\n    this._destroySubject = new Subject();\n  }\n  /**\n   * Completes the active subject, signalling to all other observables to complete.\n   * @return {?}\n   */\n\n\n  _createClass(BreakpointObserver, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroySubject.next();\n\n      this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n\n  }, {\n    key: \"isMatched\",\n    value: function isMatched(value) {\n      var _this = this;\n\n      var\n      /** @type {?} */\n      queries = splitQueries(coerceArray(value));\n      return queries.some(function (mediaQuery) {\n        return _this._registerQuery(mediaQuery).mql.matches;\n      });\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n\n  }, {\n    key: \"observe\",\n    value: function observe(value) {\n      var _this2 = this;\n\n      var\n      /** @type {?} */\n      queries = splitQueries(coerceArray(value));\n      var\n      /** @type {?} */\n      observables = queries.map(function (query) {\n        return _this2._registerQuery(query).observable;\n      });\n      return combineLatest(observables).pipe(map(function (breakpointStates) {\n        return {\n          matches: breakpointStates.some(function (state) {\n            return state && state.matches;\n          })\n        };\n      }));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @param {?} query\n     * @return {?}\n     */\n\n  }, {\n    key: \"_registerQuery\",\n    value: function _registerQuery(query) {\n      var _this3 = this;\n\n      // Only set up a new MediaQueryList if it is not already being listened for.\n      if (this._queries.has(query)) {\n        return (\n          /** @type {?} */\n          this._queries.get(query)\n        );\n      }\n\n      var\n      /** @type {?} */\n      mql = this.mediaMatcher.matchMedia(query); // Create callback for match changes and add it is as a listener.\n\n      var\n      /** @type {?} */\n      queryObservable = fromEventPattern( // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n      // back into the zone because matchMedia is only included in Zone.js by loading the\n      // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n      // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n      // patches it.\n      function (listener) {\n        mql.addListener(function (e) {\n          return _this3.zone.run(function () {\n            return listener(e);\n          });\n        });\n      }, function (listener) {\n        mql.removeListener(function (e) {\n          return _this3.zone.run(function () {\n            return listener(e);\n          });\n        });\n      }).pipe(takeUntil(this._destroySubject), startWith(mql), map(function (nextMql) {\n        return {\n          matches: nextMql.matches\n        };\n      })); // Add the MediaQueryList to the set of queries.\n\n      var\n      /** @type {?} */\n      output = {\n        observable: queryObservable,\n        mql: mql\n      };\n\n      this._queries.set(query, output);\n\n      return output;\n    }\n  }]);\n\n  return BreakpointObserver;\n}();\n\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) {\n  return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nBreakpointObserver.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: BreakpointObserver,\n  factory: BreakpointObserver.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nBreakpointObserver.ctorParameters = function () {\n  return [{\n    type: MediaMatcher\n  }, {\n    type: NgZone\n  }];\n};\n/** @nocollapse */\n\n\nBreakpointObserver.ngInjectableDef = defineInjectable({\n  factory: function BreakpointObserver_Factory() {\n    return new BreakpointObserver(inject(MediaMatcher), inject(NgZone));\n  },\n  token: BreakpointObserver,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: MediaMatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\n\n\nfunction splitQueries(queries) {\n  return queries.map(function (query) {\n    return query.split(',');\n  }).reduce(function (a1, a2) {\n    return a1.concat(a2);\n  }).map(function (query) {\n    return query.trim();\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar\n/** @type {?} */\nBreakpoints = {\n  XSmall: '(max-width: 599px)',\n  Small: '(min-width: 600px) and (max-width: 959px)',\n  Medium: '(min-width: 960px) and (max-width: 1279px)',\n  Large: '(min-width: 1280px) and (max-width: 1919px)',\n  XLarge: '(min-width: 1920px)',\n  Handset: '(max-width: 599px) and (orientation: portrait), ' + '(max-width: 959px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',\n  HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n  HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { LayoutModule, BreakpointObserver, Breakpoints, MediaMatcher }; //# sourceMappingURL=layout.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/@angular/cdk/__ivy_ngcc__/esm2015/layout.js"],"names":["NgModule","Injectable","NgZone","defineInjectable","inject","Platform","combineLatest","fromEventPattern","Subject","map","startWith","takeUntil","coerceArray","ɵngcc0","ɵngcc1","LayoutModule","ɵfac","LayoutModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","ngDevMode","ɵsetClassMetadata","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","createEmptyStyleRule","MediaMatcher_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ctorParameters","ngInjectableDef","args","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointObserver","mediaMatcher","zone","_queries","Map","_destroySubject","next","complete","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observables","observable","pipe","breakpointStates","state","get","queryObservable","listener","run","nextMql","output","set","BreakpointObserver_Factory","split","reduce","a1","a2","concat","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, Injectable, NgZone, defineInjectable, inject } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { combineLatest, fromEventPattern, Subject } from 'rxjs';\nimport { map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵfac = function LayoutModule_Factory(t) { return new (t || LayoutModule)(); };\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected media queries.\n */\nconst /** @type {?} */ mediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n */\nlet /** @type {?} */ mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nclass MediaMatcher {\n    /**\n     * @param {?} platform\n     */\n    constructor(platform) {\n        this.platform = platform;\n        this._matchMedia = this.platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    matchMedia(query) {\n        if (this.platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nMediaMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MediaMatcher, factory: MediaMatcher.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nMediaMatcher.ctorParameters = () => [\n    { type: Platform, },\n];\n/** @nocollapse */ MediaMatcher.ngInjectableDef = defineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(inject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            (/** @type {?} */ (mediaQueryStyleNode.sheet))\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (/** @type {?} */ e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nclass BreakpointObserver {\n    /**\n     * @param {?} mediaMatcher\n     * @param {?} zone\n     */\n    constructor(mediaMatcher, zone) {\n        this.mediaMatcher = mediaMatcher;\n        this.zone = zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const /** @type {?} */ queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    observe(value) {\n        const /** @type {?} */ queries = splitQueries(coerceArray(value));\n        const /** @type {?} */ observables = queries.map(query => this._registerQuery(query).observable);\n        return combineLatest(observables).pipe(map((breakpointStates) => {\n            return {\n                matches: breakpointStates.some(state => state && state.matches)\n            };\n        }));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @param {?} query\n     * @return {?}\n     */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return /** @type {?} */ ((this._queries.get(query)));\n        }\n        const /** @type {?} */ mql = this.mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const /** @type {?} */ queryObservable = fromEventPattern(\n        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n        // back into the zone because matchMedia is only included in Zone.js by loading the\n        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n        // patches it.\n        (listener) => {\n            mql.addListener((e) => this.zone.run(() => listener(e)));\n        }, (listener) => {\n            mql.removeListener((e) => this.zone.run(() => listener(e)));\n        })\n            .pipe(takeUntil(this._destroySubject), startWith(mql), map((nextMql) => ({ matches: nextMql.matches })));\n        // Add the MediaQueryList to the set of queries.\n        const /** @type {?} */ output = { observable: queryObservable, mql: mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nBreakpointObserver.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BreakpointObserver, factory: BreakpointObserver.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher, },\n    { type: NgZone, },\n];\n/** @nocollapse */ BreakpointObserver.ngInjectableDef = defineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(inject(MediaMatcher), inject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((query) => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nconst /** @type {?} */ Breakpoints = {\n    XSmall: '(max-width: 599px)',\n    Small: '(min-width: 600px) and (max-width: 959px)',\n    Medium: '(min-width: 960px) and (max-width: 1279px)',\n    Large: '(min-width: 1280px) and (max-width: 1919px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599px) and (orientation: portrait), ' +\n        '(max-width: 959px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { LayoutModule, BreakpointObserver, Breakpoints, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map"]},"metadata":{},"sourceType":"module"}