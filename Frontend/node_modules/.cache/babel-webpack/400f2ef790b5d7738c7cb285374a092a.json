{"ast":null,"code":"/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\n\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\n\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\n\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\n\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n} //# sourceMappingURL=rotationconstraint.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/rotationconstraint.js"],"names":["toRadians","disable","rotation","delta","undefined","none","createSnapToN","n","theta","Math","PI","floor","createSnapToZero","opt_tolerance","tolerance","abs"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,SAAR,QAAwB,WAAxB;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,OAAT,CAAiBC,QAAjB,EAA2BC,KAA3B,EAAkC;AACvC,MAAID,QAAQ,KAAKE,SAAjB,EAA4B;AAC1B,WAAO,CAAP;AACD,GAFD,MAEO;AACL,WAAOA,SAAP;AACD;AACF;AAGD;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,IAAT,CAAcH,QAAd,EAAwBC,KAAxB,EAA+B;AACpC,MAAID,QAAQ,KAAKE,SAAjB,EAA4B;AAC1B,WAAOF,QAAQ,GAAGC,KAAlB;AACD,GAFD,MAEO;AACL,WAAOC,SAAP;AACD;AACF;AAGD;AACA;AACA;AACA;;AACA,OAAO,SAASE,aAAT,CAAuBC,CAAvB,EAA0B;AAC/B,MAAIC,KAAK,GAAG,IAAIC,IAAI,CAACC,EAAT,GAAcH,CAA1B;AACA;AACE;AACJ;AACA;AACA;AACA;AACI,cAASL,QAAT,EAAmBC,KAAnB,EAA0B;AACxB,UAAID,QAAQ,KAAKE,SAAjB,EAA4B;AAC1BF,QAAAA,QAAQ,GAAGO,IAAI,CAACE,KAAL,CAAW,CAACT,QAAQ,GAAGC,KAAZ,IAAqBK,KAArB,GAA6B,GAAxC,IAA+CA,KAA1D;AACA,eAAON,QAAP;AACD,OAHD,MAGO;AACL,eAAOE,SAAP;AACD;AACF;AAbH;AAcD;AAGD;AACA;AACA;AACA;;AACA,OAAO,SAASQ,gBAAT,CAA0BC,aAA1B,EAAyC;AAC9C,MAAIC,SAAS,GAAGD,aAAa,IAAIb,SAAS,CAAC,CAAD,CAA1C;AACA;AACE;AACJ;AACA;AACA;AACA;AACI,cAASE,QAAT,EAAmBC,KAAnB,EAA0B;AACxB,UAAID,QAAQ,KAAKE,SAAjB,EAA4B;AAC1B,YAAIK,IAAI,CAACM,GAAL,CAASb,QAAQ,GAAGC,KAApB,KAA8BW,SAAlC,EAA6C;AAC3C,iBAAO,CAAP;AACD,SAFD,MAEO;AACL,iBAAOZ,QAAQ,GAAGC,KAAlB;AACD;AACF,OAND,MAMO;AACL,eAAOC,SAAP;AACD;AACF;AAhBH;AAiBD,C,CAED","sourcesContent":["/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map"]},"metadata":{},"sourceType":"module"}