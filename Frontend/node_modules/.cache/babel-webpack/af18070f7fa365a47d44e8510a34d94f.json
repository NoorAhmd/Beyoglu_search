{"ast":null,"code":"/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { TRUE } from '../functions.js';\nimport { includes } from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n/**\n * @enum {string}\n */\n\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\n\nexport var TranslateEvent = function (Event) {\n  function TranslateEvent(type, features, coordinate) {\n    Event.call(this, type);\n    /**\n     * The features being translated.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @api\n     */\n\n    this.features = features;\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n\n    this.coordinate = coordinate;\n  }\n\n  if (Event) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create(Event && Event.prototype);\n  TranslateEvent.prototype.constructor = TranslateEvent;\n  return TranslateEvent;\n}(Event);\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @api\n */\n\nvar Translate = function (PointerInteraction) {\n  function Translate(opt_options) {\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent\n    });\n    var options = opt_options ? opt_options : {};\n    /**\n     * The last position we translated to.\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n\n    this.lastCoordinate_ = null;\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n\n    this.features_ = options.features !== undefined ? options.features : null;\n    /** @type {function(module:ol/layer/Layer): boolean} */\n\n    var layerFilter;\n\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n\n        layerFilter = function layerFilter(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n\n\n    this.layerFilter_ = layerFilter;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n    /**\n     * @type {module:ol/Feature}\n     * @private\n     */\n\n    this.lastFeature_ = null;\n    listen(this, getChangeEventType(InteractionProperty.ACTIVE), this.handleActiveChanged_, this);\n  }\n\n  if (PointerInteraction) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create(PointerInteraction && PointerInteraction.prototype);\n  Translate.prototype.constructor = Translate;\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {module:ol/pixel~Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {module:ol/PluggableMap} map Map to test the intersection on.\n   * @return {module:ol/Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(pixel, function (feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n  };\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n\n\n  Translate.prototype.getHitTolerance = function getHitTolerance() {\n    return this.hitTolerance_;\n  };\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n\n\n  Translate.prototype.setHitTolerance = function setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Translate.prototype.setMap = function setMap(map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n  /**\n   * @private\n   */\n\n\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_() {\n    this.updateState_(null);\n  };\n  /**\n   * @param {module:ol/PluggableMap} oldMap Old map.\n   * @private\n   */\n\n\n  Translate.prototype.updateState_ = function updateState_(oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n\n    if (!map || !active) {\n      map = map || oldMap;\n\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n\n  return Translate;\n}(PointerInteraction);\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\n\n\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n    var features = this.features_ || new Collection([this.lastFeature_]);\n    this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate));\n    return true;\n  }\n\n  return false;\n}\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\n\n\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n    var features = this.features_ || new Collection([this.lastFeature_]);\n    this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate));\n    return true;\n  }\n\n  return false;\n}\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\n\n\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    var newCoordinate = event.coordinate;\n    var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n    var features = this.features_ || new Collection([this.lastFeature_]);\n    features.forEach(function (feature) {\n      var geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate));\n  }\n}\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\n\n\nfunction handleMoveEvent(event) {\n  var elem = event.map.getViewport(); // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\nexport default Translate; //# sourceMappingURL=Translate.js.map","map":{"version":3,"sources":["/Users/n.ah/Projects/ankamap/node_modules/ol/interaction/Translate.js"],"names":["Collection","getChangeEventType","listen","Event","TRUE","includes","PointerInteraction","InteractionProperty","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","type","features","coordinate","call","__proto__","prototype","Object","create","constructor","Translate","opt_options","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","options","lastCoordinate_","features_","undefined","layerFilter","layers","layer","layerFilter_","hitTolerance_","hitTolerance","lastFeature_","ACTIVE","handleActiveChanged_","featuresAtPixel_","pixel","map","forEachFeatureAtPixel","feature","getArray","bind","getHitTolerance","setHitTolerance","setMap","oldMap","getMap","updateState_","active","getActive","elem","getViewport","classList","remove","event","dispatchEvent","newCoordinate","deltaX","deltaY","forEach","geom","getGeometry","translate","setGeometry","add"],"mappings":"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","sourcesContent":["/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport var TranslateEvent = (function (Event) {\n  function TranslateEvent(type, features, coordinate) {\n\n    Event.call(this, type);\n\n    /**\n     * The features being translated.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n  if ( Event ) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create( Event && Event.prototype );\n  TranslateEvent.prototype.constructor = TranslateEvent;\n\n  return TranslateEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @api\n */\nvar Translate = (function (PointerInteraction) {\n  function Translate(opt_options) {\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * The last position we translated to.\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  if ( PointerInteraction ) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Translate.prototype.constructor = Translate;\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {module:ol/pixel~Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {module:ol/PluggableMap} map Map to test the intersection on.\n   * @return {module:ol/Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_ (pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_ () {\n    this.updateState_(null);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function updateState_ (oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n\n  return Translate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    var newCoordinate = event.coordinate;\n    var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      var geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  var elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\nexport default Translate;\n\n//# sourceMappingURL=Translate.js.map"]},"metadata":{},"sourceType":"module"}